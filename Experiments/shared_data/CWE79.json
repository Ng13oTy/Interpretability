[{"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_54a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 111, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    (new CWE80_XSS__Servlet_connect_tcp_54b()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_54a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 116, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_54b", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_54b", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_54b()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_connect_tcp_54c()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_54c", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_54c", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_54c()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR4", ",", "VAR5", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 9, 8, 11, 8, 14, 2]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_connect_tcp_54d()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_54d", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_54d", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_54d()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_connect_tcp_54e()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_54e", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_54e", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_54e()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_54e", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_54e", "new_tokens": ["VAR14", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR12", ")"], "tokens_order": [77, 3, 159, 1, 2, 3, 167, 1, 78, 21, 52, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 9, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 11, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_listen_tcp_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 117, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_54b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_listen_tcp_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_54c()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_listen_tcp_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_54d()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR10", ",", "VAR11", ",", "VAR12", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 36, 8, 44, 8, 52, 2]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_listen_tcp_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR13", ",", "HttpServletRequest", "VAR14", ",", "HttpServletResponse", "VAR15", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 60, 8, 39, 77, 8, 40, 91, 2, 22, 23]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_54e()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR13", ",", "VAR14", ",", "VAR15", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 60, 8, 77, 8, 91, 2]}, {"id": 21, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR16", ",", "HttpServletRequest", "VAR17", ",", "HttpServletResponse", "VAR18", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 136, 8, 39, 173, 8, 40, 212, 2, 22, 23]}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_54e", "new_tokens": ["VAR16", "!=", "null"], "tokens_order": [136, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_54e", "new_tokens": ["VAR18", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR16", ")"], "tokens_order": [212, 3, 159, 1, 2, 3, 167, 1, 78, 21, 136, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": "-1", "source": 20, "target": 21, "type": "func_call_out"}, {"id": 0, "source": 21, "target": 22, "type": "DDG"}, {"id": 1, "source": 21, "target": 23, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_PropertiesFile_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 44, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 49, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 50, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 53, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 64, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 66, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 76, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["Container", "VAR5", "=", "new", "Container", "(", ")"], "tokens_order": [56, 14, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 77, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["VAR5", ".", "containerOne", "=", "VAR4"], "tokens_order": [14, 3, 70, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_PropertiesFile_67b", "mtdSignature": "badSink(testcases.CWE80_XSS.s02.CWE80_XSS__Servlet_PropertiesFile_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 78, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_PropertiesFile_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_PropertiesFile_67b()).badSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE80_XSS__Servlet_PropertiesFile_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE80_XSS__Servlet_PropertiesFile_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_PropertiesFile_67a", ".", "Container", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67b", "new_tokens": ["String", "VAR9", "=", "VAR6", ".", "containerOne"], "tokens_order": [20, 31, 4, 15, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_67b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 7, "target": 9, "type": "DDG"}, {"id": 8, "source": 0, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_database_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 46, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 49, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 50, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 53, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 66, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 78, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 90, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_database_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 100, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_database_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_database_71b()).badSink((Object) data, request, response)", "java_file": "CWE80_XSS__Servlet_database_71a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "(", "Object", ")", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 1, 85, 2, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_71b", "new_tokens": ["public", "void", "FUN2", "(", "Object", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 85, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE80_XSS__Servlet_database_71b", "new_tokens": ["String", "VAR9", "=", "(", "String", ")", "VAR6"], "tokens_order": [20, 31, 4, 1, 20, 2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_71b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_71b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE80_XSS__CWE182_Servlet_URLConnection_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 40, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 87, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["String", "[", "]", "VAR6", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 15, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 88, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["VAR6", "[", "2", "]", "=", "VAR5"], "tokens_order": [15, 29, 35, 30, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 89, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_URLConnection_66b()).badSink(dataArray, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", "[", "]", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 29, 30, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "new_tokens": ["String", "VAR10", "=", "VAR7", "[", "2", "]"], "tokens_order": [20, 36, 4, 18, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_66b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 9, "target": 10, "type": "DDG"}, {"id": 8, "source": 4, "target": 10, "type": "DDG"}, {"id": 9, "source": 9, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getQueryString_Servlet_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 44, "column": 5, "tokens": ["private", "String", "bad_source", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private String bad_source(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (this.badPrivate) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["private", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 50, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 53, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["StringTokenizer", "VAR6", "=", "new", "StringTokenizer", "(", "VAR3", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 15, 4, 7, 86, 1, 9, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 54, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR6", ".", "hasMoreTokens", "(", ")"], "tokens_order": [15, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 56, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["String", "VAR7", "=", "VAR6", ".", "nextToken", "(", ")"], "tokens_order": [20, 18, 4, 15, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 57, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR7", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [18, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 59, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR5", "=", "VAR7", ".", "substring", "(", "3", ")"], "tokens_order": [14, 4, 18, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 69, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 72, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_21", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 12, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 11, "target": 12, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}, {"id": 2, "source": 5, "target": 12, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 8, "target": 9, "type": "DDG"}, {"id": 7, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_listen_tcp_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using a listening tcp connection */\r\n        {\r\n            ServerSocket listener = null;\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            /* Read data using a listening tcp connection */\r\n            try {\r\n                listener = new ServerSocket(39543);\r\n                socket = listener.accept();\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* Close socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n                try {\r\n                    if (listener != null) {\r\n                        listener.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 51, "column": 21, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 52, "column": 21, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 56, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 57, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 60, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 73, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 85, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 98, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 29, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 110, "column": 29, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 120, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR7", "=", "VAR6"], "tokens_order": [18, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 123, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["String", "VAR6", "=", "VAR7"], "tokens_order": [20, 15, 4, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 125, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 128, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_31", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 14, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 15, "target": 16, "type": "DDG"}, {"id": 15, "source": 15, "target": 17, "type": "DDG"}, {"id": 16, "source": 0, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE80_XSS__Servlet_listen_tcp_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 117, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["String", "[", "]", "VAR7", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 18, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 118, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["VAR7", "[", "2", "]", "=", "VAR6"], "tokens_order": [18, 29, 35, 30, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 119, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_66b()).badSink(dataArray, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", "[", "]", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 29, 30, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 18, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE80_XSS__Servlet_listen_tcp_66b", "new_tokens": ["String", "VAR11", "=", "VAR8", "[", "2", "]"], "tokens_order": [20, 44, 4, 26, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_66b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_66b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 14, "target": 15, "type": "DDG"}, {"id": 13, "source": 5, "target": 15, "type": "DDG"}, {"id": 14, "source": 14, "target": 16, "type": "DDG"}, {"id": 15, "source": 0, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": 1, "source": 18, "target": 19, "type": "DDG"}, {"id": 2, "source": 18, "target": 20, "type": "DDG"}, {"id": 3, "source": 17, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b()).badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22a.badPublicStatic) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["StringTokenizer", "VAR6", "=", "new", "StringTokenizer", "(", "VAR3", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 15, 4, 7, 86, 1, 9, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["VAR6", ".", "hasMoreTokens", "(", ")"], "tokens_order": [15, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["String", "VAR7", "=", "VAR6", ".", "nextToken", "(", ")"], "tokens_order": [20, 18, 4, 15, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["VAR7", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [18, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["VAR5", "=", "VAR7", ".", "substring", "(", "3", ")"], "tokens_order": [14, 4, 18, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 51, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 53, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 12, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 5, "target": 12, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 12, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 8, "target": 9, "type": "DDG"}, {"id": 7, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 105, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 107, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 109, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 112, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 45, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR3", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [9, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 49, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 89, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 101, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 14, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 4, "target": 12, "type": "DDG"}, {"id": 8, "source": 4, "target": 13, "type": "DDG"}, {"id": 9, "source": 7, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 47, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 62, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 66, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 67, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 70, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 81, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 83, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 93, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 95, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 106, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 108, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 118, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["dataBad", "=", "VAR5"], "tokens_order": [296, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 119, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 36, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["String", "VAR8", "=", "dataBad"], "tokens_order": [20, 26, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 38, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 41, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_45", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}, {"id": 2, "source": 13, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 46, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 50, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 51, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 102, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["String", "[", "]", "VAR6", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 15, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 103, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["VAR6", "[", "2", "]", "=", "VAR5"], "tokens_order": [15, 29, 35, 30, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 104, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_66b()).badSink(dataArray, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", "[", "]", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 29, 30, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0, 0]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "new_tokens": ["String", "VAR10", "=", "VAR7", "[", "2", "]"], "tokens_order": [20, 36, 4, 18, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_66b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 11, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_getCookies_Servlet_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 38, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 39, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 42, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 52, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [11, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 53, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", "=", "new", "ObjectOutputStream", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 143, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 54, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [14, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 55, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["byte", "[", "]", "VAR6", "=", "VAR4", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 15, 4, 11, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 56, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getCookies_Servlet_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 67, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 69, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 79, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 81, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", "=", "new", "ByteArrayInputStream", "(", "VAR7", ")"], "tokens_order": [36, 4, 7, 146, 1, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", "=", "new", "ObjectInputStream", "(", "VAR10", ")"], "tokens_order": [44, 4, 7, 147, 1, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["String", "VAR12", "=", "(", "String", ")", "VAR11", ".", "readObject", "(", ")"], "tokens_order": [20, 52, 4, 1, 20, 2, 44, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR12", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 52, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", ".", "close", "(", ")"], "tokens_order": [44, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", ".", "close", "(", ")"], "tokens_order": [36, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 6, "target": 7, "type": "DDG"}, {"id": 7, "source": 5, "target": 8, "type": "DDG"}, {"id": 8, "source": 0, "target": 9, "type": "DDG"}, {"id": 9, "source": 8, "target": 9, "type": "DDG"}, {"id": 10, "source": 6, "target": 10, "type": "DDG"}, {"id": 11, "source": 6, "target": 11, "type": "DDG"}, {"id": 12, "source": 5, "target": 12, "type": "DDG"}, {"id": 13, "source": 5, "target": 13, "type": "DDG"}, {"id": "-1", "source": 9, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 16, "target": 17, "type": "DDG"}, {"id": 3, "source": 17, "target": 18, "type": "DDG"}, {"id": 4, "source": 17, "target": 19, "type": "DDG"}, {"id": 5, "source": 14, "target": 19, "type": "DDG"}, {"id": 6, "source": 16, "target": 20, "type": "DDG"}, {"id": 7, "source": 16, "target": 21, "type": "DDG"}, {"id": 8, "source": 15, "target": 22, "type": "DDG"}, {"id": 9, "source": 15, "target": 23, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_PropertiesFile_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 42, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 47, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 48, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 51, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 64, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 80, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [14, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 81, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", "=", "new", "ObjectOutputStream", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 143, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 82, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", ".", "writeObject", "(", "VAR4", ")"], "tokens_order": [15, 3, 144, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 83, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["byte", "[", "]", "VAR7", "=", "VAR5", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 18, 4, 14, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_PropertiesFile_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 84, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_PropertiesFile_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_PropertiesFile_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 95, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 97, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 107, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 109, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 17, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", "=", "new", "ByteArrayInputStream", "(", "VAR8", ")"], "tokens_order": [44, 4, 7, 146, 1, 26, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", "=", "new", "ObjectInputStream", "(", "VAR11", ")"], "tokens_order": [52, 4, 7, 147, 1, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["String", "VAR13", "=", "(", "String", ")", "VAR12", ".", "readObject", "(", ")"], "tokens_order": [20, 60, 4, 1, 20, 2, 52, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR13", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 60, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", ".", "close", "(", ")"], "tokens_order": [44, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 9, "type": "DDG"}, {"id": 7, "source": 8, "target": 9, "type": "DDG"}, {"id": 8, "source": 7, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 10, "target": 11, "type": "DDG"}, {"id": 11, "source": 8, "target": 12, "type": "DDG"}, {"id": 12, "source": 8, "target": 13, "type": "DDG"}, {"id": 13, "source": 7, "target": 14, "type": "DDG"}, {"id": 14, "source": 7, "target": 15, "type": "DDG"}, {"id": "-1", "source": 11, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 18, "target": 19, "type": "DDG"}, {"id": 3, "source": 19, "target": 20, "type": "DDG"}, {"id": 4, "source": 19, "target": 21, "type": "DDG"}, {"id": 5, "source": 16, "target": 21, "type": "DDG"}, {"id": 6, "source": 18, "target": 22, "type": "DDG"}, {"id": 7, "source": 18, "target": 23, "type": "DDG"}, {"id": 8, "source": 17, "target": 24, "type": "DDG"}, {"id": 9, "source": 17, "target": 25, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 32, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 4, "type": "DDG"}, {"id": 5, "source": 0, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE80_XSS__Servlet_connect_tcp_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 103, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR6", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 15, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 104, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 105, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 106, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 107, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_73b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_73b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getQueryString_Servlet_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_getQueryString_Servlet_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 39, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 40, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 42, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 43, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 45, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 51, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["Container", "VAR5", "=", "new", "Container", "(", ")"], "tokens_order": [56, 14, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 52, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR5", ".", "containerOne", "=", "VAR2"], "tokens_order": [14, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "mtdSignature": "badSink(testcases.CWE80_XSS.s01.CWE80_XSS__Servlet_getQueryString_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 53, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getQueryString_Servlet_67b()).badSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE80_XSS__Servlet_getQueryString_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE80_XSS__Servlet_getQueryString_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_getQueryString_Servlet_67a", ".", "Container", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "new_tokens": ["String", "VAR9", "=", "VAR6", ".", "containerOne"], "tokens_order": [20, 31, 4, 15, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_67b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 7, "target": 8, "type": "DDG"}, {"id": 4, "source": 1, "target": 8, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 9, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_File_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 101, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR7", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 18, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 102, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 103, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 104, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 105, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_File_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 18, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_File_74b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "get", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_74b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_74b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 5, "target": 13, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 14, "type": "DDG"}, {"id": 13, "source": 12, "target": 14, "type": "DDG"}, {"id": 14, "source": 5, "target": 15, "type": "DDG"}, {"id": 15, "source": 12, "target": 15, "type": "DDG"}, {"id": 16, "source": 0, "target": 16, "type": "DDG"}, {"id": 17, "source": 12, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": 1, "source": 18, "target": 19, "type": "DDG"}, {"id": 2, "source": 18, "target": 20, "type": "DDG"}, {"id": 3, "source": 17, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 33, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR3", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 9, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 34, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "0", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 35, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "1", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 36, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "2", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 37, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "get", "(", "2", ")"], "tokens_order": [20, 18, 4, 11, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_74b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 3, 288, 1, 289, 8, 99, 2, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 4, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": 6, "source": 2, "target": 5, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}, {"id": 8, "source": 2, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 8, "target": 9, "type": "DDG"}, {"id": 2, "source": 8, "target": 10, "type": "DDG"}, {"id": 3, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 39, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 64, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR3", "=", "CLS0", ".", "FUN2", "(", ")"], "tokens_order": [9, 4, 27, 3, 57, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 66, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 67, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 69, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR6", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [15, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 80, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 82, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 92, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 94, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 104, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 106, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 120, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 123, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_database_21", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 15, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 15, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 40, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 87, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["int", "VAR6", "=", "0"], "tokens_order": [19, 15, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 87, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR6", "<", "1"], "tokens_order": [15, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 87, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR6", "++"], "tokens_order": [15, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 89, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 92, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_17", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 11, "target": 10, "type": "DDG"}, {"id": 8, "source": 9, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}, {"id": 11, "source": 0, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 11, "type": "DDG"}, {"id": 13, "source": 9, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 42, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 58, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 59, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 63, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 64, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 67, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 78, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 80, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 90, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 92, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 103, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 105, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 115, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 117, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 127, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 37, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_41", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_16____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 110, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_16", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 112, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 117, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_16", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 121, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 124, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 0, "target": 4, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 38, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 39, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 42, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 52, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [11, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 53, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", "=", "new", "ObjectOutputStream", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 143, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 54, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [14, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 55, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["byte", "[", "]", "VAR6", "=", "VAR4", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 15, 4, 11, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 56, "column": 13, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 67, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 69, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 79, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 81, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", "=", "new", "ByteArrayInputStream", "(", "VAR7", ")"], "tokens_order": [36, 4, 7, 146, 1, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", "=", "new", "ObjectInputStream", "(", "VAR10", ")"], "tokens_order": [44, 4, 7, 147, 1, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["String", "VAR12", "=", "(", "String", ")", "VAR11", ".", "readObject", "(", ")"], "tokens_order": [20, 52, 4, 1, 20, 2, 44, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR12", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 52, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR11", ".", "close", "(", ")"], "tokens_order": [44, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_75b", "new_tokens": ["VAR10", ".", "close", "(", ")"], "tokens_order": [36, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 6, "target": 7, "type": "DDG"}, {"id": 7, "source": 5, "target": 8, "type": "DDG"}, {"id": 8, "source": 0, "target": 9, "type": "DDG"}, {"id": 9, "source": 8, "target": 9, "type": "DDG"}, {"id": 10, "source": 6, "target": 10, "type": "DDG"}, {"id": 11, "source": 6, "target": 11, "type": "DDG"}, {"id": 12, "source": 5, "target": 12, "type": "DDG"}, {"id": 13, "source": 5, "target": 13, "type": "DDG"}, {"id": "-1", "source": 9, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 16, "target": 17, "type": "DDG"}, {"id": 3, "source": 17, "target": 18, "type": "DDG"}, {"id": 4, "source": 17, "target": 19, "type": "DDG"}, {"id": 5, "source": 14, "target": 19, "type": "DDG"}, {"id": 6, "source": 16, "target": 20, "type": "DDG"}, {"id": 7, "source": 16, "target": 21, "type": "DDG"}, {"id": 8, "source": 15, "target": 22, "type": "DDG"}, {"id": 9, "source": 15, "target": 23, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 33, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 34, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 36, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 37, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 39, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 45, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 23, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 26, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 29, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_51b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 40, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 42, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_41", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR3", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 9, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using an outbound tcp connection */\r\n        {\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                /* Read data using an outbound tcp connection */\r\n                socket = new Socket(\"host.example.org\", 39544);\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* clean up socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 45, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 50, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 61, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 73, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 86, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 88, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 108, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 35, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 37, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 38, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "mtdSignature": "badSink(testcases.CWE80_XSS.s01.CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 39, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b()).badSink(dataContainer, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 44, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 47, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 2, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 1, "target": 6, "type": "DDG"}, {"id": 3, "source": 2, "target": 7, "type": "DDG"}, {"id": 4, "source": 5, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 3, "type": "DDG"}, {"id": 8, "source": 3, "target": 4, "type": "DDG"}, {"id": 9, "source": 3, "target": 5, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_listen_tcp_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__CWE182_Servlet_listen_tcp_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__CWE182_Servlet_listen_tcp_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__CWE182_Servlet_listen_tcp_22b()).badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 21, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR3", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [9, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 21, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR4", "=", "VAR3", ".", "accept", "(", ")"], "tokens_order": [11, 4, 9, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR7", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [18, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 102, "column": 29, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 104, "column": 29, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 118, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["VAR7", "=", "null"], "tokens_order": [18, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 120, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_22b", "new_tokens": ["return", "VAR7", ";"], "tokens_order": [84, 18, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 18, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 8, "target": 18, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 9, "type": "DDG"}, {"id": 7, "source": 7, "target": 10, "type": "DDG"}, {"id": 8, "source": 6, "target": 11, "type": "DDG"}, {"id": 9, "source": 6, "target": 12, "type": "DDG"}, {"id": 10, "source": 5, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 14, "type": "DDG"}, {"id": 12, "source": 4, "target": 15, "type": "DDG"}, {"id": 13, "source": 4, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 33, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR3", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 9, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 34, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["VAR3", ".", "add", "(", "0", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 35, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["VAR3", ".", "add", "(", "1", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 36, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["VAR3", ".", "add", "(", "2", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 37, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "remove", "(", "2", ")"], "tokens_order": [20, 18, 4, 11, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_73b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 4, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": 6, "source": 2, "target": 5, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}, {"id": 8, "source": 2, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 8, "target": 9, "type": "DDG"}, {"id": 2, "source": 8, "target": 10, "type": "DDG"}, {"id": 3, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_listen_tcp_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 117, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_53b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_listen_tcp_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_53c()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_listen_tcp_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_53d()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR10", ",", "VAR11", ",", "VAR12", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 36, 8, 44, 8, 52, 2]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR13", ",", "HttpServletRequest", "VAR14", ",", "HttpServletResponse", "VAR15", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 60, 8, 39, 77, 8, 40, 91, 2, 22, 23]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_53d", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_53d", "new_tokens": ["VAR15", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR13", ")"], "tokens_order": [91, 3, 159, 1, 2, 3, 167, 1, 78, 21, 60, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 19, "target": 21, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 100, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["int", "VAR7", "=", "0"], "tokens_order": [19, 18, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 100, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR7", "<", "1"], "tokens_order": [18, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 100, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR7", "++"], "tokens_order": [18, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 105, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_17", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 12, "target": 13, "type": "DDG"}, {"id": 11, "source": 14, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 15, "type": "DDG"}, {"id": 13, "source": 5, "target": 16, "type": "DDG"}, {"id": 14, "source": 0, "target": 16, "type": "DDG"}, {"id": 15, "source": 12, "target": 14, "type": "DDG"}, {"id": 16, "source": 14, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* retrieve the property */\r\n        {\r\n            Properties properties = new Properties();\r\n            FileInputStream streamFileInput = null;\r\n            try {\r\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n                properties.load(streamFileInput);\r\n                /* POTENTIAL FLAW: Read data from a .properties file */\r\n                data = properties.getProperty(\"data\");\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading object */\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 39, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 43, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 44, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 46, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 57, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 73, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "=", "null"], "tokens_order": [11, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 76, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 79, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 4, "target": 8, "type": "DDG"}, {"id": 2, "source": 7, "target": 9, "type": "DDG"}, {"id": 3, "source": 4, "target": 9, "type": "DDG"}, {"id": 4, "source": 0, "target": 9, "type": "DDG"}, {"id": 5, "source": 1, "target": 3, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 1, "target": 4, "type": "DDG"}, {"id": 8, "source": 2, "target": 5, "type": "DDG"}, {"id": 9, "source": 2, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 34, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 35, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 37, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 38, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 40, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 46, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR6", ",", "VAR7", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 14, 8, 15, 8, 18, 2, 0, 0, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR8", ",", "VAR9", ",", "VAR10", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 26, 8, 31, 8, 36, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR11", ",", "HttpServletRequest", "VAR12", ",", "HttpServletResponse", "VAR13", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 44, 8, 39, 52, 8, 40, 60, 2, 22, 23, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_53d", "new_tokens": ["VAR13", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [60, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 103, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 105, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 107, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 110, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 45, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR3", "=", "CLS0", ".", "FUN2", "(", ")"], "tokens_order": [9, 4, 27, 3, 57, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 48, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 49, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 52, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR6", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [15, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 63, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 75, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 87, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 99, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_database_42", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 14, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 4, "target": 12, "type": "DDG"}, {"id": 8, "source": 4, "target": 13, "type": "DDG"}, {"id": 9, "source": 7, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__CWE182_Servlet_PropertiesFile_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__CWE182_Servlet_PropertiesFile_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__CWE182_Servlet_PropertiesFile_22b()).badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 44, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 45, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 47, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [14, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 58, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 74, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 76, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 11, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 8, "type": "DDG"}, {"id": 6, "source": 5, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__CWE182_Servlet_URLConnection_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 43, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 49, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 96, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR6", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [15, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 97, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR7", "=", "new", "ObjectOutputStream", "(", "VAR6", ")"], "tokens_order": [18, 4, 7, 143, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 98, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR7", ".", "writeObject", "(", "VAR5", ")"], "tokens_order": [18, 3, 144, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 99, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["byte", "[", "]", "VAR8", "=", "VAR6", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 26, 4, 15, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 100, "column": 13, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_URLConnection_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR8", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 26, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 111, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 113, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 123, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 125, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23, 0, 0]}, {"id": 19, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR12", "=", "new", "ByteArrayInputStream", "(", "VAR9", ")"], "tokens_order": [52, 4, 7, 146, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR13", "=", "new", "ObjectInputStream", "(", "VAR12", ")"], "tokens_order": [60, 4, 7, 147, 1, 52, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["String", "VAR14", "=", "(", "String", ")", "VAR13", ".", "readObject", "(", ")"], "tokens_order": [20, 77, 4, 1, 20, 2, 60, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR11", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR14", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [44, 3, 159, 1, 2, 3, 167, 1, 78, 21, 77, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 26, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 27, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 9, "target": 10, "type": "DDG"}, {"id": 8, "source": 4, "target": 11, "type": "DDG"}, {"id": 9, "source": 10, "target": 11, "type": "DDG"}, {"id": 10, "source": 9, "target": 12, "type": "DDG"}, {"id": 11, "source": 0, "target": 13, "type": "DDG"}, {"id": 12, "source": 12, "target": 13, "type": "DDG"}, {"id": 13, "source": 10, "target": 14, "type": "DDG"}, {"id": 14, "source": 10, "target": 15, "type": "DDG"}, {"id": 15, "source": 9, "target": 16, "type": "DDG"}, {"id": 16, "source": 9, "target": 17, "type": "DDG"}, {"id": "-1", "source": 13, "target": 18, "type": "func_call_out"}, {"id": 0, "source": 18, "target": 19, "type": "DDG"}, {"id": 1, "source": 19, "target": 20, "type": "DDG"}, {"id": 2, "source": 20, "target": 21, "type": "DDG"}, {"id": 3, "source": 21, "target": 22, "type": "DDG"}, {"id": 4, "source": 21, "target": 23, "type": "DDG"}, {"id": 5, "source": 18, "target": 23, "type": "DDG"}, {"id": 6, "source": 20, "target": 24, "type": "DDG"}, {"id": 7, "source": 20, "target": 25, "type": "DDG"}, {"id": 8, "source": 19, "target": 26, "type": "DDG"}, {"id": 9, "source": 19, "target": 27, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_PropertiesFile_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 38, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 43, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 44, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 47, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 58, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_PropertiesFile_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 70, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_PropertiesFile_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_PropertiesFile_51b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 23, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 26, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 29, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_51b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_PropertiesFile_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 39, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 44, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 45, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_PropertiesFile_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 71, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_PropertiesFile_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_PropertiesFile_71b()).badSink((Object) data, request, response)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 11, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71b", "new_tokens": ["String", "VAR8", "=", "(", "String", ")", "VAR5"], "tokens_order": [20, 26, 4, 1, 20, 2, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_71b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 9, "target": 11, "type": "DDG"}, {"id": 3, "source": 8, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 49, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 54, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 55, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 58, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 69, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 71, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 81, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_41", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    (new CWE80_XSS__Servlet_getParameter_Servlet_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 30, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getParameter_Servlet_71b()).badSink((Object) data, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71b", "new_tokens": ["String", "VAR6", "=", "(", "String", ")", "VAR3"], "tokens_order": [20, 15, 4, 1, 20, 2, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_71b", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 4, "target": 5, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 3, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_File_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 43, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 51, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 52, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 53, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 93, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 95, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 105, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["Container", "VAR7", "=", "new", "Container", "(", ")"], "tokens_order": [56, 18, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 106, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR7", ".", "containerOne", "=", "VAR6"], "tokens_order": [18, 3, 70, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_67b", "mtdSignature": "badSink(testcases.CWE80_XSS.s01.CWE80_XSS__Servlet_File_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 107, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_67b()).badSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE80_XSS__Servlet_File_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE80_XSS__Servlet_File_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_File_67a", ".", "Container", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 16, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "containerOne"], "tokens_order": [20, 44, 4, 26, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 12, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 13, "type": "DDG"}, {"id": 12, "source": 12, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 16, "target": 17, "type": "DDG"}, {"id": 2, "source": 16, "target": 18, "type": "DDG"}, {"id": 3, "source": 15, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 42, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 50, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 56, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 57, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 62, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 73, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 75, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 85, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 87, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 97, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 37, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_41", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 87, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__CWE182_Servlet_PropertiesFile_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 92, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 94, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 95, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "mtdSignature": "goodG2BSink(testcases.CWE80_XSS.s01.CWE80_XSS__CWE182_Servlet_PropertiesFile_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 96, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_PropertiesFile_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE80_XSS__CWE182_Servlet_PropertiesFile_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__CWE182_Servlet_PropertiesFile_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 39, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE80_XSS__Servlet_listen_tcp_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 118, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR7", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 18, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 119, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 120, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 121, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 122, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_72b()).badSink(dataVector, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 20, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "remove", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_72b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_72b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 15, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 5, "target": 16, "type": "DDG"}, {"id": 15, "source": 14, "target": 16, "type": "DDG"}, {"id": 16, "source": 5, "target": 17, "type": "DDG"}, {"id": 17, "source": 14, "target": 17, "type": "DDG"}, {"id": 18, "source": 0, "target": 18, "type": "DDG"}, {"id": 19, "source": 14, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 20, "target": 21, "type": "DDG"}, {"id": 2, "source": 20, "target": 22, "type": "DDG"}, {"id": 3, "source": 19, "target": 22, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using an outbound tcp connection */\r\n        {\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                /* Read data using an outbound tcp connection */\r\n                socket = new Socket(\"host.example.org\", 39544);\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* clean up socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 45, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 50, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 61, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 73, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 86, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 88, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR5", "=", "\"foo\""], "tokens_order": [14, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 106, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 109, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_12", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 35, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 43, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [9, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 44, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", "=", "new", "ObjectOutputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 143, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 45, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [11, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 46, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["byte", "[", "]", "VAR5", "=", "VAR3", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 14, 4, 9, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 47, "column": 13, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 58, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 60, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 70, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 72, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", "=", "new", "ByteArrayInputStream", "(", "VAR6", ")"], "tokens_order": [31, 4, 7, 146, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", "=", "new", "ObjectInputStream", "(", "VAR9", ")"], "tokens_order": [36, 4, 7, 147, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["String", "VAR11", "=", "(", "String", ")", "VAR10", ".", "readObject", "(", ")"], "tokens_order": [20, 44, 4, 1, 20, 2, 36, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 3, 288, 1, 289, 8, 99, 2, 2]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", ".", "close", "(", ")"], "tokens_order": [36, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", ".", "close", "(", ")"], "tokens_order": [31, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 5, "type": "DDG"}, {"id": 5, "source": 0, "target": 6, "type": "DDG"}, {"id": 6, "source": 5, "target": 6, "type": "DDG"}, {"id": 7, "source": 3, "target": 7, "type": "DDG"}, {"id": 8, "source": 3, "target": 8, "type": "DDG"}, {"id": 9, "source": 2, "target": 9, "type": "DDG"}, {"id": 10, "source": 2, "target": 10, "type": "DDG"}, {"id": "-1", "source": 6, "target": 11, "type": "func_call_out"}, {"id": 0, "source": 11, "target": 12, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 13, "target": 14, "type": "DDG"}, {"id": 3, "source": 14, "target": 15, "type": "DDG"}, {"id": 4, "source": 14, "target": 16, "type": "DDG"}, {"id": 5, "source": 11, "target": 16, "type": "DDG"}, {"id": 6, "source": 13, "target": 17, "type": "DDG"}, {"id": 7, "source": 13, "target": 18, "type": "DDG"}, {"id": 8, "source": 12, "target": 19, "type": "DDG"}, {"id": 9, "source": 12, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 103, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 5, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_42____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 128, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = goodG2BSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_42", "mtdSignature": "goodG2BSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 130, "column": 9, "tokens": ["String", "data", "=", "goodG2BSource", "(", "request", ",", "response", ")"], "code": "String data = goodG2BSource(request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 132, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 135, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 122, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 5, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 124, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_connect_tcp_42", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 5, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 33, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 34, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 37, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 5, "type": "DDG"}, {"id": 5, "source": 1, "target": 6, "type": "DDG"}, {"id": 6, "source": 4, "target": 6, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE80_XSS__Servlet_getParameter_Servlet_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 33, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR3", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 9, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 34, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["VAR3", ".", "add", "(", "0", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 35, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["VAR3", ".", "add", "(", "1", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 36, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["VAR3", ".", "add", "(", "2", ",", "VAR2", ")"], "tokens_order": [9, 3, 53, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 37, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getParameter_Servlet_72b()).badSink(dataVector, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "remove", "(", "2", ")"], "tokens_order": [20, 18, 4, 11, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_72b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 4, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": 6, "source": 2, "target": 5, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}, {"id": 8, "source": 2, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 8, "target": 9, "type": "DDG"}, {"id": 2, "source": 8, "target": 10, "type": "DDG"}, {"id": 3, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 49, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 54, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 55, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 58, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 69, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 71, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_PropertiesFile_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 81, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_41", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_listen_tcp_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 51, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 52, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 56, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 57, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 60, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 73, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 85, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 98, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 110, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 126, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR7", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [18, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 127, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR8", "=", "new", "ObjectOutputStream", "(", "VAR7", ")"], "tokens_order": [26, 4, 7, 143, 1, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 128, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR8", ".", "writeObject", "(", "VAR6", ")"], "tokens_order": [26, 3, 144, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 129, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["byte", "[", "]", "VAR9", "=", "VAR7", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 31, 4, 18, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 130, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 31, 8, 5, 8, 10, 2, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 141, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 143, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR8", ".", "close", "(", ")"], "tokens_order": [26, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 153, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 155, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 24, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR13", "=", "new", "ByteArrayInputStream", "(", "VAR10", ")"], "tokens_order": [60, 4, 7, 146, 1, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR14", "=", "new", "ObjectInputStream", "(", "VAR13", ")"], "tokens_order": [77, 4, 7, 147, 1, 60, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 26, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["String", "VAR15", "=", "(", "String", ")", "VAR14", ".", "readObject", "(", ")"], "tokens_order": [20, 91, 4, 1, 20, 2, 77, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 27, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 28, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 2, 0, 0, 0, 0, 0]}, {"id": 29, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 30, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR14", ".", "close", "(", ")"], "tokens_order": [77, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 31, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 32, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 14, "target": 15, "type": "DDG"}, {"id": 13, "source": 5, "target": 16, "type": "DDG"}, {"id": 14, "source": 15, "target": 16, "type": "DDG"}, {"id": 15, "source": 14, "target": 17, "type": "DDG"}, {"id": 16, "source": 0, "target": 18, "type": "DDG"}, {"id": 17, "source": 17, "target": 18, "type": "DDG"}, {"id": 18, "source": 15, "target": 19, "type": "DDG"}, {"id": 19, "source": 15, "target": 20, "type": "DDG"}, {"id": 20, "source": 14, "target": 21, "type": "DDG"}, {"id": 21, "source": 14, "target": 22, "type": "DDG"}, {"id": "-1", "source": 18, "target": 23, "type": "func_call_out"}, {"id": 0, "source": 23, "target": 24, "type": "DDG"}, {"id": 1, "source": 24, "target": 25, "type": "DDG"}, {"id": 2, "source": 25, "target": 26, "type": "DDG"}, {"id": 3, "source": 26, "target": 27, "type": "DDG"}, {"id": 4, "source": 26, "target": 28, "type": "DDG"}, {"id": 5, "source": 23, "target": 28, "type": "DDG"}, {"id": 6, "source": 25, "target": 29, "type": "DDG"}, {"id": 7, "source": 25, "target": 30, "type": "DDG"}, {"id": 8, "source": 24, "target": 31, "type": "DDG"}, {"id": 9, "source": 24, "target": 32, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_getCookies_Servlet_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 33, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 34, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 37, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 41, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getCookies_Servlet_71b()).badSink((Object) data, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 6, 8, 5, 8, 10, 2]}, {"id": 6, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71b", "new_tokens": ["String", "VAR7", "=", "(", "String", ")", "VAR4"], "tokens_order": [20, 18, 4, 1, 20, 2, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_71b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 5, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": "-1", "source": 5, "target": 6, "type": "func_call_out"}, {"id": 0, "source": 6, "target": 7, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 7, "target": 9, "type": "DDG"}, {"id": 3, "source": 6, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 56, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 60, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 61, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 64, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 75, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 77, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 87, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 89, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 100, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 102, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 112, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 56, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 59, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 60, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 63, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 74, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 76, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 86, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 88, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 98, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 100, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_database_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 110, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["FUN2", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [57, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["private", "void", "FUN2", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [61, 24, 57, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_41", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_16____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 110, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_16", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 112, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_connect_tcp_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 117, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_16", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 121, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 124, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 0, "target": 4, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* read input from URLConnection */\r\n        {\r\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n                /* This will be reading the first \"line\" of the response body,\r\n                     * which could be very long if there are no newlines in the HTML */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 51, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR2", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [6, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 62, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 74, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 88, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 91, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 10, "type": "DDG"}, {"id": 1, "source": 1, "target": 10, "type": "DDG"}, {"id": 2, "source": 5, "target": 11, "type": "DDG"}, {"id": 3, "source": 1, "target": 11, "type": "DDG"}, {"id": 4, "source": 0, "target": 11, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 4, "target": 6, "type": "DDG"}, {"id": 9, "source": 4, "target": 7, "type": "DDG"}, {"id": 10, "source": 3, "target": 8, "type": "DDG"}, {"id": 11, "source": 3, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_61a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 42, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE80_XSS__CWE182_Servlet_connect_tcp_61b()).goodG2BSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_61b", "mtdSignature": "goodG2BSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 44, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_61b", "(", ")", ")", ".", "goodG2BSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE80_XSS__CWE182_Servlet_connect_tcp_61b()).goodG2BSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 49, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 111, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61b", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 5, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 113, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_61b", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 5, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE80_XSS__Servlet_getParameter_Servlet_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE80_XSS__Servlet_getParameter_Servlet_61b()).badSource(request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    return data;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 30, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [14, 4, 9, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_61b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_22a____goodG2B2", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 71, "column": 5, "tokens": ["private", "void", "goodG2B2", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if in the sink function */\r\nprivate void goodG2B2(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__Servlet_connect_tcp_22a.goodG2B2PublicStatic = true;\r\n    data = (new CWE80_XSS__Servlet_connect_tcp_22b()).goodG2B2Source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_22a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_22b", "mtdSignature": "goodG2B2Source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 76, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__Servlet_connect_tcp_22b", "(", ")", ")", ".", "goodG2B2Source", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__Servlet_connect_tcp_22b()).goodG2B2Source(request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 78, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 81, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 138, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_22b", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 144, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_connect_tcp_22b", "new_tokens": ["VAR3", "=", "null"], "tokens_order": [9, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 147, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_connect_tcp_22b", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 37, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 38, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 40, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 41, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 43, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 49, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR5", "=", "VAR2"], "tokens_order": [14, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 52, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["String", "VAR2", "=", "VAR5"], "tokens_order": [20, 6, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 54, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 57, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_31", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 6, "target": 7, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 8, "target": 9, "type": "DDG"}, {"id": 7, "source": 8, "target": 10, "type": "DDG"}, {"id": 8, "source": 0, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 5, "type": "DDG"}, {"id": 10, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* retrieve the property */\r\n        {\r\n            Properties properties = new Properties();\r\n            FileInputStream streamFileInput = null;\r\n            try {\r\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n                properties.load(streamFileInput);\r\n                /* POTENTIAL FLAW: Read data from a .properties file */\r\n                data = properties.getProperty(\"data\");\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading object */\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 39, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 43, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 44, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 46, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 57, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 73, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "=", "null"], "tokens_order": [11, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 76, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 79, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 4, "target": 9, "type": "DDG"}, {"id": 3, "source": 7, "target": 9, "type": "DDG"}, {"id": 4, "source": 0, "target": 9, "type": "DDG"}, {"id": 5, "source": 1, "target": 3, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 1, "target": 4, "type": "DDG"}, {"id": 8, "source": 2, "target": 5, "type": "DDG"}, {"id": 9, "source": 2, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_41____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 132, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 137, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_41", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 139, "column": 9, "tokens": ["goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 120, "column": 5, "tokens": ["private", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 123, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 126, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_41", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR3", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 9, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 44, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 46, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 48, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["private", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    return data;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["private", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 32, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["Cookie", "VAR6", "[", "]", "=", "VAR3", ".", "getCookies", "(", ")"], "tokens_order": [88, 15, 29, 30, 4, 9, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 33, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 36, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["VAR5", "=", "VAR6", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [14, 4, 15, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_42", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 9, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 9, "type": "DDG"}, {"id": 4, "source": 8, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_database_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 50, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 53, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 54, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 57, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 68, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 70, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 80, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 82, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 92, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 94, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 110, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR6", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [15, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 111, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR7", "=", "new", "ObjectOutputStream", "(", "VAR6", ")"], "tokens_order": [18, 4, 7, 143, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 112, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR7", ".", "writeObject", "(", "VAR5", ")"], "tokens_order": [18, 3, 144, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 113, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["byte", "[", "]", "VAR8", "=", "VAR6", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 26, 4, 15, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_database_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 114, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_database_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_database_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR8", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 26, 8, 5, 8, 10, 2, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 125, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 127, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 137, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 139, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_database_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["public", "void", "FUN2", "(", "byte", "[", "]", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 51, 29, 30, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 21, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR12", "=", "new", "ByteArrayInputStream", "(", "VAR9", ")"], "tokens_order": [52, 4, 7, 146, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR13", "=", "new", "ObjectInputStream", "(", "VAR12", ")"], "tokens_order": [60, 4, 7, 147, 1, 52, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["String", "VAR14", "=", "(", "String", ")", "VAR13", ".", "readObject", "(", ")"], "tokens_order": [20, 77, 4, 1, 20, 2, 60, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR11", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR14", ")"], "tokens_order": [44, 3, 159, 1, 2, 3, 167, 1, 78, 21, 77, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 26, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 27, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 28, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 29, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_database_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 15, "type": "DDG"}, {"id": 14, "source": 14, "target": 15, "type": "DDG"}, {"id": 15, "source": 12, "target": 16, "type": "DDG"}, {"id": 16, "source": 12, "target": 17, "type": "DDG"}, {"id": 17, "source": 11, "target": 18, "type": "DDG"}, {"id": 18, "source": 11, "target": 19, "type": "DDG"}, {"id": "-1", "source": 15, "target": 20, "type": "func_call_out"}, {"id": 0, "source": 20, "target": 21, "type": "DDG"}, {"id": 1, "source": 21, "target": 22, "type": "DDG"}, {"id": 2, "source": 22, "target": 23, "type": "DDG"}, {"id": 3, "source": 23, "target": 24, "type": "DDG"}, {"id": 4, "source": 23, "target": 25, "type": "DDG"}, {"id": 5, "source": 20, "target": 25, "type": "DDG"}, {"id": 6, "source": 22, "target": 26, "type": "DDG"}, {"id": 7, "source": 22, "target": 27, "type": "DDG"}, {"id": 8, "source": 21, "target": 28, "type": "DDG"}, {"id": 9, "source": 21, "target": 29, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 45, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 47, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 48, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 50, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 61, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 63, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 73, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 75, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 85, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 87, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 101, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 107, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 49, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 52, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 53, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 56, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 69, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 81, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 93, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 103, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR6", "=", "VAR5"], "tokens_order": [15, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 106, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["String", "VAR5", "=", "VAR6"], "tokens_order": [20, 14, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 108, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 111, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_31", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 12, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 103, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 108, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_URLConnection_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 110, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_URLConnection_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 111, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_URLConnection_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_67b", "mtdSignature": "goodG2BSink(testcases.CWE80_XSS.s02.CWE80_XSS__Servlet_URLConnection_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 112, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_URLConnection_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE80_XSS__Servlet_URLConnection_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE80_XSS__Servlet_URLConnection_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_URLConnection_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 39, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_URLConnection_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 39, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 64, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [9, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 66, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 67, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 69, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 80, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 82, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 92, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 94, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 105, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 107, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 121, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 124, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_connect_tcp_21", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 15, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 15, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 57, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 62, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 64, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 65, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "mtdSignature": "goodG2BSink(testcases.CWE80_XSS.s01.CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 66, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 39, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getQueryString_Servlet_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 34, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 35, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 37, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 38, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 40, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 50, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 53, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 56, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 8, "type": "DDG"}, {"id": 1, "source": 6, "target": 8, "type": "DDG"}, {"id": 2, "source": 7, "target": 8, "type": "DDG"}, {"id": 3, "source": 1, "target": 9, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 7, "target": 9, "type": "DDG"}, {"id": 6, "source": 0, "target": 9, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}, {"id": 10, "source": 4, "target": 5, "type": "DDG"}, {"id": 11, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 40, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 59, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 64, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 65, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 69, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 80, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 82, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 92, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 94, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 108, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 111, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_URLConnection_21", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 13, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_52a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_File_52b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_52b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 100, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_52b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_52b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_52a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_File_52c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_52b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_52c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_52c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_52c()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_52b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_52c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_52c", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_52c", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__Servlet_URLConnection_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__Servlet_URLConnection_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__Servlet_URLConnection_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__Servlet_URLConnection_22b()).badSource(request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 51, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 62, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 74, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 90, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 92, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_URLConnection_22b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 13, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_getCookies_Servlet_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 33, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 34, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 37, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 41, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getCookies_Servlet_53b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 6, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_getCookies_Servlet_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getCookies_Servlet_53c()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR5", ",", "VAR6", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 11, 8, 14, 8, 15, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_getCookies_Servlet_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getCookies_Servlet_53d()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53d", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_53d", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 5, "type": "DDG"}, {"id": 4, "source": 1, "target": 5, "type": "DDG"}, {"id": 5, "source": 4, "target": 5, "type": "DDG"}, {"id": "-1", "source": 5, "target": 6, "type": "func_call_out"}, {"id": 0, "source": 6, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_PropertiesFile_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 39, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 44, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 45, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 71, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_PropertiesFile_53b()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_PropertiesFile_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_PropertiesFile_53c()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR6", ",", "VAR7", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 14, 8, 15, 8, 18, 2, 0, 0, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_PropertiesFile_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_PropertiesFile_53d()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR8", ",", "VAR9", ",", "VAR10", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 26, 8, 31, 8, 36, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR11", ",", "HttpServletRequest", "VAR12", ",", "HttpServletResponse", "VAR13", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 44, 8, 39, 52, 8, 40, 60, 2, 22, 23, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53d", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_53d", "new_tokens": ["VAR13", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [60, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 43, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 44, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 47, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 51, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_41", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 5, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": "-1", "source": 5, "target": 6, "type": "func_call_out"}, {"id": 0, "source": 6, "target": 7, "type": "DDG"}, {"id": 1, "source": 6, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 43, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 44, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 47, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 51, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_41", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 5, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": "-1", "source": 5, "target": 6, "type": "func_call_out"}, {"id": 0, "source": 6, "target": 7, "type": "DDG"}, {"id": 1, "source": 6, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 46, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR3", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [9, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 48, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 49, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 51, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR2", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [6, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 62, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 74, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 86, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 103, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 12, "type": "DDG"}, {"id": 1, "source": 5, "target": 12, "type": "DDG"}, {"id": 2, "source": 1, "target": 13, "type": "DDG"}, {"id": 3, "source": 5, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 4, "target": 6, "type": "DDG"}, {"id": 9, "source": 4, "target": 7, "type": "DDG"}, {"id": 10, "source": 3, "target": 8, "type": "DDG"}, {"id": 11, "source": 3, "target": 9, "type": "DDG"}, {"id": 12, "source": 2, "target": 10, "type": "DDG"}, {"id": 13, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_URLConnection_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 88, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR6", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 15, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 89, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 90, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 91, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 92, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_URLConnection_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_URLConnection_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_URLConnection_74b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "get", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_74b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_74b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 10, "type": "DDG"}, {"id": 8, "source": 9, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 9, "target": 11, "type": "DDG"}, {"id": 11, "source": 4, "target": 12, "type": "DDG"}, {"id": 12, "source": 9, "target": 12, "type": "DDG"}, {"id": 13, "source": 0, "target": 13, "type": "DDG"}, {"id": 14, "source": 9, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_getParameter_Servlet_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 35, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 43, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [9, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 44, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", "=", "new", "ObjectOutputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 143, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 45, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [11, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 46, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["byte", "[", "]", "VAR5", "=", "VAR3", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 14, 4, 9, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 47, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getParameter_Servlet_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 58, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 60, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 70, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 72, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", "=", "new", "ByteArrayInputStream", "(", "VAR6", ")"], "tokens_order": [31, 4, 7, 146, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", "=", "new", "ObjectInputStream", "(", "VAR9", ")"], "tokens_order": [36, 4, 7, 147, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["String", "VAR11", "=", "(", "String", ")", "VAR10", ".", "readObject", "(", ")"], "tokens_order": [20, 44, 4, 1, 20, 2, 36, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR10", ".", "close", "(", ")"], "tokens_order": [36, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_75b", "new_tokens": ["VAR9", ".", "close", "(", ")"], "tokens_order": [31, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 5, "type": "DDG"}, {"id": 5, "source": 0, "target": 6, "type": "DDG"}, {"id": 6, "source": 5, "target": 6, "type": "DDG"}, {"id": 7, "source": 3, "target": 7, "type": "DDG"}, {"id": 8, "source": 3, "target": 8, "type": "DDG"}, {"id": 9, "source": 2, "target": 9, "type": "DDG"}, {"id": 10, "source": 2, "target": 10, "type": "DDG"}, {"id": "-1", "source": 6, "target": 11, "type": "func_call_out"}, {"id": 0, "source": 11, "target": 12, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 13, "target": 14, "type": "DDG"}, {"id": 3, "source": 14, "target": 15, "type": "DDG"}, {"id": 4, "source": 14, "target": 16, "type": "DDG"}, {"id": 5, "source": 11, "target": 16, "type": "DDG"}, {"id": 6, "source": 13, "target": 17, "type": "DDG"}, {"id": 7, "source": 13, "target": 18, "type": "DDG"}, {"id": 8, "source": 12, "target": 19, "type": "DDG"}, {"id": 9, "source": 12, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_45____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 140, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    this.dataGoodG2B = data;\r\n    goodG2BSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 145, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 147, "column": 9, "tokens": ["dataGoodG2B", "=", "data"], "code": "this.dataGoodG2B = data", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["dataGoodG2B", "=", "VAR2"], "tokens_order": [350, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "mtdSignature": "goodG2BSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 148, "column": 9, "tokens": ["goodG2BSink", "(", "request", ",", "response", ")"], "code": "goodG2BSink(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 127, "column": 5, "tokens": ["private", "void", "goodG2BSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void goodG2BSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataGoodG2B;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 129, "column": 9, "tokens": ["String", "data", "=", "dataGoodG2B"], "code": "String data = this.dataGoodG2B", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["String", "VAR5", "=", "dataGoodG2B"], "tokens_order": [20, 14, 4, 350, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 131, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 134, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR4", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [11, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 3, "target": 4, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 7, "type": "DDG"}, {"id": 2, "source": 4, "target": 7, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 48, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 54, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 62, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 63, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 64, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 69, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 80, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 82, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 92, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 94, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 104, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 106, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 116, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["dataBad", "=", "VAR6"], "tokens_order": [296, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 117, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 37, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["String", "VAR9", "=", "dataBad"], "tokens_order": [20, 31, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_45", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 5, "target": 12, "type": "DDG"}, {"id": 11, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 17, "type": "DDG"}, {"id": 2, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_database_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 101, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR6", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 15, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 102, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR6", ".", "put", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 103, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR6", ".", "put", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 104, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["VAR6", ".", "put", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_database_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 105, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_database_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_database_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_database_74a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_74b", "new_tokens": ["public", "void", "FUN2", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 63, 32, 50, 8, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_database_74b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "get", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_74b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_74b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 32, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getParameter_Servlet_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 1, "target": 4, "type": "DDG"}, {"id": 5, "source": 0, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    CWE80_XSS__CWE182_Servlet_PropertiesFile_81_base baseObject = new CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad();\r\n    baseObject.action(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 39, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 44, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 45, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["baseObject"], "line": 71, "column": 9, "tokens": ["CWE80_XSS__CWE182_Servlet_PropertiesFile_81_base", "baseObject", "=", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad", "(", ")"], "code": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_base baseObject = new CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["CLS0", "VAR5", "=", "new", "VAR", "(", ")"], "tokens_order": [27, 14, 4, 7, 78, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_base", "mtdSignature": "action(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response", "baseObject"], "line": 72, "column": 9, "tokens": ["baseObject", ".", "action", "(", "data", ",", "request", ",", "response", ")"], "code": "baseObject.action(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81a", "new_tokens": ["VAR5", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [14, 3, 25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "action", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void action(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_81_bad", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 7, "target": 8, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 9, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 46, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 50, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 51, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 102, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_54b()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_54c()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_54d()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_54e()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 52, 8, 60, 8, 77, 2, 0, 0, 0, 0]}, {"id": 18, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_54e", "new_tokens": ["VAR17", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [173, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": "-1", "source": 17, "target": 18, "type": "func_call_out"}, {"id": 0, "source": 18, "target": 19, "type": "DDG"}, {"id": 1, "source": 18, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_database_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 101, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR6", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 15, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 102, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 103, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 104, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 105, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_database_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_database_72b()).badSink(dataVector, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_72b", "new_tokens": ["public", "void", "FUN2", "(", "Vector", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 68, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE80_XSS__CWE182_Servlet_database_72b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_72b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_72b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 45, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 47, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 48, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 50, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 61, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 63, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 73, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 75, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 85, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 87, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 101, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 107, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 45, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 47, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 48, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 50, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 61, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 63, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 73, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 75, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 85, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 87, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 101, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR5", "=", "\"foo\""], "tokens_order": [14, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 108, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_12", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 90, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 92, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 94, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 97, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 39, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 45, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 46, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 51, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 62, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 74, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 86, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_URLConnection_42", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 12, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 7, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 103, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_File_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 105, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 107, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 110, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 37, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["File", "VAR3", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 9, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 66, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR7", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [18, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 87, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 99, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_File_42", "new_tokens": ["return", "VAR7", ";"], "tokens_order": [84, 18, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 15, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 7, "target": 8, "type": "DDG"}, {"id": 4, "source": 7, "target": 9, "type": "DDG"}, {"id": 5, "source": 7, "target": 10, "type": "DDG"}, {"id": 6, "source": 6, "target": 11, "type": "DDG"}, {"id": 7, "source": 6, "target": 12, "type": "DDG"}, {"id": 8, "source": 5, "target": 13, "type": "DDG"}, {"id": 9, "source": 5, "target": 14, "type": "DDG"}, {"id": 10, "source": 8, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 116, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_File_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 121, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 123, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 124, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_67b", "mtdSignature": "goodG2BSink(testcases.CWE80_XSS.s01.CWE80_XSS__Servlet_File_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 125, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_File_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE80_XSS__Servlet_File_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE80_XSS__Servlet_File_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_File_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 39, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_53a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 111, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_53b()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 116, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_53b", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_53b", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_53b()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_53c()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_53c", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_53c", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_53c()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR4", ",", "VAR5", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 9, 8, 11, 8, 14, 2, 0, 0, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 30, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_connect_tcp_53d()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_53d", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_connect_tcp_53d", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_connect_tcp_53d()).goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53d", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_53d", "new_tokens": ["VAR11", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [44, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 9, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE80_XSS__CWE182_Servlet_File_68a.data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            CWE80_XSS__CWE182_Servlet_File_68a.data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_File_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE80_XSS__CWE182_Servlet_File_68a", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "CWE80_XSS__CWE182_Servlet_File_68a.data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["data", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [301, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_File_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 100, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_File_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_File_68b()).badSink(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_File_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 23, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE80_XSS__CWE182_Servlet_File_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE80_XSS__CWE182_Servlet_File_68a"], "line": 25, "column": 9, "tokens": ["String", "data", "=", "CWE80_XSS__CWE182_Servlet_File_68a", ".", "data"], "code": "String data = CWE80_XSS__CWE182_Servlet_File_68a.data", "java_file": "CWE80_XSS__CWE182_Servlet_File_68b", "new_tokens": ["String", "VAR8", "=", "VAR9", ".", "VAR8"], "tokens_order": [20, 26, 4, 31, 3, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_68b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_68b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}, {"id": 2, "source": 13, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getCookies_Servlet_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__Servlet_getCookies_Servlet_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__Servlet_getCookies_Servlet_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__Servlet_getCookies_Servlet_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__Servlet_getCookies_Servlet_22b()).badSource(request, response)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (CWE80_XSS__Servlet_getCookies_Servlet_22a.badPublicStatic) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["Cookie", "VAR6", "[", "]", "=", "VAR3", ".", "getCookies", "(", ")"], "tokens_order": [88, 15, 29, 30, 4, 9, 3, 125, 1, 2, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "VAR6", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [14, 4, 15, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 48, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__Servlet_getCookies_Servlet_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 10, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 8, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 5, "target": 10, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_listen_tcp_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 118, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR7", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 18, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 119, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR7", ".", "put", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 120, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR7", ".", "put", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 121, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["VAR7", ".", "put", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 122, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 20, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "get", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_74b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_74b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 15, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 5, "target": 16, "type": "DDG"}, {"id": 15, "source": 14, "target": 16, "type": "DDG"}, {"id": 16, "source": 5, "target": 17, "type": "DDG"}, {"id": 17, "source": 14, "target": 17, "type": "DDG"}, {"id": 18, "source": 0, "target": 18, "type": "DDG"}, {"id": 19, "source": 14, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 20, "target": 21, "type": "DDG"}, {"id": 2, "source": 20, "target": 22, "type": "DDG"}, {"id": 3, "source": 19, "target": 22, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_File_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 37, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 87, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 99, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_51b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 23, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 26, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_51b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 29, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_51b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": 1, "source": 13, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 87, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 106, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 109, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 5, "target": 14, "type": "DDG"}, {"id": 3, "source": 12, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": 10, "source": 4, "target": 7, "type": "DDG"}, {"id": 11, "source": 3, "target": 8, "type": "DDG"}, {"id": 12, "source": 3, "target": 9, "type": "DDG"}, {"id": 13, "source": 2, "target": 10, "type": "DDG"}, {"id": 14, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_database_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 46, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR3", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [9, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 48, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 49, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 51, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR2", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [6, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 62, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 74, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 86, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 103, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_database_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 12, "type": "DDG"}, {"id": 1, "source": 1, "target": 12, "type": "DDG"}, {"id": 2, "source": 5, "target": 13, "type": "DDG"}, {"id": 3, "source": 1, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 4, "target": 6, "type": "DDG"}, {"id": 9, "source": 4, "target": 7, "type": "DDG"}, {"id": 10, "source": 3, "target": 8, "type": "DDG"}, {"id": 11, "source": 3, "target": 9, "type": "DDG"}, {"id": 12, "source": 2, "target": 10, "type": "DDG"}, {"id": 13, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 48, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE80_XSS__Servlet_getParameter_Servlet_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 53, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 55, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 56, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_67b", "mtdSignature": "goodG2BSink(testcases.CWE80_XSS.s01.CWE80_XSS__Servlet_getParameter_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 57, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getParameter_Servlet_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE80_XSS__Servlet_getParameter_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE80_XSS__Servlet_getParameter_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE80_XSS__Servlet_getParameter_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 39, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__CWE182_Servlet_File_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 41, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 49, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 50, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 51, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 56, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 93, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 109, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR7", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [18, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 110, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR8", "=", "new", "ObjectOutputStream", "(", "VAR7", ")"], "tokens_order": [26, 4, 7, 143, 1, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 111, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR8", ".", "writeObject", "(", "VAR6", ")"], "tokens_order": [26, 3, 144, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 112, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["byte", "[", "]", "VAR9", "=", "VAR7", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 31, 4, 18, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_File_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 113, "column": 13, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_File_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_File_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 31, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 124, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 126, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR8", ".", "close", "(", ")"], "tokens_order": [26, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 136, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 138, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23, 0, 0]}, {"id": 22, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 36, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR13", "=", "new", "ByteArrayInputStream", "(", "VAR10", ")"], "tokens_order": [60, 4, 7, 146, 1, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 37, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR14", "=", "new", "ObjectInputStream", "(", "VAR13", ")"], "tokens_order": [77, 4, 7, 147, 1, 60, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["String", "VAR15", "=", "(", "String", ")", "VAR14", ".", "readObject", "(", ")"], "tokens_order": [20, 91, 4, 1, 20, 2, 77, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 26, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 27, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 60, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 28, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 62, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR14", ".", "close", "(", ")"], "tokens_order": [77, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 29, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 72, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 30, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 74, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 12, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 14, "type": "DDG"}, {"id": 12, "source": 13, "target": 14, "type": "DDG"}, {"id": 13, "source": 12, "target": 15, "type": "DDG"}, {"id": 14, "source": 0, "target": 16, "type": "DDG"}, {"id": 15, "source": 15, "target": 16, "type": "DDG"}, {"id": 16, "source": 13, "target": 17, "type": "DDG"}, {"id": 17, "source": 13, "target": 18, "type": "DDG"}, {"id": 18, "source": 12, "target": 19, "type": "DDG"}, {"id": 19, "source": 12, "target": 20, "type": "DDG"}, {"id": "-1", "source": 16, "target": 21, "type": "func_call_out"}, {"id": 0, "source": 21, "target": 22, "type": "DDG"}, {"id": 1, "source": 22, "target": 23, "type": "DDG"}, {"id": 2, "source": 23, "target": 24, "type": "DDG"}, {"id": 3, "source": 24, "target": 25, "type": "DDG"}, {"id": 4, "source": 24, "target": 26, "type": "DDG"}, {"id": 5, "source": 21, "target": 26, "type": "DDG"}, {"id": 6, "source": 23, "target": 27, "type": "DDG"}, {"id": 7, "source": 23, "target": 28, "type": "DDG"}, {"id": 8, "source": 22, "target": 29, "type": "DDG"}, {"id": 9, "source": 22, "target": 30, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 47, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 62, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 66, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 67, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 70, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 81, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 83, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 93, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 95, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 106, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 108, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 118, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["dataBad", "=", "VAR5"], "tokens_order": [296, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 119, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 36, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["String", "VAR8", "=", "dataBad"], "tokens_order": [20, 26, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 38, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 41, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_45", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}, {"id": 2, "source": 13, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using an outbound tcp connection */\r\n        {\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                /* Read data using an outbound tcp connection */\r\n                socket = new Socket(\"host.example.org\", 39544);\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* clean up socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 45, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 50, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 61, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 73, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 86, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 88, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 108, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_File_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 103, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_File_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 5, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a.badPublicStatic = true;\r\n    data = (new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b()).badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 38, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22a.badPublicStatic) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["Cookie", "VAR6", "[", "]", "=", "VAR3", ".", "getCookies", "(", ")"], "tokens_order": [88, 15, 29, 30, 4, 9, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "VAR6", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [14, 4, 15, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 48, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 10, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 5, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 8, "target": 10, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_connect_tcp_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 103, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR6", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 15, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 104, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 105, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 106, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 107, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "get", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_74b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_74b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_URLConnection_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE80_XSS__Servlet_URLConnection_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 88, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR6", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 15, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 89, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 90, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 91, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_URLConnection_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 92, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_URLConnection_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_URLConnection_72b()).badSink(dataVector, request, response)", "java_file": "CWE80_XSS__Servlet_URLConnection_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_URLConnection_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE80_XSS__Servlet_URLConnection_72b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_URLConnection_72b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_URLConnection_72b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 10, "type": "DDG"}, {"id": 8, "source": 9, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 9, "target": 11, "type": "DDG"}, {"id": 11, "source": 4, "target": 12, "type": "DDG"}, {"id": 12, "source": 9, "target": 12, "type": "DDG"}, {"id": 13, "source": 0, "target": 13, "type": "DDG"}, {"id": 14, "source": 9, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 40, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["File", "VAR3", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 9, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 66, 1, 9, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 8, 42, 2, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR2", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [6, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 105, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 6, "target": 13, "type": "DDG"}, {"id": 1, "source": 1, "target": 13, "type": "DDG"}, {"id": 2, "source": 6, "target": 14, "type": "DDG"}, {"id": 3, "source": 1, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 5, "target": 6, "type": "DDG"}, {"id": 9, "source": 5, "target": 7, "type": "DDG"}, {"id": 10, "source": 5, "target": 8, "type": "DDG"}, {"id": 11, "source": 4, "target": 9, "type": "DDG"}, {"id": 12, "source": 4, "target": 10, "type": "DDG"}, {"id": 13, "source": 3, "target": 11, "type": "DDG"}, {"id": 14, "source": 3, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_75a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 156, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE80_XSS__Servlet_connect_tcp_75b()).goodG2BSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 161, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 169, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR3", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [9, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 170, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR4", "=", "new", "ObjectOutputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 143, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 171, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR4", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [11, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 172, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["byte", "[", "]", "VAR5", "=", "VAR3", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 14, 4, 9, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_connect_tcp_75b", "mtdSignature": "goodG2BSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 173, "column": 13, "tokens": ["(", "new", "CWE80_XSS__Servlet_connect_tcp_75b", "(", ")", ")", ".", "goodG2BSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_connect_tcp_75b()).goodG2BSink(dataSerialized, request, response)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 184, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 186, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 196, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 198, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 85, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 93, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR9", "=", "new", "ByteArrayInputStream", "(", "VAR6", ")"], "tokens_order": [31, 4, 7, 146, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 94, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR10", "=", "new", "ObjectInputStream", "(", "VAR9", ")"], "tokens_order": [36, 4, 7, 147, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 95, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["String", "VAR11", "=", "(", "String", ")", "VAR10", ".", "readObject", "(", ")"], "tokens_order": [20, 44, 4, 1, 20, 2, 36, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 97, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 100, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 2, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 117, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 119, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR10", ".", "close", "(", ")"], "tokens_order": [36, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 129, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 131, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE80_XSS__Servlet_connect_tcp_75b", "new_tokens": ["VAR9", ".", "close", "(", ")"], "tokens_order": [31, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 4, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 0, "target": 6, "type": "DDG"}, {"id": 5, "source": 5, "target": 6, "type": "DDG"}, {"id": 6, "source": 3, "target": 7, "type": "DDG"}, {"id": 7, "source": 3, "target": 8, "type": "DDG"}, {"id": 8, "source": 2, "target": 9, "type": "DDG"}, {"id": 9, "source": 2, "target": 10, "type": "DDG"}, {"id": "-1", "source": 6, "target": 11, "type": "func_call_out"}, {"id": 0, "source": 11, "target": 12, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 13, "target": 14, "type": "DDG"}, {"id": 3, "source": 14, "target": 15, "type": "DDG"}, {"id": 4, "source": 14, "target": 16, "type": "DDG"}, {"id": 5, "source": 11, "target": 16, "type": "DDG"}, {"id": 6, "source": 13, "target": 17, "type": "DDG"}, {"id": 7, "source": 13, "target": 18, "type": "DDG"}, {"id": 8, "source": 12, "target": 19, "type": "DDG"}, {"id": 9, "source": 12, "target": 20, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE80_XSS__Servlet_listen_tcp_68a.data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            CWE80_XSS__Servlet_listen_tcp_68a.data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_listen_tcp_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE80_XSS__Servlet_listen_tcp_68a", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "CWE80_XSS__Servlet_listen_tcp_68a.data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["data", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [301, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_listen_tcp_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 117, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_listen_tcp_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_listen_tcp_68b()).badSink(request, response)", "java_file": "CWE80_XSS__Servlet_listen_tcp_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 23, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE80_XSS__Servlet_listen_tcp_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0]}, {"id": 16, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE80_XSS__Servlet_listen_tcp_68a"], "line": 25, "column": 9, "tokens": ["String", "data", "=", "CWE80_XSS__Servlet_listen_tcp_68a", ".", "data"], "code": "String data = CWE80_XSS__Servlet_listen_tcp_68a.data", "java_file": "CWE80_XSS__Servlet_listen_tcp_68b", "new_tokens": ["String", "VAR8", "=", "VAR9", ".", "VAR8"], "tokens_order": [20, 26, 4, 31, 3, 26, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_68b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_68b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 16, "target": 18, "type": "DDG"}, {"id": 2, "source": 15, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 87, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 106, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 109, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 5, "target": 14, "type": "DDG"}, {"id": 3, "source": 12, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": 10, "source": 4, "target": 7, "type": "DDG"}, {"id": 11, "source": 3, "target": 8, "type": "DDG"}, {"id": 12, "source": 3, "target": 9, "type": "DDG"}, {"id": 13, "source": 2, "target": 10, "type": "DDG"}, {"id": 14, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_PropertiesFile_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 72, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR5", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 14, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 73, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR5", ".", "add", "(", "0", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 33, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 74, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR5", ".", "add", "(", "1", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 37, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 75, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["VAR5", ".", "add", "(", "2", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 35, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 76, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_PropertiesFile_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "new_tokens": ["String", "VAR9", "=", "VAR6", ".", "remove", "(", "2", ")"], "tokens_order": [20, 31, 4, 15, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_PropertiesFile_73b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 9, "type": "DDG"}, {"id": 8, "source": 7, "target": 9, "type": "DDG"}, {"id": 9, "source": 4, "target": 10, "type": "DDG"}, {"id": 10, "source": 7, "target": 10, "type": "DDG"}, {"id": 11, "source": 0, "target": 11, "type": "DDG"}, {"id": 12, "source": 7, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_URLConnection_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 88, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR6", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 15, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 89, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 90, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 91, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 92, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_URLConnection_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_73b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 10, "type": "DDG"}, {"id": 8, "source": 9, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 9, "target": 11, "type": "DDG"}, {"id": 11, "source": 4, "target": 12, "type": "DDG"}, {"id": 12, "source": 9, "target": 12, "type": "DDG"}, {"id": 13, "source": 0, "target": 13, "type": "DDG"}, {"id": 14, "source": 9, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_21____goodG2B2", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 175, "column": 5, "tokens": ["private", "void", "goodG2B2", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if in the sink function */\r\nprivate void goodG2B2(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.goodG2B2_private = true;\r\n    data = goodG2B2_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "mtdSignature": "goodG2B2_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 180, "column": 9, "tokens": ["data", "=", "goodG2B2_source", "(", "request", ",", "response", ")"], "code": "data = goodG2B2_source(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 182, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 185, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 197, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 203, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "null"], "tokens_order": [9, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 206, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_21", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_connect_tcp_12____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 116, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink by changing the \"if\" so that\r\n     * both branches use the GoodSource */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_connect_tcp_12", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 122, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_12", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 128, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__Servlet_connect_tcp_12", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 132, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_connect_tcp_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 135, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_connect_tcp_12", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2]}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 0, "target": 4, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_connect_tcp_41____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 132, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 137, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 139, "column": 9, "tokens": ["goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "goodG2BSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 120, "column": 5, "tokens": ["private", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0, 0, 0]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 123, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 126, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_connect_tcp_41", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR3", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 9, 3, 288, 1, 289, 8, 99, 2, 2]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE80_XSS__CWE182_Servlet_database_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE80_XSS__CWE182_Servlet_database_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE80_XSS__CWE182_Servlet_database_61b()).badSource(request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 46, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR3", "=", "CLS1", ".", "FUN2", "(", ")"], "tokens_order": [9, 4, 38, 3, 57, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 49, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 50, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 53, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR6", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [15, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 66, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 78, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 90, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE80_XSS__CWE182_Servlet_database_61b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 14, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 4, "target": 12, "type": "DDG"}, {"id": 8, "source": 4, "target": 13, "type": "DDG"}, {"id": 9, "source": 7, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 33, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 34, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 37, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 48, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 1, "target": 7, "type": "DDG"}, {"id": 4, "source": 5, "target": 7, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 42, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR4", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 11, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 43, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR4", ".", "put", "(", "0", ",", "VAR2", ")"], "tokens_order": [11, 3, 64, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 44, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR4", ".", "put", "(", "1", ",", "VAR2", ")"], "tokens_order": [11, 3, 64, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 45, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["VAR4", ".", "put", "(", "2", ",", "VAR2", ")"], "tokens_order": [11, 3, 64, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 46, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "new_tokens": ["String", "VAR8", "=", "VAR5", ".", "get", "(", "2", ")"], "tokens_order": [20, 26, 4, 14, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getCookies_Servlet_74b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 3, 288, 1, 289, 8, 99, 2, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 1, "target": 6, "type": "DDG"}, {"id": 5, "source": 5, "target": 6, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": 7, "source": 1, "target": 7, "type": "DDG"}, {"id": 8, "source": 5, "target": 7, "type": "DDG"}, {"id": 9, "source": 4, "target": 8, "type": "DDG"}, {"id": 10, "source": 1, "target": 8, "type": "DDG"}, {"id": 11, "source": 5, "target": 8, "type": "DDG"}, {"id": 12, "source": 0, "target": 9, "type": "DDG"}, {"id": 13, "source": 5, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_listen_tcp_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 117, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 120, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_listen_tcp_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 15, "type": "DDG"}, {"id": 14, "source": 0, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getParameter_Servlet_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE80_XSS__Servlet_getParameter_Servlet_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 33, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR3", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 9, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 34, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "0", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 35, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "1", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 36, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["VAR3", ".", "put", "(", "2", ",", "VAR2", ")"], "tokens_order": [9, 3, 64, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_getParameter_Servlet_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 37, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_getParameter_Servlet_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_getParameter_Servlet_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "get", "(", "2", ")"], "tokens_order": [20, 18, 4, 11, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getParameter_Servlet_74b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 2, "target": 4, "type": "DDG"}, {"id": 5, "source": 1, "target": 5, "type": "DDG"}, {"id": 6, "source": 2, "target": 5, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}, {"id": 8, "source": 2, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 8, "target": 9, "type": "DDG"}, {"id": 2, "source": 8, "target": 10, "type": "DDG"}, {"id": 3, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_getQueryString_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 49, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 52, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_getQueryString_Servlet_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 2, "target": 8, "type": "DDG"}, {"id": 3, "source": 1, "target": 9, "type": "DDG"}, {"id": 4, "source": 7, "target": 9, "type": "DDG"}, {"id": 5, "source": 2, "target": 9, "type": "DDG"}, {"id": 6, "source": 0, "target": 9, "type": "DDG"}, {"id": 7, "source": 0, "target": 3, "type": "DDG"}, {"id": 8, "source": 3, "target": 4, "type": "DDG"}, {"id": 9, "source": 3, "target": 5, "type": "DDG"}, {"id": 10, "source": 5, "target": 6, "type": "DDG"}, {"id": 11, "source": 5, "target": 7, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_File_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__Servlet_File_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 38, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 100, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_54b()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_File_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_54c()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_File_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_54d()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR10", ",", "VAR11", ",", "VAR12", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 36, 8, 44, 8, 52, 2]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__Servlet_File_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR13", ",", "HttpServletRequest", "VAR14", ",", "HttpServletResponse", "VAR15", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 60, 8, 39, 77, 8, 40, 91, 2, 22, 23]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__Servlet_File_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__Servlet_File_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__Servlet_File_54e()).badSink(data, request, response)", "java_file": "CWE80_XSS__Servlet_File_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR13", ",", "VAR14", ",", "VAR15", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 60, 8, 77, 8, 91, 2]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_File_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR16", ",", "HttpServletRequest", "VAR17", ",", "HttpServletResponse", "VAR18", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 136, 8, 39, 173, 8, 40, 212, 2, 22, 23]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_File_54e", "new_tokens": ["VAR16", "!=", "null"], "tokens_order": [136, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_File_54e", "new_tokens": ["VAR18", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR16", ")"], "tokens_order": [212, 3, 159, 1, 2, 3, 167, 1, 78, 21, 136, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 19, "target": 21, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 44, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 45, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 47, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 48, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 50, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 56, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_URLConnection_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_URLConnection_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 40, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 87, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_URLConnection_71b()).badSink((Object) data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 14, 8, 5, 8, 10, 2, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "new_tokens": ["String", "VAR9", "=", "(", "String", ")", "VAR6"], "tokens_order": [20, 31, 4, 1, 20, 2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_URLConnection_71b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE80_XSS__CWE182_Servlet_listen_tcp_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 118, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR7", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 18, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 119, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 120, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 121, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 122, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_listen_tcp_72b()).badSink(dataVector, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23, 0]}, {"id": 20, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "remove", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_listen_tcp_72b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 15, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 5, "target": 16, "type": "DDG"}, {"id": 15, "source": 14, "target": 16, "type": "DDG"}, {"id": 16, "source": 5, "target": 17, "type": "DDG"}, {"id": 17, "source": 14, "target": 17, "type": "DDG"}, {"id": 18, "source": 0, "target": 18, "type": "DDG"}, {"id": 19, "source": 14, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 20, "target": 21, "type": "DDG"}, {"id": 2, "source": 20, "target": 22, "type": "DDG"}, {"id": 3, "source": 19, "target": 22, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__Servlet_PropertiesFile_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* retrieve the property */\r\n        {\r\n            Properties properties = new Properties();\r\n            FileInputStream streamFileInput = null;\r\n            try {\r\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n                properties.load(streamFileInput);\r\n                /* POTENTIAL FLAW: Read data from a .properties file */\r\n                data = properties.getProperty(\"data\");\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading object */\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Display of data in web page without any encoding or validation */\r\n            response.getWriter().println(\"<br>bad(): data = \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 42, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 47, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 48, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 51, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 64, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 74, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR5", "=", "VAR4"], "tokens_order": [14, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 77, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["String", "VAR4", "=", "VAR5"], "tokens_order": [20, 11, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 79, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 82, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data)", "java_file": "CWE80_XSS__Servlet_PropertiesFile_31", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 7, "target": 8, "type": "DDG"}, {"id": 7, "source": 8, "target": 9, "type": "DDG"}, {"id": 8, "source": 8, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE80", "fun_info": "CWE80_XSS__CWE182_Servlet_database_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    (new CWE80_XSS__CWE182_Servlet_database_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 46, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 49, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 50, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 53, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 66, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 78, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 90, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 100, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_database_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_database_54b()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_54a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_database_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_54b", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_database_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_database_54c()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_54b", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 57, 1, 15, 8, 18, 8, 26, 2, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_database_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_54c", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_database_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_database_54d()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_54c", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN2", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 57, 1, 31, 8, 36, 8, 44, 2, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE80_XSS__CWE182_Servlet_database_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_54d", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE80_XSS__CWE182_Servlet_database_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 26, "column": 9, "tokens": ["(", "new", "CWE80_XSS__CWE182_Servlet_database_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE80_XSS__CWE182_Servlet_database_54e()).badSink(data, request, response)", "java_file": "CWE80_XSS__CWE182_Servlet_database_54d", "new_tokens": ["(", "new", "CLS4", "(", ")", ")", ".", "FUN2", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 164, 1, 2, 2, 3, 57, 1, 52, 8, 60, 8, 77, 2, 0, 0, 0, 0]}, {"id": 18, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Display of data in web page after using replaceAll() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */\r\n        response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"));\r\n    }\r\n    return;\r\n}", "java_file": "CWE80_XSS__CWE182_Servlet_database_54e", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE80_XSS__CWE182_Servlet_database_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad(): data = \"", "+", "data", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "code": "response.getWriter().println(\"<br>bad(): data = \" + data.replaceAll(\"(<script>)\", \"\"))", "java_file": "CWE80_XSS__CWE182_Servlet_database_54e", "new_tokens": ["VAR17", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", ".", "replaceAll", "(", "\"(<script>)\"", ",", "\"\"", ")", ")"], "tokens_order": [173, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 3, 288, 1, 289, 8, 99, 2, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": "-1", "source": 17, "target": 18, "type": "func_call_out"}, {"id": 0, "source": 18, "target": 19, "type": "DDG"}, {"id": 1, "source": 18, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 139, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 144, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 146, "column": 9, "tokens": ["goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 124, "column": 5, "tokens": ["private", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 127, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 133, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_41", "new_tokens": ["VAR5", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR3", ")"], "tokens_order": [14, 3, 290, 1, 291, 8, 78, 21, 9, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 41, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["File", "VAR3", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 9, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 48, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 66, 1, 9, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 49, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 8, 42, 2, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR2", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [6, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 109, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_16", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 6, "target": 13, "type": "DDG"}, {"id": 1, "source": 1, "target": 13, "type": "DDG"}, {"id": 2, "source": 6, "target": 14, "type": "DDG"}, {"id": 3, "source": 1, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 5, "target": 6, "type": "DDG"}, {"id": 9, "source": 5, "target": 7, "type": "DDG"}, {"id": 10, "source": 5, "target": 8, "type": "DDG"}, {"id": 11, "source": 4, "target": 9, "type": "DDG"}, {"id": 12, "source": 4, "target": 10, "type": "DDG"}, {"id": 13, "source": 3, "target": 11, "type": "DDG"}, {"id": 14, "source": 3, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 72, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["String", "[", "]", "VAR5", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 14, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 73, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["VAR5", "[", "2", "]", "=", "VAR4"], "tokens_order": [14, 29, 35, 30, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 74, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b()).badSink(dataArray, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", "[", "]", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 29, 30, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "new_tokens": ["String", "VAR9", "=", "VAR6", "[", "2", "]"], "tokens_order": [20, 31, 4, 15, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_66b", "new_tokens": ["VAR8", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 290, 1, 291, 8, 78, 21, 31, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 7, "target": 9, "type": "DDG"}, {"id": 8, "source": 0, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a.badPublicStatic = true;\r\n    data = (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 41, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [14, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 75, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 77, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 11, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 8, "type": "DDG"}, {"id": 6, "source": 5, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_53b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_53c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_53d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53d", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_53d", "new_tokens": ["VAR14", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR12", ")"], "tokens_order": [77, 3, 290, 1, 291, 8, 78, 21, 52, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 88, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 94, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_01", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_base baseObject = new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad();\r\n    baseObject.action(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["baseObject"], "line": 33, "column": 9, "tokens": ["CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_base", "baseObject", "=", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad", "(", ")"], "code": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_base baseObject = new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad()", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81a", "new_tokens": ["CLS0", "VAR3", "=", "new", "VAR", "(", ")"], "tokens_order": [27, 9, 4, 7, 78, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_base", "mtdSignature": "action(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response", "baseObject"], "line": 34, "column": 9, "tokens": ["baseObject", ".", "action", "(", "data", ",", "request", ",", "response", ")"], "code": "baseObject.action(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81a", "new_tokens": ["VAR3", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [9, 3, 25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "action", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void action(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_81_bad", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR4", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 11, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 2, "target": 3, "type": "DDG"}, {"id": "-1", "source": 3, "target": 4, "type": "func_call_out"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE81_XSS_Error_Message__Servlet_URLConnection_22a.badPublicStatic = true;\r\n    data = (new CWE81_XSS_Error_Message__Servlet_URLConnection_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE81_XSS_Error_Message__Servlet_URLConnection_22b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 42, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 91, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 93, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_22b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 13, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 104, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 109, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 111, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 112, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "mtdSignature": "goodG2BSink(testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_URLConnection_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 113, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE81_XSS_Error_Message__Servlet_URLConnection_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE81_XSS_Error_Message__Servlet_URLConnection_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 43, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_67b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 118, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["int", "VAR7", "=", "0"], "tokens_order": [19, 18, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 118, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR7", "<", "1"], "tokens_order": [18, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 118, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR7", "++"], "tokens_order": [18, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 120, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 126, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_17", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 15, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 16, "target": 15, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 5, "target": 17, "type": "DDG"}, {"id": 15, "source": 5, "target": 18, "type": "DDG"}, {"id": 16, "source": 0, "target": 18, "type": "DDG"}, {"id": 17, "source": 16, "target": 16, "type": "DDG"}, {"id": 18, "source": 14, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_database_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 101, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["String", "[", "]", "VAR6", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 15, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 102, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["VAR6", "[", "2", "]", "=", "VAR5"], "tokens_order": [15, 29, 35, 30, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 103, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_66b()).badSink(dataArray, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 15, 8, 5, 8, 10, 2, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66b", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR7", "[", "]", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 18, 29, 30, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66b", "new_tokens": ["String", "VAR10", "=", "VAR7", "[", "2", "]"], "tokens_order": [20, 36, 4, 18, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_66b", "new_tokens": ["VAR9", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 290, 1, 291, 8, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 11, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 47, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR6", ",", "VAR7", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 14, 8, 15, 8, 18, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_52c", "new_tokens": ["VAR10", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR8", ")"], "tokens_order": [36, 3, 290, 1, 291, 8, 78, 21, 26, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_listen_tcp_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 48, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 49, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 117, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_listen_tcp_51b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_51b", "new_tokens": ["VAR9", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [31, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["int", "VAR6", "=", "0"], "tokens_order": [19, 15, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR6", "<", "1"], "tokens_order": [15, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR6", "++"], "tokens_order": [15, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 111, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_17", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 13, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 14, "type": "DDG"}, {"id": 12, "source": 4, "target": 15, "type": "DDG"}, {"id": 13, "source": 0, "target": 15, "type": "DDG"}, {"id": 14, "source": 13, "target": 13, "type": "DDG"}, {"id": 15, "source": 11, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE81_XSS_Error_Message__Servlet_File_22a.badPublicStatic = true;\r\n    data = (new CWE81_XSS_Error_Message__Servlet_File_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_File_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_File_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE81_XSS_Error_Message__Servlet_File_22b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 41, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["File", "VAR3", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 9, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 48, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 66, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 49, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR7", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [18, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["VAR7", "=", "null"], "tokens_order": [18, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 107, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_File_22b", "new_tokens": ["return", "VAR7", ";"], "tokens_order": [84, 18, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 16, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 8, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 9, "type": "DDG"}, {"id": 7, "source": 7, "target": 10, "type": "DDG"}, {"id": 8, "source": 6, "target": 11, "type": "DDG"}, {"id": 9, "source": 6, "target": 12, "type": "DDG"}, {"id": 10, "source": 5, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE81_XSS_Error_Message__Servlet_database_68a.data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            CWE81_XSS_Error_Message__Servlet_database_68a.data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_database_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_database_68a", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "CWE81_XSS_Error_Message__Servlet_database_68a.data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["data", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [301, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_68b()).badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE81_XSS_Error_Message__Servlet_database_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68b", "new_tokens": ["public", "void", "FUN2", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 39, 14, 8, 40, 15, 2, 22, 23, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE81_XSS_Error_Message__Servlet_database_68a"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE81_XSS_Error_Message__Servlet_database_68a", ".", "data"], "code": "String data = CWE81_XSS_Error_Message__Servlet_database_68a.data", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68b", "new_tokens": ["String", "VAR7", "=", "VAR8", ".", "VAR7"], "tokens_order": [20, 18, 4, 26, 3, 18, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_68b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": 1, "source": 13, "target": 15, "type": "DDG"}, {"id": 2, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE81_XSS_Error_Message__Servlet_database_22a.badPublicStatic = true;\r\n    data = (new CWE81_XSS_Error_Message__Servlet_database_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_database_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE81_XSS_Error_Message__Servlet_database_22b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 47, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR3", "=", "CLS1", ".", "FUN2", "(", ")"], "tokens_order": [9, 4, 38, 3, 57, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 49, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 50, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 52, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR6", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [15, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 63, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 75, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 87, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_database_22b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 15, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 15, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 117, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_File_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 122, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 124, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 125, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_File_67b", "mtdSignature": "goodG2BSink(testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_File_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 126, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_File_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_File_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE81_XSS_Error_Message__Servlet_File_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE81_XSS_Error_Message__Servlet_File_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE81_XSS_Error_Message__Servlet_File_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 43, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_67b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_base baseObject = new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad();\r\n    baseObject.action(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["baseObject"], "line": 42, "column": 9, "tokens": ["CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_base", "baseObject", "=", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad", "(", ")"], "code": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_base baseObject = new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["CLS0", "VAR4", "=", "new", "VAR", "(", ")"], "tokens_order": [27, 11, 4, 7, 78, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_base", "mtdSignature": "action(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response", "baseObject"], "line": 43, "column": 9, "tokens": ["baseObject", ".", "action", "(", "data", ",", "request", ",", "response", ")"], "code": "baseObject.action(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81a", "new_tokens": ["VAR4", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [11, 3, 25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "action", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void action(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_81_bad", "new_tokens": ["VAR7", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [18, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 6, "type": "DDG"}, {"id": 4, "source": 1, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 6, "type": "DDG"}, {"id": 6, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 40, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 41, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 43, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 44, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 46, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 58, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR5", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [14, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 59, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR6", "=", "new", "ObjectOutputStream", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 143, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 60, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR6", ".", "writeObject", "(", "VAR2", ")"], "tokens_order": [15, 3, 144, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 61, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["byte", "[", "]", "VAR7", "=", "VAR5", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 18, 4, 14, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 62, "column": 13, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 73, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 75, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 85, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 87, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 17, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 37, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR11", "=", "new", "ByteArrayInputStream", "(", "VAR8", ")"], "tokens_order": [44, 4, 7, 146, 1, 26, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR12", "=", "new", "ObjectInputStream", "(", "VAR11", ")"], "tokens_order": [52, 4, 7, 147, 1, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 39, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["String", "VAR13", "=", "(", "String", ")", "VAR12", ".", "readObject", "(", ")"], "tokens_order": [20, 60, 4, 1, 20, 2, 52, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 47, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR10", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR13", ")"], "tokens_order": [36, 3, 290, 1, 291, 8, 78, 21, 60, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 64, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 66, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 76, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 78, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_75b", "new_tokens": ["VAR11", ".", "close", "(", ")"], "tokens_order": [44, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 7, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 1, "target": 9, "type": "DDG"}, {"id": 6, "source": 8, "target": 9, "type": "DDG"}, {"id": 7, "source": 7, "target": 10, "type": "DDG"}, {"id": 8, "source": 0, "target": 11, "type": "DDG"}, {"id": 9, "source": 10, "target": 11, "type": "DDG"}, {"id": 10, "source": 8, "target": 12, "type": "DDG"}, {"id": 11, "source": 8, "target": 13, "type": "DDG"}, {"id": 12, "source": 7, "target": 14, "type": "DDG"}, {"id": 13, "source": 7, "target": 15, "type": "DDG"}, {"id": 14, "source": 4, "target": 5, "type": "DDG"}, {"id": 15, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 11, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 18, "target": 19, "type": "DDG"}, {"id": 3, "source": 19, "target": 20, "type": "DDG"}, {"id": 4, "source": 19, "target": 21, "type": "DDG"}, {"id": 5, "source": 16, "target": 21, "type": "DDG"}, {"id": 6, "source": 18, "target": 22, "type": "DDG"}, {"id": 7, "source": 18, "target": 23, "type": "DDG"}, {"id": 8, "source": 17, "target": 24, "type": "DDG"}, {"id": 9, "source": 17, "target": 25, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 42, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b()).badSink((Object) data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 6, 8, 5, 8, 10, 2]}, {"id": 6, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "new_tokens": ["String", "VAR7", "=", "(", "String", ")", "VAR4"], "tokens_order": [20, 18, 4, 1, 20, 2, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_71b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 5, "type": "DDG"}, {"id": 4, "source": 1, "target": 5, "type": "DDG"}, {"id": 5, "source": 4, "target": 5, "type": "DDG"}, {"id": "-1", "source": 5, "target": 6, "type": "func_call_out"}, {"id": 0, "source": 6, "target": 7, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 7, "target": 9, "type": "DDG"}, {"id": 3, "source": 6, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_database_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_54b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_database_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54b", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_54c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54b", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 57, 1, 15, 8, 18, 8, 26, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_database_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54c", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_54d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54c", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN2", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 57, 1, 31, 8, 36, 8, 44, 2]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_database_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54d", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_54e()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54d", "new_tokens": ["(", "new", "CLS4", "(", ")", ")", ".", "FUN2", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 164, 1, 2, 2, 3, 57, 1, 52, 8, 60, 8, 77, 2]}, {"id": 18, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54e", "new_tokens": ["public", "void", "FUN2", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_54e", "new_tokens": ["VAR17", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR15", ")"], "tokens_order": [173, 3, 290, 1, 291, 8, 78, 21, 91, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": "-1", "source": 17, "target": 18, "type": "func_call_out"}, {"id": 0, "source": 18, "target": 19, "type": "DDG"}, {"id": 1, "source": 18, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 42, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["String", "[", "]", "VAR4", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 11, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 43, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["VAR4", "[", "2", "]", "=", "VAR2"], "tokens_order": [11, 29, 35, 30, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 44, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b()).badSink(dataArray, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", "[", "]", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 29, 30, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "new_tokens": ["String", "VAR8", "=", "VAR5", "[", "2", "]"], "tokens_order": [20, 26, 4, 14, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_66b", "new_tokens": ["VAR7", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 290, 1, 291, 8, 78, 21, 26, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 1, "target": 6, "type": "DDG"}, {"id": 6, "source": 5, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 9, "target": 11, "type": "DDG"}, {"id": 3, "source": 8, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0], "bad_source": true}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 42, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["int", "VAR4", "=", "0"], "tokens_order": [19, 11, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 42, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR4", "<", "1"], "tokens_order": [11, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 42, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR4", "++"], "tokens_order": [11, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 44, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 50, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_17", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 7, "target": 6, "type": "DDG"}, {"id": 4, "source": 5, "target": 6, "type": "DDG"}, {"id": 5, "source": 1, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": 9, "source": 0, "target": 9, "type": "DDG"}, {"id": 10, "source": 7, "target": 7, "type": "DDG"}, {"id": 11, "source": 5, "target": 7, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR4", ",", "VAR5", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 9, 8, 11, 8, 14, 2]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_53d", "new_tokens": ["VAR11", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR9", ")"], "tokens_order": [44, 3, 290, 1, 291, 8, 78, 21, 31, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 42, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 48, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 89, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR6", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 15, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 90, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 91, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 92, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["VAR6", ".", "put", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 93, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "get", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_74b", "new_tokens": ["VAR9", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 290, 1, 291, 8, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 10, "type": "DDG"}, {"id": 8, "source": 9, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 9, "target": 11, "type": "DDG"}, {"id": 11, "source": 4, "target": 12, "type": "DDG"}, {"id": 12, "source": 9, "target": 12, "type": "DDG"}, {"id": 13, "source": 0, "target": 13, "type": "DDG"}, {"id": 14, "source": 9, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_listen_tcp_53b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_53b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_listen_tcp_53b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_listen_tcp_53c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_53c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_listen_tcp_53c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_listen_tcp_53d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_53d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_listen_tcp_53d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR10", ",", "VAR11", ",", "VAR12", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 36, 8, 44, 8, 52, 2]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR13", ",", "HttpServletRequest", "VAR14", ",", "HttpServletResponse", "VAR15", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 60, 8, 39, 77, 8, 40, 91, 2, 22, 23]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53d", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_53d", "new_tokens": ["VAR15", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR13", ")"], "tokens_order": [91, 3, 290, 1, 291, 8, 78, 21, 60, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 19, "target": 21, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE81_XSS_Error_Message__Servlet_File_68a.data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            CWE81_XSS_Error_Message__Servlet_File_68a.data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_File_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_File_68a", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "CWE81_XSS_Error_Message__Servlet_File_68a.data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["data", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [301, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_File_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_File_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_File_68b()).badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE81_XSS_Error_Message__Servlet_File_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE81_XSS_Error_Message__Servlet_File_68a"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE81_XSS_Error_Message__Servlet_File_68a", ".", "data"], "code": "String data = CWE81_XSS_Error_Message__Servlet_File_68a.data", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68b", "new_tokens": ["String", "VAR8", "=", "VAR9", ".", "VAR8"], "tokens_order": [20, 26, 4, 31, 3, 26, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_68b", "new_tokens": ["VAR7", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 290, 1, 291, 8, 78, 21, 26, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}, {"id": 2, "source": 13, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* retrieve the property */\r\n        {\r\n            Properties properties = new Properties();\r\n            FileInputStream streamFileInput = null;\r\n            try {\r\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n                properties.load(streamFileInput);\r\n                /* POTENTIAL FLAW: Read data from a .properties file */\r\n                data = properties.getProperty(\"data\");\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading object */\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 41, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR2", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [6, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 73, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 79, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_16", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 8, "type": "DDG"}, {"id": 1, "source": 5, "target": 8, "type": "DDG"}, {"id": 2, "source": 1, "target": 9, "type": "DDG"}, {"id": 3, "source": 5, "target": 9, "type": "DDG"}, {"id": 4, "source": 0, "target": 9, "type": "DDG"}, {"id": 5, "source": 2, "target": 4, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 2, "target": 5, "type": "DDG"}, {"id": 8, "source": 3, "target": 6, "type": "DDG"}, {"id": 9, "source": 3, "target": 7, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 112, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_54b()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 117, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54b", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 119, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_54b", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_54b()).goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_54c()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54c", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_54c", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_54c()).goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR4", ",", "VAR5", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 9, 8, 11, 8, 14, 2]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_54d()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54d", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_54d", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_54d()).goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_54e()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54e", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_54e", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_54e()).goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 40, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 43, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54e", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 49, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_54e", "new_tokens": ["VAR14", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR12", ")"], "tokens_order": [77, 3, 290, 1, 291, 8, 78, 21, 52, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 9, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 11, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 40, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 107, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 113, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_02", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 15, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 5, "target": 14, "type": "DDG"}, {"id": 3, "source": 12, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": 10, "source": 4, "target": 7, "type": "DDG"}, {"id": 11, "source": 3, "target": 8, "type": "DDG"}, {"id": 12, "source": 3, "target": 9, "type": "DDG"}, {"id": 13, "source": 2, "target": 10, "type": "DDG"}, {"id": 14, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 51, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 59, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 64, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 65, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 68, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 79, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 81, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 91, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["dataBad", "=", "VAR4"], "tokens_order": [296, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 92, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 10, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 37, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["String", "VAR7", "=", "dataBad"], "tokens_order": [20, 18, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_45", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 8, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}, {"id": 2, "source": 9, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 50, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 56, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_12", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 6, "type": "DDG"}, {"id": 1, "source": 4, "target": 6, "type": "DDG"}, {"id": 2, "source": 5, "target": 6, "type": "DDG"}, {"id": 3, "source": 1, "target": 7, "type": "DDG"}, {"id": 4, "source": 4, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 111, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_51b()).goodG2BSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 116, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "mtdSignature": "goodG2BSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "(", ")", ")", ".", "goodG2BSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_51b()).goodG2BSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 39, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 48, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["VAR5", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR3", ")"], "tokens_order": [14, 3, 290, 1, 291, 8, 78, 21, 9, 2, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* read input from URLConnection */\r\n        {\r\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n                /* This will be reading the first \"line\" of the response body,\r\n                     * which could be very long if there are no newlines in the HTML */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 51, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 62, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 74, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 90, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR5", "=", "\"foo\""], "tokens_order": [14, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 94, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 100, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_12", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 4, "target": 11, "type": "DDG"}, {"id": 3, "source": 9, "target": 11, "type": "DDG"}, {"id": 4, "source": 0, "target": 11, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_52b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_52b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_52b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_52b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_52c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_52c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_52c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_52c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52c", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_52c", "new_tokens": ["VAR11", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR9", ")"], "tokens_order": [44, 3, 290, 1, 291, 8, 78, 21, 31, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 46, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 50, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 54, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 55, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 57, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 58, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 60, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 66, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["dataBad", "=", "VAR2"], "tokens_order": [296, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 67, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 30, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 10, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 32, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["String", "VAR7", "=", "dataBad"], "tokens_order": [20, 18, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 40, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_45", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 6, "target": 7, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 0, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 12, "type": "DDG"}, {"id": 2, "source": 9, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_71b()).badSink((Object) data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "new_tokens": ["String", "VAR9", "=", "(", "String", ")", "VAR6"], "tokens_order": [20, 31, 4, 1, 20, 2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_71b", "new_tokens": ["VAR8", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR9", ")"], "tokens_order": [26, 3, 290, 1, 291, 8, 78, 21, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using a listening tcp connection */\r\n        {\r\n            ServerSocket listener = null;\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            /* Read data using a listening tcp connection */\r\n            try {\r\n                listener = new ServerSocket(39543);\r\n                socket = listener.accept();\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* Close socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n                try {\r\n                    if (listener != null) {\r\n                        listener.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 35, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 21, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR3", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [9, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 21, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR4", "=", "VAR3", ".", "accept", "(", ")"], "tokens_order": [11, 4, 9, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 52, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 3, 58, 1, 2, 8, 42, 2]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 53, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR2", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [6, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 103, "column": 29, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 105, "column": 29, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 117, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 123, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_16", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 6, "target": 15, "type": "DDG"}, {"id": 1, "source": 1, "target": 15, "type": "DDG"}, {"id": 2, "source": 6, "target": 16, "type": "DDG"}, {"id": 3, "source": 1, "target": 16, "type": "DDG"}, {"id": 4, "source": 0, "target": 16, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 5, "target": 6, "type": "DDG"}, {"id": 9, "source": 5, "target": 7, "type": "DDG"}, {"id": 10, "source": 5, "target": 8, "type": "DDG"}, {"id": 11, "source": 4, "target": 9, "type": "DDG"}, {"id": 12, "source": 4, "target": 10, "type": "DDG"}, {"id": 13, "source": 3, "target": 11, "type": "DDG"}, {"id": 14, "source": 3, "target": 12, "type": "DDG"}, {"id": 15, "source": 2, "target": 13, "type": "DDG"}, {"id": 16, "source": 2, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["data", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [301, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 103, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_68b()).badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 14, 8, 40, 15, 2, 22, 23, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "data"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", ".", "data"], "code": "String data = CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["String", "VAR7", "=", "VAR8", ".", "VAR7"], "tokens_order": [20, 18, 4, 26, 3, 18, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": 1, "source": 13, "target": 15, "type": "DDG"}, {"id": 2, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 63, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 68, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 70, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 71, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "mtdSignature": "goodG2BSink(testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 72, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 43, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_67b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 50, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 52, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 54, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 60, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["private", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["private", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 34, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["StringTokenizer", "VAR6", "=", "new", "StringTokenizer", "(", "VAR3", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 15, 4, 7, 86, 1, 9, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 35, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR6", ".", "hasMoreTokens", "(", ")"], "tokens_order": [15, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 37, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["String", "VAR7", "=", "VAR6", ".", "nextToken", "(", ")"], "tokens_order": [20, 18, 4, 15, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 38, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR7", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [18, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 40, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["VAR5", "=", "VAR7", ".", "substring", "(", "3", ")"], "tokens_order": [14, 4, 18, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_42", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 11, "type": "DDG"}, {"id": 4, "source": 10, "target": 11, "type": "DDG"}, {"id": 5, "source": 8, "target": 9, "type": "DDG"}, {"id": 6, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE81_XSS_Error_Message__Servlet_listen_tcp_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE81_XSS_Error_Message__Servlet_listen_tcp_61b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR3", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [9, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR4", "=", "VAR3", ".", "accept", "(", ")"], "tokens_order": [11, 4, 9, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR7", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [18, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 118, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_61b", "new_tokens": ["return", "VAR7", ";"], "tokens_order": [84, 18, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 17, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 7, "target": 8, "type": "DDG"}, {"id": 4, "source": 7, "target": 9, "type": "DDG"}, {"id": 5, "source": 7, "target": 10, "type": "DDG"}, {"id": 6, "source": 6, "target": 11, "type": "DDG"}, {"id": 7, "source": 6, "target": 12, "type": "DDG"}, {"id": 8, "source": 5, "target": 13, "type": "DDG"}, {"id": 9, "source": 5, "target": 14, "type": "DDG"}, {"id": 10, "source": 4, "target": 15, "type": "DDG"}, {"id": 11, "source": 4, "target": 16, "type": "DDG"}, {"id": 12, "source": 8, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a.data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a.data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["StringTokenizer", "VAR2", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 6, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["VAR2", ".", "hasMoreTokens", "(", ")"], "tokens_order": [6, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["String", "VAR3", "=", "VAR2", ".", "nextToken", "(", ")"], "tokens_order": [20, 9, 4, 6, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["VAR3", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [9, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "token"], "line": 41, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a.data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["data", "=", "VAR3", ".", "substring", "(", "3", ")"], "tokens_order": [301, 4, 9, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 47, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b()).badSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a", ".", "data"], "code": "String data = CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68a.data", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "new_tokens": ["String", "VAR6", "=", "VAR7", ".", "VAR6"], "tokens_order": [20, 15, 4, 18, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_68b", "new_tokens": ["VAR5", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR6", ")"], "tokens_order": [14, 3, 290, 1, 291, 8, 78, 21, 15, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 6, "type": "DDG"}, {"id": 4, "source": 3, "target": 4, "type": "DDG"}, {"id": 5, "source": 3, "target": 5, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}, {"id": 2, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE81_XSS_Error_Message__Servlet_URLConnection_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE81_XSS_Error_Message__Servlet_URLConnection_61b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 88, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_61b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 12, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 7, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 147, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    this.dataGoodG2B = data;\r\n    goodG2BSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 152, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 154, "column": 9, "tokens": ["dataGoodG2B", "=", "data"], "code": "this.dataGoodG2B = data", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["dataGoodG2B", "=", "VAR2"], "tokens_order": [350, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "mtdSignature": "goodG2BSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 155, "column": 9, "tokens": ["goodG2BSink", "(", "request", ",", "response", ")"], "code": "goodG2BSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 131, "column": 5, "tokens": ["private", "void", "goodG2BSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void goodG2BSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataGoodG2B;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23]}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 133, "column": 9, "tokens": ["String", "data", "=", "dataGoodG2B"], "code": "String data = this.dataGoodG2B", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["String", "VAR5", "=", "dataGoodG2B"], "tokens_order": [20, 14, 4, 350, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 135, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 141, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_45", "new_tokens": ["VAR4", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [11, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 3, "target": 4, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 7, "type": "DDG"}, {"id": 2, "source": 4, "target": 7, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE81_XSS_Error_Message__Servlet_File_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 40, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 48, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 49, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 92, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 102, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR7", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 18, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 103, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 104, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 105, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["VAR7", ".", "put", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 64, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_File_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 106, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_File_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_File_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 18, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "get", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_74b", "new_tokens": ["VAR10", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 290, 1, 291, 8, 78, 21, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 5, "target": 13, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 14, "type": "DDG"}, {"id": 13, "source": 12, "target": 14, "type": "DDG"}, {"id": 14, "source": 5, "target": 15, "type": "DDG"}, {"id": 15, "source": 12, "target": 15, "type": "DDG"}, {"id": 16, "source": 0, "target": 16, "type": "DDG"}, {"id": 17, "source": 12, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": 1, "source": 18, "target": 19, "type": "DDG"}, {"id": 2, "source": 18, "target": 20, "type": "DDG"}, {"id": 3, "source": 17, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 72, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR6", ",", "VAR7", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 14, 8, 15, 8, 18, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR8", ",", "VAR9", ",", "VAR10", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 26, 8, 31, 8, 36, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR11", ",", "HttpServletRequest", "VAR12", ",", "HttpServletResponse", "VAR13", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 44, 8, 39, 52, 8, 40, 60, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR11", ",", "VAR12", ",", "VAR13", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 44, 8, 52, 8, 60, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR14", ",", "HttpServletRequest", "VAR15", ",", "HttpServletResponse", "VAR16", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 77, 8, 39, 91, 8, 40, 136, 2, 22, 23]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_54e", "new_tokens": ["VAR16", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR14", ")"], "tokens_order": [136, 3, 290, 1, 291, 8, 78, 21, 77, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 34, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 36, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["VAR3", "=", "VAR2"], "tokens_order": [9, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 39, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["String", "VAR2", "=", "VAR3"], "tokens_order": [20, 6, 4, 9, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 47, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_31", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 2, "target": 3, "type": "DDG"}, {"id": 3, "source": 3, "target": 4, "type": "DDG"}, {"id": 4, "source": 3, "target": 5, "type": "DDG"}, {"id": 5, "source": 0, "target": 5, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_54b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_54c()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_54d()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE81_XSS_Error_Message__Servlet_URLConnection_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_URLConnection_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_URLConnection_54e()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 52, 8, 60, 8, 77, 2]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 34, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_54e", "new_tokens": ["VAR17", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR15", ")"], "tokens_order": [173, 3, 290, 1, 291, 8, 78, 21, 91, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 16, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 91, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 93, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 95, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 101, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 40, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["URLConnection", "VAR3", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 9, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 87, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_42", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 12, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 7, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_listen_tcp_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 118, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["String", "[", "]", "VAR7", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 18, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 119, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["VAR7", "[", "2", "]", "=", "VAR6"], "tokens_order": [18, 29, 35, 30, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 120, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_listen_tcp_66b()).badSink(dataArray, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", "[", "]", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 29, 30, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 18, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "new_tokens": ["String", "VAR11", "=", "VAR8", "[", "2", "]"], "tokens_order": [20, 44, 4, 26, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_listen_tcp_66b", "new_tokens": ["VAR10", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR11", ")"], "tokens_order": [36, 3, 290, 1, 291, 8, 78, 21, 44, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 14, "target": 15, "type": "DDG"}, {"id": 13, "source": 5, "target": 15, "type": "DDG"}, {"id": 14, "source": 14, "target": 16, "type": "DDG"}, {"id": 15, "source": 0, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": 1, "source": 18, "target": 19, "type": "DDG"}, {"id": 2, "source": 18, "target": 20, "type": "DDG"}, {"id": 3, "source": 17, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* retrieve the property */\r\n        {\r\n            Properties properties = new Properties();\r\n            FileInputStream streamFileInput = null;\r\n            try {\r\n                streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n                properties.load(streamFileInput);\r\n                /* POTENTIAL FLAW: Read data from a .properties file */\r\n                data = properties.getProperty(\"data\");\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading object */\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 44, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 45, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 47, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 58, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 74, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR4", "=", "\"foo\""], "tokens_order": [11, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 78, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 84, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_PropertiesFile_12", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR4", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 11, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 4, "target": 9, "type": "DDG"}, {"id": 3, "source": 7, "target": 9, "type": "DDG"}, {"id": 4, "source": 0, "target": 9, "type": "DDG"}, {"id": 5, "source": 1, "target": 3, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 1, "target": 4, "type": "DDG"}, {"id": 8, "source": 2, "target": 5, "type": "DDG"}, {"id": 9, "source": 2, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 58, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 63, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 65, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 66, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "mtdSignature": "goodG2BSink(testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 67, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 41, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 43, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_67b", "new_tokens": ["VAR6", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR7", ")"], "tokens_order": [15, 3, 290, 1, 291, 8, 78, 21, 18, 2, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_URLConnection_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n                * The built-in J2EE server automatically does some HTML entity encoding.\r\n                * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n                */\r\n            response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 88, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["int", "VAR6", "=", "0"], "tokens_order": [19, 15, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 88, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR6", "<", "1"], "tokens_order": [15, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 88, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR6", "++"], "tokens_order": [15, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 90, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 96, "column": 17, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_URLConnection_17", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 9, "target": 10, "type": "DDG"}, {"id": 8, "source": 11, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}, {"id": 11, "source": 0, "target": 13, "type": "DDG"}, {"id": 12, "source": 9, "target": 11, "type": "DDG"}, {"id": 13, "source": 11, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    return data;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["Cookie", "VAR6", "[", "]", "=", "VAR3", ".", "getCookies", "(", ")"], "tokens_order": [88, 15, 29, 30, 4, 9, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["VAR5", "=", "VAR6", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [14, 4, 15, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_61b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 9, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 9, "type": "DDG"}, {"id": 4, "source": 8, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 47, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 53, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getQueryString_Servlet_01", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 6, "target": 7, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 1, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 8, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 46, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 50, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 51, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 102, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_51b()).badSink(data, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_51b", "new_tokens": ["VAR8", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR6", ")"], "tokens_order": [26, 3, 290, 1, 291, 8, 78, 21, 15, 2, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data from a database */\r\n        {\r\n            Connection connection = null;\r\n            PreparedStatement preparedStatement = null;\r\n            ResultSet resultSet = null;\r\n            try {\r\n                /* setup the connection */\r\n                connection = IO.getDBConnection();\r\n                /* prepare and execute a (hardcoded) query */\r\n                preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n                resultSet = preparedStatement.executeQuery();\r\n                /* POTENTIAL FLAW: Read data from a database query resultset */\r\n                data = resultSet.getString(1);\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n            } finally {\r\n                /* Close database objects */\r\n                try {\r\n                    if (resultSet != null) {\r\n                        resultSet.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n                }\r\n                try {\r\n                    if (preparedStatement != null) {\r\n                        preparedStatement.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n                }\r\n                try {\r\n                    if (connection != null) {\r\n                        connection.close();\r\n                    }\r\n                } catch (SQLException exceptSql) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "34"}], "varibles": ["connection"], "line": 46, "column": 21, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 48, "column": 21, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 49, "column": 21, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 51, "column": 21, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 62, "column": 29, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 29, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 74, "column": 29, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 29, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 86, "column": 29, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 29, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR5", "=", "\"foo\""], "tokens_order": [14, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 106, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 112, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_12", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR5", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 14, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 12, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 4, "target": 13, "type": "DDG"}, {"id": 3, "source": 11, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}, {"id": 12, "source": 1, "target": 9, "type": "DDG"}, {"id": 13, "source": 1, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a.badPublicStatic = true;\r\n    data = (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 42, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22a.badPublicStatic) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 33, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [14, 4, 9, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 7, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 35, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 36, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 39, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 45, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 51, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_16", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 2, "target": 6, "type": "DDG"}, {"id": 3, "source": 1, "target": 7, "type": "DDG"}, {"id": 4, "source": 5, "target": 7, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 3, "type": "DDG"}, {"id": 8, "source": 3, "target": 4, "type": "DDG"}, {"id": 9, "source": 3, "target": 5, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_database_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE81_XSS_Error_Message__Servlet_database_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 52, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 55, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 56, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 59, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 70, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 72, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 82, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 84, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 94, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 96, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 106, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["Container", "VAR6", "=", "new", "Container", "(", ")"], "tokens_order": [56, 15, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 107, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["VAR6", ".", "containerOne", "=", "VAR5"], "tokens_order": [15, 3, 70, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_database_67b", "mtdSignature": "badSink(testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_database_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 108, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_database_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_database_67b()).badSink(dataContainer, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 15, 8, 5, 8, 10, 2, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE81_XSS_Error_Message__Servlet_database_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE81_XSS_Error_Message__Servlet_database_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67b", "new_tokens": ["public", "void", "FUN2", "(", "CWE81_XSS_Error_Message__Servlet_database_67a", ".", "Container", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 0, 3, 56, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "containerOne"], "tokens_order": [20, 36, 4, 18, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_database_67b", "new_tokens": ["VAR9", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR10", ")"], "tokens_order": [31, 3, 290, 1, 291, 8, 78, 21, 36, 2, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 11, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 112, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* FIX: Use a hardcoded string */\r\n    CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data = \"foo\";\r\n    (new CWE81_XSS_Error_Message__Servlet_connect_tcp_68b()).goodG2BSink(request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0]}, {"id": 1, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "mtdSignature": "goodG2BSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "(", ")", ")", ".", "goodG2BSink", "(", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_connect_tcp_68b()).goodG2BSink(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 40, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR2", ",", "HttpServletResponse", "VAR3", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 6, 8, 40, 9, 2, 22, 23, 0]}, {"id": 3, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", "data"], "line": 42, "column": 9, "tokens": ["String", "data", "=", "CWE81_XSS_Error_Message__Servlet_connect_tcp_68a", ".", "data"], "code": "String data = CWE81_XSS_Error_Message__Servlet_connect_tcp_68a.data", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["String", "VAR4", "=", "VAR5", ".", "VAR4"], "tokens_order": [20, 11, 4, 14, 3, 11, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 44, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 50, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_connect_tcp_68b", "new_tokens": ["VAR3", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR4", ")"], "tokens_order": [9, 3, 290, 1, 291, 8, 78, 21, 11, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": "-1", "source": 1, "target": 2, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}, {"id": 2, "source": 2, "target": 5, "type": "DDG"}], "target": 0}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 35, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 36, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 39, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 43, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR4", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 11, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 44, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR4", ".", "add", "(", "0", ",", "VAR2", ")"], "tokens_order": [11, 3, 53, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 45, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR4", ".", "add", "(", "1", ",", "VAR2", ")"], "tokens_order": [11, 3, 53, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 46, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["VAR4", ".", "add", "(", "2", ",", "VAR2", ")"], "tokens_order": [11, 3, 53, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 47, "column": 9, "tokens": ["(", "new", "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b()).badSink(dataVector, request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "new_tokens": ["String", "VAR8", "=", "VAR5", ".", "remove", "(", "2", ")"], "tokens_order": [20, 26, 4, 14, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getCookies_Servlet_72b", "new_tokens": ["VAR7", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR8", ")"], "tokens_order": [18, 3, 290, 1, 291, 8, 78, 21, 26, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 5, "target": 6, "type": "DDG"}, {"id": 6, "source": 1, "target": 7, "type": "DDG"}, {"id": 7, "source": 4, "target": 7, "type": "DDG"}, {"id": 8, "source": 5, "target": 7, "type": "DDG"}, {"id": 9, "source": 1, "target": 8, "type": "DDG"}, {"id": 10, "source": 4, "target": 8, "type": "DDG"}, {"id": 11, "source": 5, "target": 8, "type": "DDG"}, {"id": 12, "source": 0, "target": 9, "type": "DDG"}, {"id": 13, "source": 5, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b()).badSource(request, response)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 35, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61a", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR2", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 6, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    return data;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [14, 4, 9, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE81_XSS_Error_Message__Servlet_getParameter_Servlet_61b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE81", "fun_info": "CWE81_XSS_Error_Message__Servlet_File_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: script code (e.g. id=<script>alert('xss')</script>) is sent to the client;\r\n            * The built-in J2EE server automatically does some HTML entity encoding.\r\n            * Therefore, to test this, change response.sendError to response.getWriter().println and remove the 404,\r\n            */\r\n        response.sendError(404, \"<br>bad() - Parameter name has value \" + data);\r\n    }\r\n    return;\r\n}", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 40, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR6", "=", "\"foo\""], "tokens_order": [15, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 108, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 114, "column": 13, "tokens": ["response", ".", "sendError", "(", "404", ",", "\"<br>bad() - Parameter name has value \"", "+", "data", ")"], "code": "response.sendError(404, \"<br>bad() - Parameter name has value \" + data)", "java_file": "CWE81_XSS_Error_Message__Servlet_File_12", "new_tokens": ["VAR1", ".", "sendError", "(", "404", ",", "VAR", "+", "VAR6", ")"], "tokens_order": [10, 3, 290, 1, 291, 8, 78, 21, 15, 2, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 5, "target": 13, "type": "DDG"}, {"id": 2, "source": 12, "target": 14, "type": "DDG"}, {"id": 3, "source": 5, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": 10, "source": 4, "target": 7, "type": "DDG"}, {"id": 11, "source": 3, "target": 8, "type": "DDG"}, {"id": 12, "source": 3, "target": 9, "type": "DDG"}, {"id": 13, "source": 2, "target": 10, "type": "DDG"}, {"id": 14, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_PropertiesFile_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 72, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_PropertiesFile_71b()).badSink((Object) data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 11, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0, 0]}, {"id": 9, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "new_tokens": ["String", "VAR8", "=", "(", "String", ")", "VAR5"], "tokens_order": [20, 26, 4, 1, 20, 2, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_71b", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", "+", "\"\\\">\"", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 9, "target": 11, "type": "DDG"}, {"id": 3, "source": 8, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a.badPublicStatic = true;\r\n    data = (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22a.badPublicStatic) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 33, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [14, 4, 9, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 39, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 7, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 103, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_71b()).badSink((Object) data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23, 0, 0, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "new_tokens": ["String", "VAR9", "=", "(", "String", ")", "VAR6"], "tokens_order": [20, 31, 4, 1, 20, 2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_71b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", "+", "\"\\\">\"", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 72, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 75, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR4", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 11, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 33, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 37, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 40, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 1, "target": 4, "type": "DDG"}, {"id": 5, "source": 0, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE83_XSS_Attribute__Servlet_connect_tcp_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE83_XSS_Attribute__Servlet_connect_tcp_61b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR3", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [9, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_61b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 14, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 4, "target": 12, "type": "DDG"}, {"id": 8, "source": 4, "target": 13, "type": "DDG"}, {"id": 9, "source": 7, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "String", "badSource", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public String badSource(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["public", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [28, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["StringTokenizer", "VAR6", "=", "new", "StringTokenizer", "(", "VAR3", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 15, 4, 7, 86, 1, 9, 3, 128, 1, 2, 8, 129, 2, 0, 0], "bad_source": true}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["VAR6", ".", "hasMoreTokens", "(", ")"], "tokens_order": [15, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["String", "VAR7", "=", "VAR6", ".", "nextToken", "(", ")"], "tokens_order": [20, 18, 4, 15, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["VAR7", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [18, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["VAR5", "=", "VAR7", ".", "substring", "(", "3", ")"], "tokens_order": [14, 4, 18, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 47, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_61b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 11, "type": "DDG"}, {"id": 4, "source": 10, "target": 11, "type": "DDG"}, {"id": 5, "source": 8, "target": 9, "type": "DDG"}, {"id": 6, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 34, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_listen_tcp_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 50, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 51, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 55, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 56, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 59, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 72, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 84, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 95, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 97, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 107, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 109, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 119, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR7", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 18, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 120, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "0", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 33, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 121, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "1", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 37, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 122, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["VAR7", ".", "add", "(", "2", ",", "VAR6", ")"], "tokens_order": [18, 3, 53, 1, 35, 8, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 123, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_listen_tcp_72b()).badSink(dataVector, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 20, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "remove", "(", "2", ")"], "tokens_order": [20, 44, 4, 26, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_72b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", "+", "\"\\\">\"", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 5, "target": 15, "type": "DDG"}, {"id": 13, "source": 14, "target": 15, "type": "DDG"}, {"id": 14, "source": 5, "target": 16, "type": "DDG"}, {"id": 15, "source": 14, "target": 16, "type": "DDG"}, {"id": 16, "source": 5, "target": 17, "type": "DDG"}, {"id": 17, "source": 14, "target": 17, "type": "DDG"}, {"id": 18, "source": 0, "target": 18, "type": "DDG"}, {"id": 19, "source": 14, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 20, "target": 21, "type": "DDG"}, {"id": 2, "source": 20, "target": 22, "type": "DDG"}, {"id": 3, "source": 19, "target": 22, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_21____goodG2B1", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 139, "column": 5, "tokens": ["private", "void", "goodG2B1", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B1() - use goodsource and badsink by setting the variable to false instead of true */\r\nprivate void goodG2B1(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.goodG2B1_private = false;\r\n    data = goodG2B1_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "mtdSignature": "goodG2B1_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 144, "column": 9, "tokens": ["data", "=", "goodG2B1_source", "(", "request", ",", "response", ")"], "code": "data = goodG2B1_source(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 146, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 149, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 162, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "null"], "tokens_order": [9, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 168, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 172, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 4, "target": 6, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n        data = request.getParameter(\"name\");\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 32, "column": 13, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 38, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 2, "target": 4, "type": "DDG"}, {"id": 4, "source": 1, "target": 4, "type": "DDG"}, {"id": 5, "source": 0, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 41, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 43, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 46, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 59, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["File", "VAR3", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 9, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 66, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 66, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 67, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR5", "=", "new", "InputStreamReader", "(", "VAR4", ",", "\"UTF-8\"", ")"], "tokens_order": [14, 4, 7, 46, 1, 11, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 68, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR6", "=", "new", "BufferedReader", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 45, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 72, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR7", "=", "VAR6", ".", "readLine", "(", ")"], "tokens_order": [18, 4, 15, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 83, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 85, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 95, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 97, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 107, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 109, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 123, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["VAR7", "=", "null"], "tokens_order": [18, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 126, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_File_21", "new_tokens": ["return", "VAR7", ";"], "tokens_order": [84, 18, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 16, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 8, "target": 16, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 9, "type": "DDG"}, {"id": 7, "source": 7, "target": 10, "type": "DDG"}, {"id": 8, "source": 6, "target": 11, "type": "DDG"}, {"id": 9, "source": 6, "target": 12, "type": "DDG"}, {"id": 10, "source": 5, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE83_XSS_Attribute__Servlet_PropertiesFile_22a.badPublicStatic = true;\r\n    data = (new CWE83_XSS_Attribute__Servlet_PropertiesFile_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE83_XSS_Attribute__Servlet_PropertiesFile_22b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 41, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 48, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [14, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 59, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 75, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 77, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_22b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 11, "type": "DDG"}, {"id": 1, "source": 10, "target": 11, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 8, "type": "DDG"}, {"id": 6, "source": 5, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_File_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 44, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 52, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 53, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 54, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 59, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 72, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 84, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 94, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 96, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 106, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["Container", "VAR7", "=", "new", "Container", "(", ")"], "tokens_order": [56, 18, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 107, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR7", ".", "containerOne", "=", "VAR6"], "tokens_order": [18, 3, 70, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_67b", "mtdSignature": "badSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_File_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 108, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_67b()).badSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE83_XSS_Attribute__Servlet_File_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE83_XSS_Attribute__Servlet_File_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_File_67a", ".", "Container", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 16, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["String", "VAR11", "=", "VAR8", ".", "containerOne"], "tokens_order": [20, 44, 4, 26, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR11", "+", "\"\\\">\"", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 44, 21, 292, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 12, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 13, "type": "DDG"}, {"id": 12, "source": 12, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 16, "target": 17, "type": "DDG"}, {"id": 2, "source": 16, "target": 18, "type": "DDG"}, {"id": 3, "source": 15, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 1, "target": 5, "type": "DDG"}, {"id": 5, "source": 4, "target": 6, "type": "DDG"}, {"id": 6, "source": 1, "target": 6, "type": "DDG"}, {"id": 7, "source": 0, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 114, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_66b()).goodG2BSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 119, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 121, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["String", "[", "]", "VAR3", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 9, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 122, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR3", "[", "2", "]", "=", "VAR2"], "tokens_order": [9, 29, 35, 30, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "mtdSignature": "goodG2BSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 123, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "(", ")", ")", ".", "goodG2BSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_66b()).goodG2BSink(dataArray, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR4", "[", "]", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 11, 29, 30, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 40, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["String", "VAR7", "=", "VAR4", "[", "2", "]"], "tokens_order": [20, 18, 4, 11, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 51, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 55, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 58, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_12", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 8, "type": "DDG"}, {"id": 1, "source": 7, "target": 8, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 1, "target": 9, "type": "DDG"}, {"id": 4, "source": 7, "target": 9, "type": "DDG"}, {"id": 5, "source": 6, "target": 9, "type": "DDG"}, {"id": 6, "source": 0, "target": 9, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}, {"id": 10, "source": 4, "target": 5, "type": "DDG"}, {"id": 11, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 47, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR6", ",", "VAR7", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 14, 8, 15, 8, 18, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR8", ",", "VAR9", ",", "VAR10", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 26, 8, 31, 8, 36, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR11", ",", "HttpServletRequest", "VAR12", ",", "HttpServletResponse", "VAR13", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 44, 8, 39, 52, 8, 40, 60, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR11", ",", "VAR12", ",", "VAR13", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 44, 8, 52, 8, 60, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR14", ",", "HttpServletRequest", "VAR15", ",", "HttpServletResponse", "VAR16", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 77, 8, 39, 91, 8, 40, 136, 2, 22, 23]}, {"id": 15, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_54e", "new_tokens": ["VAR16", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR14", "+", "\"\\\">\"", ")"], "tokens_order": [136, 3, 159, 1, 2, 3, 167, 1, 78, 21, 77, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 16, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_PropertiesFile_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 41, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 46, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 47, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 50, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 61, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 63, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 73, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR5", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 14, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 74, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR5", ".", "add", "(", "0", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 33, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 75, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR5", ".", "add", "(", "1", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 37, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 76, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["VAR5", ".", "add", "(", "2", ",", "VAR4", ")"], "tokens_order": [14, 3, 53, 1, 35, 8, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 77, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_PropertiesFile_72b()).badSink(dataVector, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "new_tokens": ["String", "VAR9", "=", "VAR6", ".", "remove", "(", "2", ")"], "tokens_order": [20, 31, 4, 15, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_72b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", "+", "\"\\\">\"", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 8, "type": "DDG"}, {"id": 6, "source": 7, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 9, "type": "DDG"}, {"id": 8, "source": 7, "target": 9, "type": "DDG"}, {"id": 9, "source": 4, "target": 10, "type": "DDG"}, {"id": 10, "source": 7, "target": 10, "type": "DDG"}, {"id": 11, "source": 0, "target": 11, "type": "DDG"}, {"id": 12, "source": 7, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_URLConnection_52a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_52b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_52b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_52b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_52b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_52c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_52c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_52c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_52c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52c", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_52c", "new_tokens": ["VAR11", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", "+", "\"\\\">\"", ")"], "tokens_order": [44, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (new CWE83_XSS_Attribute__Servlet_PropertiesFile_61b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "String data = (new CWE83_XSS_Attribute__Servlet_PropertiesFile_61b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61a", "new_tokens": ["String", "VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0, 0], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["VAR5", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [14, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 72, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_61b", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 10, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 4, "target": 7, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}, {"id": 4, "source": 5, "target": 9, "type": "DDG"}, {"id": 5, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE83_XSS_Attribute__Servlet_PropertiesFile_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 43, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 48, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 49, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 52, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 63, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 65, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 81, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [14, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 82, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", "=", "new", "ObjectOutputStream", "(", "VAR5", ")"], "tokens_order": [15, 4, 7, 143, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 83, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", ".", "writeObject", "(", "VAR4", ")"], "tokens_order": [15, 3, 144, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 84, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["byte", "[", "]", "VAR7", "=", "VAR5", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 18, 4, 14, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 85, "column": 13, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_PropertiesFile_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 18, 8, 5, 8, 10, 2, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 96, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 98, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 108, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 110, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 17, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 37, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", "=", "new", "ByteArrayInputStream", "(", "VAR8", ")"], "tokens_order": [44, 4, 7, 146, 1, 26, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", "=", "new", "ObjectInputStream", "(", "VAR11", ")"], "tokens_order": [52, 4, 7, 147, 1, 44, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 39, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["String", "VAR13", "=", "(", "String", ")", "VAR12", ".", "readObject", "(", ")"], "tokens_order": [20, 60, 4, 1, 20, 2, 52, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR13", "+", "\"\\\">\"", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 60, 21, 292, 2, 0, 0, 0], "bad_sink": true}, {"id": 22, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 61, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 63, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 73, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", "!=", "null"], "tokens_order": [44, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 75, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_75b", "new_tokens": ["VAR11", ".", "close", "(", ")"], "tokens_order": [44, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 9, "type": "DDG"}, {"id": 7, "source": 8, "target": 9, "type": "DDG"}, {"id": 8, "source": 7, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 10, "target": 11, "type": "DDG"}, {"id": 11, "source": 8, "target": 12, "type": "DDG"}, {"id": 12, "source": 8, "target": 13, "type": "DDG"}, {"id": 13, "source": 7, "target": 14, "type": "DDG"}, {"id": 14, "source": 7, "target": 15, "type": "DDG"}, {"id": "-1", "source": 11, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 18, "target": 19, "type": "DDG"}, {"id": 3, "source": 19, "target": 20, "type": "DDG"}, {"id": 4, "source": 19, "target": 21, "type": "DDG"}, {"id": 5, "source": 16, "target": 21, "type": "DDG"}, {"id": 6, "source": 18, "target": 22, "type": "DDG"}, {"id": 7, "source": 18, "target": 23, "type": "DDG"}, {"id": 8, "source": 17, "target": 24, "type": "DDG"}, {"id": 9, "source": 17, "target": 25, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 103, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_54b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_54c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_54d()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_54e()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 52, 8, 60, 8, 77, 2]}, {"id": 18, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_54e", "new_tokens": ["VAR17", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", "+", "\"\\\">\"", ")"], "tokens_order": [173, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": "-1", "source": 17, "target": 18, "type": "func_call_out"}, {"id": 0, "source": 18, "target": 19, "type": "DDG"}, {"id": 1, "source": 18, "target": 20, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>();\r\n    dataHashMap.put(0, data);\r\n    dataHashMap.put(1, data);\r\n    dataHashMap.put(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_74b()).badSink(dataHashMap, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 48, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 52, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 53, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 56, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataHashMap"], "line": 104, "column": 9, "tokens": ["HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "code": "HashMap<Integer, String> dataHashMap = new HashMap<Integer, String>()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["HashMap", "<", "Integer", ",", "String", ">", "VAR6", "=", "new", "HashMap", "<", "Integer", ",", "String", ">", "(", ")"], "tokens_order": [63, 32, 50, 8, 20, 34, 15, 4, 7, 63, 32, 50, 8, 20, 34, 1, 2, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 105, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "0", ",", "data", ")"], "code": "dataHashMap.put(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 106, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "1", ",", "data", ")"], "code": "dataHashMap.put(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 107, "column": 9, "tokens": ["dataHashMap", ".", "put", "(", "2", ",", "data", ")"], "code": "dataHashMap.put(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["VAR6", ".", "put", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 64, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "mtdSignature": "badSink(java.util.HashMap<java.lang.Integer, java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataHashMap"], "line": 108, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "(", ")", ")", ".", "badSink", "(", "dataHashMap", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_74b()).badSink(dataHashMap, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataHashMap"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "HashMap", "<", "Integer", ",", "String", ">", "dataHashMap", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HashMap<Integer, String> dataHashMap, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataHashMap.get(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "new_tokens": ["public", "void", "FUN1", "(", "HashMap", "<", "Integer", ",", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 63, 32, 50, 8, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataHashMap"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataHashMap", ".", "get", "(", "2", ")"], "code": "String data = dataHashMap.get(2)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "get", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 141, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_74b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_16____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    while (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using an outbound tcp connection */\r\n        {\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                /* Read data using an outbound tcp connection */\r\n                socket = new Socket(\"host.example.org\", 39544);\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* clean up socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 9, "tokens": ["String", "data"], "code": "String data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["String", "VAR2"], "tokens_order": [20, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR3", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [9, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 49, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR2", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [6, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 88, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 102, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 105, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_16", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 12, "type": "DDG"}, {"id": 1, "source": 5, "target": 12, "type": "DDG"}, {"id": 2, "source": 1, "target": 13, "type": "DDG"}, {"id": 3, "source": 5, "target": 13, "type": "DDG"}, {"id": 4, "source": 0, "target": 13, "type": "DDG"}, {"id": 5, "source": 2, "target": 3, "type": "DDG"}, {"id": 6, "source": 3, "target": 4, "type": "DDG"}, {"id": 7, "source": 4, "target": 5, "type": "DDG"}, {"id": 8, "source": 4, "target": 6, "type": "DDG"}, {"id": 9, "source": 4, "target": 7, "type": "DDG"}, {"id": 10, "source": 3, "target": 8, "type": "DDG"}, {"id": 11, "source": 3, "target": 9, "type": "DDG"}, {"id": 12, "source": 2, "target": 10, "type": "DDG"}, {"id": 13, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 30, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 32, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_51b", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR3", "+", "\"\\\">\"", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 9, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 3, "target": 5, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_URLConnection_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 47, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 48, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 88, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_54b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_54c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_54d()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_54e()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR12", ",", "VAR13", ",", "VAR14", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 52, 8, 60, 8, 77, 2]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR15", ",", "HttpServletRequest", "VAR16", ",", "HttpServletResponse", "VAR17", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 91, 8, 39, 136, 8, 40, 173, 2, 22, 23]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54e", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_54e", "new_tokens": ["VAR17", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", "+", "\"\\\">\"", ")"], "tokens_order": [173, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 0, "target": 9, "type": "DDG"}, {"id": 8, "source": 4, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 16, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 49, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 54, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 56, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 57, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "mtdSignature": "goodG2BSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 58, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 40, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE83_XSS_Attribute__Servlet_PropertiesFile_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 40, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 45, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 46, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 49, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 60, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 62, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 72, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["String", "[", "]", "VAR5", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 14, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 73, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["VAR5", "[", "2", "]", "=", "VAR4"], "tokens_order": [14, 29, 35, 30, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 74, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_PropertiesFile_66b()).badSink(dataArray, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0]}, {"id": 10, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", "[", "]", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 29, 30, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "new_tokens": ["String", "VAR9", "=", "VAR6", "[", "2", "]"], "tokens_order": [20, 31, 4, 15, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_66b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", "+", "\"\\\">\"", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 21, 292, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 4, "target": 8, "type": "DDG"}, {"id": 7, "source": 7, "target": 9, "type": "DDG"}, {"id": 8, "source": 0, "target": 9, "type": "DDG"}, {"id": "-1", "source": 9, "target": 10, "type": "func_call_out"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 11, "target": 12, "type": "DDG"}, {"id": 2, "source": 11, "target": 13, "type": "DDG"}, {"id": 3, "source": 10, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Vector<String> dataVector = new Vector<String>(5);\r\n    dataVector.add(0, data);\r\n    dataVector.add(1, data);\r\n    dataVector.add(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_72b()).badSink(dataVector, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 48, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 52, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 53, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 56, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataVector"], "line": 104, "column": 9, "tokens": ["Vector", "<", "String", ">", "dataVector", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "code": "Vector<String> dataVector = new Vector<String>(5)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["Vector", "<", "String", ">", "VAR6", "=", "new", "Vector", "<", "String", ">", "(", "5", ")"], "tokens_order": [68, 32, 20, 34, 15, 4, 7, 68, 32, 20, 34, 1, 73, 2, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 105, "column": 9, "tokens": ["dataVector", ".", "add", "(", "0", ",", "data", ")"], "code": "dataVector.add(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 106, "column": 9, "tokens": ["dataVector", ".", "add", "(", "1", ",", "data", ")"], "code": "dataVector.add(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 107, "column": 9, "tokens": ["dataVector", ".", "add", "(", "2", ",", "data", ")"], "code": "dataVector.add(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "mtdSignature": "badSink(java.util.Vector<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataVector"], "line": 108, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "(", ")", ")", ".", "badSink", "(", "dataVector", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_72b()).badSink(dataVector, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataVector"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "Vector", "<", "String", ">", "dataVector", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Vector<String> dataVector, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataVector.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "new_tokens": ["public", "void", "FUN1", "(", "Vector", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 68, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataVector"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataVector", ".", "remove", "(", "2", ")"], "code": "String data = dataVector.remove(2)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_72b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        {\r\n            File file = new File(\"C:\\\\data.txt\");\r\n            FileInputStream streamFileInput = null;\r\n            InputStreamReader readerInputStream = null;\r\n            BufferedReader readerBuffered = null;\r\n            try {\r\n                /* read string from file into data */\r\n                streamFileInput = new FileInputStream(file);\r\n                readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a file */\r\n                /* This will be reading the first \"line\" of the file, which\r\n                     * could be very long if there are little or no newlines in the file */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* Close stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (streamFileInput != null) {\r\n                        streamFileInput.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 40, "column": 17, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 53, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 88, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 90, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 107, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 110, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 5, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 13, "type": "DDG"}, {"id": 2, "source": 5, "target": 14, "type": "DDG"}, {"id": 3, "source": 12, "target": 14, "type": "DDG"}, {"id": 4, "source": 0, "target": 14, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 4, "target": 5, "type": "DDG"}, {"id": 9, "source": 4, "target": 6, "type": "DDG"}, {"id": 10, "source": 4, "target": 7, "type": "DDG"}, {"id": 11, "source": 3, "target": 8, "type": "DDG"}, {"id": 12, "source": 3, "target": 9, "type": "DDG"}, {"id": 13, "source": 2, "target": 10, "type": "DDG"}, {"id": 14, "source": 2, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 119, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 124, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 126, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 127, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "mtdSignature": "goodG2BSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_connect_tcp_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 128, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE83_XSS_Attribute__Servlet_connect_tcp_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 40, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 103, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 106, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 0, "target": 12, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_database_42____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 104, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* use badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_database_42", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "23"}], "varibles": ["request", "data", "response"], "line": 106, "column": 9, "tokens": ["String", "data", "=", "badSource", "(", "request", ",", "response", ")"], "code": "String data = badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["String", "VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [20, 6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 108, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 111, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 46, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR3", "=", "CLS0", ".", "FUN2", "(", ")"], "tokens_order": [9, 4, 27, 3, 57, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 49, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR4", "=", "VAR3", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [11, 4, 9, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 50, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR5", "=", "VAR4", ".", "executeQuery", "(", ")"], "tokens_order": [14, 4, 11, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 53, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR6", "=", "VAR5", ".", "getString", "(", "1", ")"], "tokens_order": [15, 4, 14, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 64, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 66, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 76, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 78, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 88, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 90, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 100, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_database_42", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 14, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 5, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}, {"id": 2, "source": 6, "target": 7, "type": "DDG"}, {"id": 3, "source": 6, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 9, "type": "DDG"}, {"id": 5, "source": 5, "target": 10, "type": "DDG"}, {"id": 6, "source": 5, "target": 11, "type": "DDG"}, {"id": 7, "source": 4, "target": 12, "type": "DDG"}, {"id": 8, "source": 4, "target": 13, "type": "DDG"}, {"id": 9, "source": 7, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_52a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_File_52b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_52b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_52b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_52b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_52a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_File_52c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_52b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_52c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_52c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_52c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_52b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_52c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_52c", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_52c", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 15, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_21____goodG2B2", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 176, "column": 5, "tokens": ["private", "void", "goodG2B2", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if in the sink function */\r\nprivate void goodG2B2(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.goodG2B2_private = true;\r\n    data = goodG2B2_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "mtdSignature": "goodG2B2_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 181, "column": 9, "tokens": ["data", "=", "goodG2B2_source", "(", "request", ",", "response", ")"], "code": "data = goodG2B2_source(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 183, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 186, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 198, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "\"foo\""], "tokens_order": [9, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 204, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["VAR3", "=", "null"], "tokens_order": [9, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 207, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_21", "new_tokens": ["return", "VAR3", ";"], "tokens_order": [84, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 6, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 5, "target": 6, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b()).badSink((Object) data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "new_tokens": ["String", "VAR6", "=", "(", "String", ")", "VAR3"], "tokens_order": [20, 15, 4, 1, 20, 2, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_71b", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", "+", "\"\\\">\"", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": 1, "source": 4, "target": 5, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 3, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 45, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 46, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 48, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 49, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 51, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 57, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 6, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 26, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_41", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 7, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 1, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 5, "type": "DDG"}, {"id": 7, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_database_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE83_XSS_Attribute__Servlet_database_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 51, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 54, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 55, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "resultSet"], "line": 58, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "data = resultSet.getString(1)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR5", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [14, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 69, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 71, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 81, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 83, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 93, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 95, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 111, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR6", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [15, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 112, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR7", "=", "new", "ObjectOutputStream", "(", "VAR6", ")"], "tokens_order": [18, 4, 7, 143, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 113, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR7", ".", "writeObject", "(", "VAR5", ")"], "tokens_order": [18, 3, 144, 1, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 114, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["byte", "[", "]", "VAR8", "=", "VAR6", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 26, 4, 15, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_database_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 115, "column": 13, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_database_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_database_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR8", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 26, 8, 5, 8, 10, 2, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 126, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 128, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 138, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 140, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75a", "new_tokens": ["VAR6", ".", "close", "(", ")"], "tokens_order": [15, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["public", "void", "FUN2", "(", "byte", "[", "]", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 51, 29, 30, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 21, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 37, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR12", "=", "new", "ByteArrayInputStream", "(", "VAR9", ")"], "tokens_order": [52, 4, 7, 146, 1, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 22, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR13", "=", "new", "ObjectInputStream", "(", "VAR12", ")"], "tokens_order": [60, 4, 7, 147, 1, 52, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 39, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["String", "VAR14", "=", "(", "String", ")", "VAR13", ".", "readObject", "(", ")"], "tokens_order": [20, 77, 4, 1, 20, 2, 60, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR11", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR14", "+", "\"\\\">\"", ")"], "tokens_order": [44, 3, 159, 1, 2, 3, 167, 1, 78, 21, 77, 21, 292, 2, 0, 0, 0], "bad_sink": true}, {"id": 26, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 61, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 27, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 63, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 28, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 73, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 29, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 75, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_75b", "new_tokens": ["VAR12", ".", "close", "(", ")"], "tokens_order": [52, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 15, "type": "DDG"}, {"id": 14, "source": 14, "target": 15, "type": "DDG"}, {"id": 15, "source": 12, "target": 16, "type": "DDG"}, {"id": 16, "source": 12, "target": 17, "type": "DDG"}, {"id": 17, "source": 11, "target": 18, "type": "DDG"}, {"id": 18, "source": 11, "target": 19, "type": "DDG"}, {"id": "-1", "source": 15, "target": 20, "type": "func_call_out"}, {"id": 0, "source": 20, "target": 21, "type": "DDG"}, {"id": 1, "source": 21, "target": 22, "type": "DDG"}, {"id": 2, "source": 22, "target": 23, "type": "DDG"}, {"id": 3, "source": 23, "target": 24, "type": "DDG"}, {"id": 4, "source": 23, "target": 25, "type": "DDG"}, {"id": 5, "source": 20, "target": 25, "type": "DDG"}, {"id": 6, "source": 22, "target": 26, "type": "DDG"}, {"id": 7, "source": 22, "target": 27, "type": "DDG"}, {"id": 8, "source": 21, "target": 28, "type": "DDG"}, {"id": 9, "source": 21, "target": 29, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_File_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 39, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 47, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 48, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 49, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 89, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 91, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_54b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2]}, {"id": 13, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_File_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_54c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR7", ",", "VAR8", ",", "VAR9", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 18, 8, 26, 8, 31, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_File_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_54d()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR10", ",", "VAR11", ",", "VAR12", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 36, 8, 44, 8, 52, 2]}, {"id": 17, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_File_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR13", ",", "HttpServletRequest", "VAR14", ",", "HttpServletResponse", "VAR15", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 60, 8, 39, 77, 8, 40, 91, 2, 22, 23]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_54e()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR13", ",", "VAR14", ",", "VAR15", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 60, 8, 77, 8, 91, 2]}, {"id": 19, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR16", ",", "HttpServletRequest", "VAR17", ",", "HttpServletResponse", "VAR18", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 136, 8, 39, 173, 8, 40, 212, 2, 22, 23]}, {"id": 20, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_54e", "new_tokens": ["VAR16", "!=", "null"], "tokens_order": [136, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_54e", "new_tokens": ["VAR18", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR16", "+", "\"\\\">\"", ")"], "tokens_order": [212, 3, 159, 1, 2, 3, 167, 1, 78, 21, 136, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 0, "target": 12, "type": "DDG"}, {"id": 11, "source": 5, "target": 12, "type": "DDG"}, {"id": "-1", "source": 12, "target": 13, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": "-1", "source": 16, "target": 17, "type": "func_call_out"}, {"id": 0, "source": 17, "target": 18, "type": "DDG"}, {"id": "-1", "source": 18, "target": 19, "type": "func_call_out"}, {"id": 0, "source": 19, "target": 20, "type": "DDG"}, {"id": 1, "source": 19, "target": 21, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}, {"id": 4, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 44, "column": 5, "tokens": ["private", "String", "bad_source", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private String bad_source(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (this.badPrivate) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    return data;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["private", "String", "FUN1", "(", "HttpServletRequest", "VAR3", ",", "HttpServletResponse", "VAR4", ")", "throws", "Throwable"], "tokens_order": [61, 20, 25, 1, 39, 9, 8, 40, 11, 2, 22, 23, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 50, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR5", "=", "\"\""], "tokens_order": [14, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 53, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["Cookie", "VAR6", "[", "]", "=", "VAR3", ".", "getCookies", "(", ")"], "tokens_order": [88, 15, 29, 30, 4, 9, 3, 125, 1, 2, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 54, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 57, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR5", "=", "VAR6", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [14, 4, 15, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 65, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 68, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_21", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 1, "target": 4, "type": "func_call_out"}, {"id": "-1", "source": 10, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 9, "target": 10, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}, {"id": 2, "source": 5, "target": 10, "type": "DDG"}, {"id": 3, "source": 4, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_17____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 115, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink by reversing the block outside the\r\n     * for statement with the one in the for statement */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 120, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 122, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["int", "VAR3", "=", "0"], "tokens_order": [19, 9, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 122, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "<", "1"], "tokens_order": [9, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 122, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "++"], "tokens_order": [9, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 124, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 127, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2]}], "edges": [{"id": 0, "source": 4, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 5, "type": "DDG"}, {"id": 3, "source": 1, "target": 6, "type": "DDG"}, {"id": 4, "source": 0, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 4, "type": "DDG"}, {"id": 6, "source": 2, "target": 4, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 42, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case there are no cookies */\r\n    /* Read data from cookies */\r\n    {\r\n        Cookie[] cookieSources = request.getCookies();\r\n        if (cookieSources != null) {\r\n            /* POTENTIAL FLAW: Read data from the first cookie value */\r\n            data = cookieSources[0].getValue();\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 50, "column": 13, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 51, "column": 17, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 54, "column": 17, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 58, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["dataBad", "=", "VAR2"], "tokens_order": [296, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 59, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 11, 8, 40, 14, 2, 22, 23, 0, 0]}, {"id": 8, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 31, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["String", "VAR6", "=", "dataBad"], "tokens_order": [20, 15, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_45", "new_tokens": ["VAR5", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", "+", "\"\\\">\"", ")"], "tokens_order": [14, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 5, "type": "DDG"}, {"id": 5, "source": 0, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}, {"id": 2, "source": 7, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 27, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* initialize data in case id is not in query string */\r\n        /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n        {\r\n            StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n            while (tokenizer.hasMoreTokens()) {\r\n                String token = tokenizer.nextToken();\r\n                /* a token will be like \"id=foo\" */\r\n                if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n                {\r\n                    data = token.substring(3);\r\n                    /* set data to \"foo\" */\r\n                    break;\r\n                    /* exit while loop */\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 35, "column": 17, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 36, "column": 24, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 38, "column": 21, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 39, "column": 24, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 41, "column": 25, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 51, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 54, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 57, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 6, "target": 8, "type": "DDG"}, {"id": 1, "source": 1, "target": 8, "type": "DDG"}, {"id": 2, "source": 7, "target": 8, "type": "DDG"}, {"id": 3, "source": 6, "target": 9, "type": "DDG"}, {"id": 4, "source": 1, "target": 9, "type": "DDG"}, {"id": 5, "source": 7, "target": 9, "type": "DDG"}, {"id": 6, "source": 0, "target": 9, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}, {"id": 10, "source": 4, "target": 5, "type": "DDG"}, {"id": 11, "source": 4, "target": 6, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_listen_tcp_71b()).badSink((Object) data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "mtdSignature": "badSink(java.lang.Object, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 118, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "(", ")", ")", ".", "badSink", "(", "(", "Object", ")", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_listen_tcp_71b()).badSink((Object) data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "(", "Object", ")", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 1, 85, 2, 15, 8, 5, 8, 10, 2]}, {"id": 15, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataObject", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "Object", "dataObject", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(Object dataObject, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = (String) dataObject;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "new_tokens": ["public", "void", "FUN1", "(", "Object", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 85, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23, 0, 0, 0]}, {"id": 16, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataObject", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "(", "String", ")", "dataObject"], "code": "String data = (String) dataObject", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "new_tokens": ["String", "VAR10", "=", "(", "String", ")", "VAR7"], "tokens_order": [20, 36, 4, 1, 20, 2, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_71b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 14, "type": "DDG"}, {"id": 13, "source": 5, "target": 14, "type": "DDG"}, {"id": "-1", "source": 14, "target": 15, "type": "func_call_out"}, {"id": 0, "source": 15, "target": 16, "type": "DDG"}, {"id": 1, "source": 16, "target": 17, "type": "DDG"}, {"id": 2, "source": 16, "target": 18, "type": "DDG"}, {"id": 3, "source": 15, "target": 18, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_01____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_01", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_01", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 33, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_01", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 36, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_01", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    String[] dataArray = new String[5];\r\n    dataArray[2] = data;\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_66b()).badSink(dataArray, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray"], "line": 103, "column": 9, "tokens": ["String", "[", "]", "dataArray", "=", "new", "String", "[", "5", "]"], "code": "String[] dataArray = new String[5]", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["String", "[", "]", "VAR6", "=", "new", "String", "[", "5", "]"], "tokens_order": [20, 29, 30, 15, 4, 7, 20, 29, 73, 30, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 104, "column": 9, "tokens": ["dataArray", "[", "2", "]", "=", "data"], "code": "dataArray[2] = data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["VAR6", "[", "2", "]", "=", "VAR5"], "tokens_order": [15, 29, 35, 30, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "mtdSignature": "badSink(java.lang.String[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataArray", "request", "response"], "line": 105, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "(", ")", ")", ".", "badSink", "(", "dataArray", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_66b()).badSink(dataArray, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataArray", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "dataArray", "[", "]", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String[] dataArray, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataArray[2];\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR7", "[", "]", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 18, 29, 30, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataArray", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataArray", "[", "2", "]"], "code": "String data = dataArray[2]", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["String", "VAR10", "=", "VAR7", "[", "2", "]"], "tokens_order": [20, 36, 4, 18, 29, 35, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_66b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 11, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_17____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 32, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < 1; i++) {\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 14, "tokens": ["int", "i", "=", "0"], "code": "int i = 0", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["int", "VAR6", "=", "0"], "tokens_order": [19, 15, 4, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 25, "tokens": ["i", "<", "1"], "code": "i < 1", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR6", "<", "1"], "tokens_order": [15, 32, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "UnaryExpr", "mtdCallInfo": [], "varibles": ["i"], "line": 103, "column": 32, "tokens": ["i", "++"], "code": "i++", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR6", "++"], "tokens_order": [15, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 105, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 108, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_17", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 13, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 14, "type": "DDG"}, {"id": 12, "source": 4, "target": 15, "type": "DDG"}, {"id": 13, "source": 0, "target": 15, "type": "DDG"}, {"id": 14, "source": 13, "target": 13, "type": "DDG"}, {"id": 15, "source": 11, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (true) {\r\n        data = \"\";\r\n        /* initialize data in case there are no cookies */\r\n        /* Read data from cookies */\r\n        {\r\n            Cookie[] cookieSources = request.getCookies();\r\n            if (cookieSources != null) {\r\n                /* POTENTIAL FLAW: Read data from the first cookie value */\r\n                data = cookieSources[0].getValue();\r\n            }\r\n        }\r\n    } else {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 31, "column": 13, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "cookieSources"], "line": 34, "column": 17, "tokens": ["Cookie", "cookieSources", "[", "]", "=", "request", ".", "getCookies", "(", ")"], "code": "Cookie[] cookieSources = request.getCookies()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["Cookie", "VAR3", "[", "]", "=", "VAR0", ".", "getCookies", "(", ")"], "tokens_order": [88, 9, 29, 30, 4, 5, 3, 125, 1, 2, 0, 0, 0, 0]}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["cookieSources"], "line": 35, "column": 21, "tokens": ["cookieSources", "!=", "null"], "code": "cookieSources != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "cookieSources"], "line": 38, "column": 21, "tokens": ["data", "=", "cookieSources", "[", "0", "]", ".", "getValue", "(", ")"], "code": "data = cookieSources[0].getValue()", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "VAR3", "[", "0", "]", ".", "getValue", "(", ")"], "tokens_order": [6, 4, 9, 29, 33, 30, 3, 126, 1, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 46, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 49, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 52, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getCookies_Servlet_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 6, "type": "DDG"}, {"id": 1, "source": 1, "target": 6, "type": "DDG"}, {"id": 2, "source": 5, "target": 6, "type": "DDG"}, {"id": 3, "source": 4, "target": 7, "type": "DDG"}, {"id": 4, "source": 1, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 7, "type": "DDG"}, {"id": 6, "source": 0, "target": 7, "type": "DDG"}, {"id": 7, "source": 0, "target": 2, "type": "DDG"}, {"id": 8, "source": 2, "target": 3, "type": "DDG"}, {"id": 9, "source": 2, "target": 4, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_URLConnection_12____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink - see how tools report flaws that don't always occur */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (IO.staticReturnsTrueOrFalse()) {\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* read input from URLConnection */\r\n        {\r\n            URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n                /* This will be reading the first \"line\" of the response body,\r\n                     * which could be very long if there are no newlines in the HTML */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 41, "column": 17, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 46, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 47, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 51, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 62, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 64, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 74, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 76, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 90, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR5", "=", "\"foo\""], "tokens_order": [14, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 94, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 97, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_12", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 4, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 10, "type": "DDG"}, {"id": 2, "source": 4, "target": 11, "type": "DDG"}, {"id": 3, "source": 9, "target": 11, "type": "DDG"}, {"id": 4, "source": 0, "target": 11, "type": "DDG"}, {"id": 5, "source": 1, "target": 2, "type": "DDG"}, {"id": 6, "source": 2, "target": 3, "type": "DDG"}, {"id": 7, "source": 3, "target": 4, "type": "DDG"}, {"id": 8, "source": 3, "target": 5, "type": "DDG"}, {"id": 9, "source": 3, "target": 6, "type": "DDG"}, {"id": 10, "source": 2, "target": 7, "type": "DDG"}, {"id": 11, "source": 2, "target": 8, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 28, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* initialize data in case id is not in query string */\r\n    /* POTENTIAL FLAW: Parse id param out of the URL querystring (without using getParameter()) */\r\n    {\r\n        StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\");\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            /* a token will be like \"id=foo\" */\r\n            if (token.startsWith(\"id=\")) /* check if we have the \"id\" parameter\" */\r\n            {\r\n                data = token.substring(3);\r\n                /* set data to \"foo\" */\r\n                break;\r\n                /* exit while loop */\r\n            }\r\n        }\r\n    }\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 32, "column": 9, "tokens": ["data", "=", "\"\""], "code": "data = \"\"", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR2", "=", "\"\""], "tokens_order": [6, 4, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["request", "tokenizer"], "line": 36, "column": 13, "tokens": ["StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "request", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "code": "StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), \"&\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["StringTokenizer", "VAR3", "=", "new", "StringTokenizer", "(", "VAR0", ".", "getQueryString", "(", ")", ",", "\"&\"", ")"], "tokens_order": [86, 9, 4, 7, 86, 1, 5, 3, 128, 1, 2, 8, 129, 2, 0, 0, 0, 0], "bad_source": true}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["tokenizer"], "line": 37, "column": 20, "tokens": ["tokenizer", ".", "hasMoreTokens", "(", ")"], "code": "tokenizer.hasMoreTokens()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR3", ".", "hasMoreTokens", "(", ")"], "tokens_order": [9, 3, 130, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["tokenizer", "token"], "line": 39, "column": 17, "tokens": ["String", "token", "=", "tokenizer", ".", "nextToken", "(", ")"], "code": "String token = tokenizer.nextToken()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["String", "VAR4", "=", "VAR3", ".", "nextToken", "(", ")"], "tokens_order": [20, 11, 4, 9, 3, 131, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["token"], "line": 40, "column": 20, "tokens": ["token", ".", "startsWith", "(", "\"id=\"", ")"], "code": "token.startsWith(\"id=\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR4", ".", "startsWith", "(", "\"id=\"", ")"], "tokens_order": [11, 3, 132, 1, 133, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "token"], "line": 42, "column": 21, "tokens": ["data", "=", "token", ".", "substring", "(", "3", ")"], "code": "data = token.substring(3)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR2", "=", "VAR4", ".", "substring", "(", "3", ")"], "tokens_order": [6, 4, 11, 3, 134, 1, 75, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 48, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR5", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 14, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 49, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR5", ".", "add", "(", "0", ",", "VAR2", ")"], "tokens_order": [14, 3, 53, 1, 33, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 50, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR5", ".", "add", "(", "1", ",", "VAR2", ")"], "tokens_order": [14, 3, 53, 1, 37, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 51, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["VAR5", ".", "add", "(", "2", ",", "VAR2", ")"], "tokens_order": [14, 3, 53, 1, 35, 8, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 52, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "new_tokens": ["String", "VAR9", "=", "VAR6", ".", "remove", "(", "2", ")"], "tokens_order": [20, 31, 4, 15, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "new_tokens": ["VAR9", "!=", "null"], "tokens_order": [31, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getQueryString_Servlet_73b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR9", "+", "\"\\\">\"", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 31, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 8, "type": "DDG"}, {"id": 4, "source": 6, "target": 8, "type": "DDG"}, {"id": 5, "source": 7, "target": 8, "type": "DDG"}, {"id": 6, "source": 1, "target": 9, "type": "DDG"}, {"id": 7, "source": 6, "target": 9, "type": "DDG"}, {"id": 8, "source": 7, "target": 9, "type": "DDG"}, {"id": 9, "source": 1, "target": 10, "type": "DDG"}, {"id": 10, "source": 6, "target": 10, "type": "DDG"}, {"id": 11, "source": 7, "target": 10, "type": "DDG"}, {"id": 12, "source": 0, "target": 11, "type": "DDG"}, {"id": 13, "source": 7, "target": 11, "type": "DDG"}, {"id": 14, "source": 4, "target": 5, "type": "DDG"}, {"id": 15, "source": 4, "target": 6, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 13, "target": 14, "type": "DDG"}, {"id": 2, "source": 13, "target": 15, "type": "DDG"}, {"id": 3, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_75a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    {\r\n        File file = new File(\"C:\\\\data.txt\");\r\n        FileInputStream streamFileInput = null;\r\n        InputStreamReader readerInputStream = null;\r\n        BufferedReader readerBuffered = null;\r\n        try {\r\n            /* read string from file into data */\r\n            streamFileInput = new FileInputStream(file);\r\n            readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a file */\r\n            /* This will be reading the first \"line\" of the file, which\r\n                 * could be very long if there are little or no newlines in the file */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    /* serialize data to a byte array */\r\n    ByteArrayOutputStream streamByteArrayOutput = null;\r\n    ObjectOutput outputObject = null;\r\n    try {\r\n        streamByteArrayOutput = new ByteArrayOutputStream();\r\n        outputObject = new ObjectOutputStream(streamByteArrayOutput);\r\n        outputObject.writeObject(data);\r\n        byte[] dataSerialized = streamByteArrayOutput.toByteArray();\r\n        (new CWE83_XSS_Attribute__Servlet_File_75b()).badSink(dataSerialized, request, response);\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in serialization\", exceptIO);\r\n    } finally {\r\n        /* clean up stream writing objects */\r\n        try {\r\n            if (outputObject != null) {\r\n                outputObject.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectOutputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayOutput != null) {\r\n                streamByteArrayOutput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayOutputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["file"], "line": 42, "column": 13, "tokens": ["File", "file", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "code": "File file = new File(\"C:\\\\data.txt\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["File", "VAR2", "=", "new", "File", "(", "\"C:\\\\data.txt\"", ")"], "tokens_order": [55, 6, 4, 7, 55, 1, 114, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["file", "streamFileInput"], "line": 50, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "file", ")"], "code": "streamFileInput = new FileInputStream(file)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "VAR2", ")"], "tokens_order": [9, 4, 7, 66, 1, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "streamFileInput"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "streamFileInput", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(streamFileInput, \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 8, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 57, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 70, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 82, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 92, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 94, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 110, "column": 13, "tokens": ["streamByteArrayOutput", "=", "new", "ByteArrayOutputStream", "(", ")"], "code": "streamByteArrayOutput = new ByteArrayOutputStream()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR7", "=", "new", "ByteArrayOutputStream", "(", ")"], "tokens_order": [18, 4, 7, 142, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["outputObject", "streamByteArrayOutput"], "line": 111, "column": 13, "tokens": ["outputObject", "=", "new", "ObjectOutputStream", "(", "streamByteArrayOutput", ")"], "code": "outputObject = new ObjectOutputStream(streamByteArrayOutput)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR8", "=", "new", "ObjectOutputStream", "(", "VAR7", ")"], "tokens_order": [26, 4, 7, 143, 1, 18, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "outputObject"], "line": 112, "column": 13, "tokens": ["outputObject", ".", "writeObject", "(", "data", ")"], "code": "outputObject.writeObject(data)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR8", ".", "writeObject", "(", "VAR6", ")"], "tokens_order": [26, 3, 144, 1, 15, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayOutput"], "line": 113, "column": 13, "tokens": ["byte", "[", "]", "dataSerialized", "=", "streamByteArrayOutput", ".", "toByteArray", "(", ")"], "code": "byte[] dataSerialized = streamByteArrayOutput.toByteArray()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["byte", "[", "]", "VAR9", "=", "VAR7", ".", "toByteArray", "(", ")"], "tokens_order": [51, 29, 30, 31, 4, 18, 3, 145, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_75b", "mtdSignature": "badSink(byte[], javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "13"}], "varibles": ["request", "dataSerialized", "response"], "line": 114, "column": 13, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_75b", "(", ")", ")", ".", "badSink", "(", "dataSerialized", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_75b()).badSink(dataSerialized, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 31, 8, 5, 8, 10, 2, 0, 0]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 125, "column": 21, "tokens": ["outputObject", "!=", "null"], "code": "outputObject != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["outputObject"], "line": 127, "column": 21, "tokens": ["outputObject", ".", "close", "(", ")"], "code": "outputObject.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR8", ".", "close", "(", ")"], "tokens_order": [26, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 137, "column": 21, "tokens": ["streamByteArrayOutput", "!=", "null"], "code": "streamByteArrayOutput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 20, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayOutput"], "line": 139, "column": 21, "tokens": ["streamByteArrayOutput", ".", "close", "(", ")"], "code": "streamByteArrayOutput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75a", "new_tokens": ["VAR7", ".", "close", "(", ")"], "tokens_order": [18, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 21, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "dataSerialized", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "badSink", "(", "byte", "[", "]", "dataSerialized", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(byte[] dataSerialized, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    /* unserialize data */\r\n    ByteArrayInputStream streamByteArrayInput = null;\r\n    ObjectInputStream streamObjectInput = null;\r\n    try {\r\n        streamByteArrayInput = new ByteArrayInputStream(dataSerialized);\r\n        streamObjectInput = new ObjectInputStream(streamByteArrayInput);\r\n        String data = (String) streamObjectInput.readObject();\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    } catch (IOException exceptIO) {\r\n        IO.logger.log(Level.WARNING, \"IOException in deserialization\", exceptIO);\r\n    } catch (ClassNotFoundException exceptClassNotFound) {\r\n        IO.logger.log(Level.WARNING, \"ClassNotFoundException in deserialization\", exceptClassNotFound);\r\n    } finally {\r\n        /* clean up stream reading objects */\r\n        try {\r\n            if (streamObjectInput != null) {\r\n                streamObjectInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ObjectInputStream\", exceptIO);\r\n        }\r\n        try {\r\n            if (streamByteArrayInput != null) {\r\n                streamByteArrayInput.close();\r\n            }\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error closing ByteArrayInputStream\", exceptIO);\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["public", "void", "FUN1", "(", "byte", "[", "]", "VAR10", ",", "HttpServletRequest", "VAR11", ",", "HttpServletResponse", "VAR12", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 51, 29, 30, 36, 8, 39, 44, 8, 40, 52, 2, 22, 23]}, {"id": 22, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataSerialized", "streamByteArrayInput"], "line": 37, "column": 13, "tokens": ["streamByteArrayInput", "=", "new", "ByteArrayInputStream", "(", "dataSerialized", ")"], "code": "streamByteArrayInput = new ByteArrayInputStream(dataSerialized)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR13", "=", "new", "ByteArrayInputStream", "(", "VAR10", ")"], "tokens_order": [60, 4, 7, 146, 1, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 23, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput", "streamObjectInput"], "line": 38, "column": 13, "tokens": ["streamObjectInput", "=", "new", "ObjectInputStream", "(", "streamByteArrayInput", ")"], "code": "streamObjectInput = new ObjectInputStream(streamByteArrayInput)", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR14", "=", "new", "ObjectInputStream", "(", "VAR13", ")"], "tokens_order": [77, 4, 7, 147, 1, 60, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 24, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "streamObjectInput"], "line": 39, "column": 13, "tokens": ["String", "data", "=", "(", "String", ")", "streamObjectInput", ".", "readObject", "(", ")"], "code": "String data = (String) streamObjectInput.readObject()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["String", "VAR15", "=", "(", "String", ")", "VAR14", ".", "readObject", "(", ")"], "tokens_order": [20, 91, 4, 1, 20, 2, 77, 3, 148, 1, 2, 0, 0, 0, 0, 0, 0]}, {"id": 25, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 41, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR15", "!=", "null"], "tokens_order": [91, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 26, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 44, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR12", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR15", "+", "\"\\\">\"", ")"], "tokens_order": [52, 3, 159, 1, 2, 3, 167, 1, 78, 21, 91, 21, 292, 2, 0, 0, 0], "bad_sink": true}, {"id": 27, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 61, "column": 21, "tokens": ["streamObjectInput", "!=", "null"], "code": "streamObjectInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR14", "!=", "null"], "tokens_order": [77, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 28, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamObjectInput"], "line": 63, "column": 21, "tokens": ["streamObjectInput", ".", "close", "(", ")"], "code": "streamObjectInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR14", ".", "close", "(", ")"], "tokens_order": [77, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 29, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 73, "column": 21, "tokens": ["streamByteArrayInput", "!=", "null"], "code": "streamByteArrayInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR13", "!=", "null"], "tokens_order": [60, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 30, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamByteArrayInput"], "line": 75, "column": 21, "tokens": ["streamByteArrayInput", ".", "close", "(", ")"], "code": "streamByteArrayInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_File_75b", "new_tokens": ["VAR13", ".", "close", "(", ")"], "tokens_order": [60, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 12, "target": 13, "type": "DDG"}, {"id": 11, "source": 5, "target": 14, "type": "DDG"}, {"id": 12, "source": 13, "target": 14, "type": "DDG"}, {"id": 13, "source": 12, "target": 15, "type": "DDG"}, {"id": 14, "source": 0, "target": 16, "type": "DDG"}, {"id": 15, "source": 15, "target": 16, "type": "DDG"}, {"id": 16, "source": 13, "target": 17, "type": "DDG"}, {"id": 17, "source": 13, "target": 18, "type": "DDG"}, {"id": 18, "source": 12, "target": 19, "type": "DDG"}, {"id": 19, "source": 12, "target": 20, "type": "DDG"}, {"id": "-1", "source": 16, "target": 21, "type": "func_call_out"}, {"id": 0, "source": 21, "target": 22, "type": "DDG"}, {"id": 1, "source": 22, "target": 23, "type": "DDG"}, {"id": 2, "source": 23, "target": 24, "type": "DDG"}, {"id": 3, "source": 24, "target": 25, "type": "DDG"}, {"id": 4, "source": 24, "target": 26, "type": "DDG"}, {"id": 5, "source": 21, "target": 26, "type": "DDG"}, {"id": 6, "source": 23, "target": 27, "type": "DDG"}, {"id": 7, "source": 23, "target": 28, "type": "DDG"}, {"id": 8, "source": 22, "target": 29, "type": "DDG"}, {"id": 9, "source": 22, "target": 30, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 35, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    this.badPrivate = true;\r\n    data = bad_source(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "mtdSignature": "bad_source(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 40, "column": 9, "tokens": ["data", "=", "bad_source", "(", "request", ",", "response", ")"], "code": "data = bad_source(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR2", "=", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2], "bad_sink": true}, {"id": 4, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 59, "column": 17, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["Properties", "VAR3", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 9, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 63, "column": 21, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR4", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [11, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 64, "column": 21, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR3", ".", "load", "(", "VAR4", ")"], "tokens_order": [9, 3, 101, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 66, "column": 21, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR5", "=", "VAR3", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [14, 4, 9, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 77, "column": 29, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 79, "column": 29, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 93, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["VAR5", "=", "null"], "tokens_order": [14, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 96, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_21", "new_tokens": ["return", "VAR5", ";"], "tokens_order": [84, 14, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 11, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 10, "target": 11, "type": "DDG"}, {"id": 1, "source": 7, "target": 11, "type": "DDG"}, {"id": 2, "source": 4, "target": 6, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 4, "target": 7, "type": "DDG"}, {"id": 5, "source": 5, "target": 8, "type": "DDG"}, {"id": 6, "source": 5, "target": 9, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_URLConnection_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 104, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 109, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 111, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 112, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "mtdSignature": "goodG2BSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_URLConnection_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 113, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_URLConnection_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE83_XSS_Attribute__Servlet_URLConnection_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE83_XSS_Attribute__Servlet_URLConnection_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_URLConnection_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 40, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_database_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE83_XSS_Attribute__Servlet_database_68a.data = \"\";\r\n    /* Initialize data */\r\n    /* Read data from a database */\r\n    {\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        ResultSet resultSet = null;\r\n        try {\r\n            /* setup the connection */\r\n            connection = IO.getDBConnection();\r\n            /* prepare and execute a (hardcoded) query */\r\n            preparedStatement = connection.prepareStatement(\"select name from users where id=0\");\r\n            resultSet = preparedStatement.executeQuery();\r\n            /* POTENTIAL FLAW: Read data from a database query resultset */\r\n            CWE83_XSS_Attribute__Servlet_database_68a.data = resultSet.getString(1);\r\n        } catch (SQLException exceptSql) {\r\n            IO.logger.log(Level.WARNING, \"Error with SQL statement\", exceptSql);\r\n        } finally {\r\n            /* Close database objects */\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ResultSet\", exceptSql);\r\n            }\r\n            try {\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing PreparedStatement\", exceptSql);\r\n            }\r\n            try {\r\n                if (connection != null) {\r\n                    connection.close();\r\n                }\r\n            } catch (SQLException exceptSql) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Connection\", exceptSql);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_database_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "IO", "mtdSignature": "getDBConnection()", "called_column": "30"}], "varibles": ["connection"], "line": 47, "column": 17, "tokens": ["connection", "=", "IO", ".", "getDBConnection", "(", ")"], "code": "connection = IO.getDBConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR2", "=", "CLS0", ".", "FUN1", "(", ")"], "tokens_order": [6, 4, 27, 3, 25, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "connection"], "line": 50, "column": 17, "tokens": ["preparedStatement", "=", "connection", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR3", "=", "VAR2", ".", "prepareStatement", "(", "\"select name from users where id=0\"", ")"], "tokens_order": [9, 4, 6, 3, 79, 1, 112, 2, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["preparedStatement", "resultSet"], "line": 51, "column": 17, "tokens": ["resultSet", "=", "preparedStatement", ".", "executeQuery", "(", ")"], "code": "resultSet = preparedStatement.executeQuery()", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR4", "=", "VAR3", ".", "executeQuery", "(", ")"], "tokens_order": [11, 4, 9, 3, 90, 1, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE83_XSS_Attribute__Servlet_database_68a", "resultSet"], "line": 54, "column": 17, "tokens": ["data", "=", "resultSet", ".", "getString", "(", "1", ")"], "code": "CWE83_XSS_Attribute__Servlet_database_68a.data = resultSet.getString(1)", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["data", "=", "VAR4", ".", "getString", "(", "1", ")"], "tokens_order": [301, 4, 11, 3, 113, 1, 37, 2, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 65, "column": 25, "tokens": ["resultSet", "!=", "null"], "code": "resultSet != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["resultSet"], "line": 67, "column": 25, "tokens": ["resultSet", ".", "close", "(", ")"], "code": "resultSet.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 77, "column": 25, "tokens": ["preparedStatement", "!=", "null"], "code": "preparedStatement != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["preparedStatement"], "line": 79, "column": 25, "tokens": ["preparedStatement", ".", "close", "(", ")"], "code": "preparedStatement.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 89, "column": 25, "tokens": ["connection", "!=", "null"], "code": "connection != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["connection"], "line": 91, "column": 25, "tokens": ["connection", ".", "close", "(", ")"], "code": "connection.close()", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_database_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 101, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_database_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_database_68b()).badSink(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_database_68a", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN2", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 57, 1, 5, 8, 10, 2, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE83_XSS_Attribute__Servlet_database_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_database_68b", "new_tokens": ["public", "void", "FUN2", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 57, 1, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE83_XSS_Attribute__Servlet_database_68a"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE83_XSS_Attribute__Servlet_database_68a", ".", "data"], "code": "String data = CWE83_XSS_Attribute__Servlet_database_68a.data", "java_file": "CWE83_XSS_Attribute__Servlet_database_68b", "new_tokens": ["String", "VAR7", "=", "VAR8", ".", "VAR7"], "tokens_order": [20, 18, 4, 26, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_database_68b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_database_68b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": 1, "source": 13, "target": 15, "type": "DDG"}, {"id": 2, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_URLConnection_45____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 49, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* read input from URLConnection */\r\n    {\r\n        URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection();\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data from a web server with URLConnection */\r\n            /* This will be reading the first \"line\" of the response body,\r\n                 * which could be very long if there are no newlines in the HTML */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    this.dataBad = data;\r\n    badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["urlConnection"], "line": 57, "column": 13, "tokens": ["URLConnection", "urlConnection", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "code": "URLConnection urlConnection = (new URL(\"http://www.example.org/\")).openConnection()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["URLConnection", "VAR2", "=", "(", "new", "URL", "(", "\"http://www.example.org/\"", ")", ")", ".", "openConnection", "(", ")"], "tokens_order": [107, 6, 4, 1, 7, 108, 1, 109, 2, 2, 3, 110, 1, 2]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["urlConnection", "readerInputStream"], "line": 63, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "urlConnection", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 64, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 69, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 80, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 82, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 92, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 94, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 104, "column": 9, "tokens": ["dataBad", "=", "data"], "code": "this.dataBad = data", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["dataBad", "=", "VAR5"], "tokens_order": [296, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 105, "column": 9, "tokens": ["badSink", "(", "request", ",", "response", ")"], "code": "badSink(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 36, "column": 5, "tokens": ["private", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = this.dataBad;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["private", "void", "FUN1", "(", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 39, 15, 8, 40, 18, 2, 22, 23, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "this"], "line": 38, "column": 9, "tokens": ["String", "data", "=", "dataBad"], "code": "String data = this.dataBad", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["String", "VAR8", "=", "dataBad"], "tokens_order": [20, 26, 4, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 40, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 43, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_URLConnection_45", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", "+", "\"\\\">\"", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 4, "target": 9, "type": "DDG"}, {"id": 8, "source": 0, "target": 10, "type": "DDG"}, {"id": "-1", "source": 10, "target": 11, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}, {"id": 2, "source": 11, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_22a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 29, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    CWE83_XSS_Attribute__Servlet_connect_tcp_22a.badPublicStatic = true;\r\n    data = (new CWE83_XSS_Attribute__Servlet_connect_tcp_22b()).badSource(request, response);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "mtdSignature": "badSource(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "16"}], "varibles": ["request", "data", "response"], "line": 34, "column": 9, "tokens": ["data", "=", "(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "(", ")", ")", ".", "badSource", "(", "request", ",", "response", ")"], "code": "data = (new CWE83_XSS_Attribute__Servlet_connect_tcp_22b()).badSource(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22a", "new_tokens": ["VAR2", "=", "(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [6, 4, 1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2]}, {"id": 2, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 36, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 39, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22a", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2, 0], "bad_sink": true}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR3", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [9, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 49, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 6, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 50, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 52, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 63, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 75, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 88, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 104, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["VAR6", "=", "null"], "tokens_order": [15, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "ReturnStmt", "mtdCallInfo": [], "varibles": ["data"], "line": 106, "column": 9, "tokens": ["return", "data", ";"], "code": "return data;", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_22b", "new_tokens": ["return", "VAR6", ";"], "tokens_order": [84, 15, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 1, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 3, "type": "DDG"}, {"id": 3, "source": 0, "target": 3, "type": "DDG"}, {"id": "-1", "source": 15, "target": 1, "type": "func_call_in"}, {"id": 0, "source": 7, "target": 15, "type": "DDG"}, {"id": 1, "source": 14, "target": 15, "type": "DDG"}, {"id": 2, "source": 4, "target": 5, "type": "DDG"}, {"id": 3, "source": 5, "target": 6, "type": "DDG"}, {"id": 4, "source": 6, "target": 7, "type": "DDG"}, {"id": 5, "source": 6, "target": 8, "type": "DDG"}, {"id": 6, "source": 6, "target": 9, "type": "DDG"}, {"id": 7, "source": 5, "target": 10, "type": "DDG"}, {"id": 8, "source": 5, "target": 11, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 13, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 26, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* POTENTIAL FLAW: Read data from a querystring using getParameter */\r\n    data = request.getParameter(\"name\");\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["request", "data"], "line": 31, "column": 9, "tokens": ["data", "=", "request", ".", "getParameter", "(", "\"name\"", ")"], "code": "data = request.getParameter(\"name\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54a", "new_tokens": ["VAR2", "=", "VAR0", ".", "getParameter", "(", "\"name\"", ")"], "tokens_order": [6, 4, 5, 3, 119, 1, 127, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 2, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 33, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR2", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 6, 8, 5, 8, 10, 2]}, {"id": 3, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR3", ",", "HttpServletRequest", "VAR4", ",", "HttpServletResponse", "VAR5", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 9, 8, 39, 11, 8, 40, 14, 2, 22, 23]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54b", "new_tokens": ["(", "new", "CLS1", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR4", ",", "VAR5", ")"], "tokens_order": [1, 7, 38, 1, 2, 2, 3, 25, 1, 9, 8, 11, 8, 14, 2]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54c", "new_tokens": ["(", "new", "CLS2", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR7", ",", "VAR8", ")"], "tokens_order": [1, 7, 72, 1, 2, 2, 3, 25, 1, 15, 8, 18, 8, 26, 2]}, {"id": 7, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    (new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR9", ",", "HttpServletRequest", "VAR10", ",", "HttpServletResponse", "VAR11", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 31, 8, 39, 36, 8, 40, 44, 2, 22, 23]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 27, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54d", "new_tokens": ["(", "new", "CLS3", "(", ")", ")", ".", "FUN1", "(", "VAR9", ",", "VAR10", ",", "VAR11", ")"], "tokens_order": [1, 7, 92, 1, 2, 2, 3, 25, 1, 31, 8, 36, 8, 44, 2]}, {"id": 9, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR12", ",", "HttpServletRequest", "VAR13", ",", "HttpServletResponse", "VAR14", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 52, 8, 39, 60, 8, 40, 77, 2, 22, 23]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e", "new_tokens": ["VAR12", "!=", "null"], "tokens_order": [52, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_getParameter_Servlet_54e", "new_tokens": ["VAR14", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR12", "+", "\"\\\">\"", ")"], "tokens_order": [77, 3, 159, 1, 2, 3, 167, 1, 78, 21, 52, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 0, "target": 1, "type": "DDG"}, {"id": 1, "source": 0, "target": 2, "type": "DDG"}, {"id": 2, "source": 1, "target": 2, "type": "DDG"}, {"id": "-1", "source": 2, "target": 3, "type": "func_call_out"}, {"id": 0, "source": 3, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": "-1", "source": 6, "target": 7, "type": "func_call_out"}, {"id": 0, "source": 7, "target": 8, "type": "DDG"}, {"id": "-1", "source": 8, "target": 9, "type": "func_call_out"}, {"id": 0, "source": 9, "target": 10, "type": "DDG"}, {"id": 1, "source": 9, "target": 11, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_File_67a____goodG2B", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 117, "column": 5, "tokens": ["private", "void", "goodG2B", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\nprivate void goodG2B(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    /* FIX: Use a hardcoded string */\r\n    data = \"foo\";\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_File_67b()).goodG2BSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 122, "column": 9, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 2, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 124, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["Container", "VAR3", "=", "new", "Container", "(", ")"], "tokens_order": [56, 9, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 125, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["VAR3", ".", "containerOne", "=", "VAR2"], "tokens_order": [9, 3, 70, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_File_67b", "mtdSignature": "goodG2BSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_File_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 126, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_File_67b", "(", ")", ")", ".", "goodG2BSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_File_67b()).goodG2BSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_File_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR3", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 9, 8, 5, 8, 10, 2, 0, 0]}, {"id": 5, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 38, "column": 5, "tokens": ["public", "void", "goodG2BSink", "(", "CWE83_XSS_Attribute__Servlet_File_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B() - use goodsource and badsink */\r\npublic void goodG2BSink(CWE83_XSS_Attribute__Servlet_File_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_File_67a", ".", "Container", "VAR4", ",", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 11, 8, 39, 14, 8, 40, 15, 2, 22, 23]}, {"id": 6, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 40, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["String", "VAR7", "=", "VAR4", ".", "containerOne"], "tokens_order": [20, 18, 4, 11, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 42, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 45, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_File_67b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2, 0, 0, 0]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 0, "target": 4, "type": "DDG"}, {"id": "-1", "source": 4, "target": 5, "type": "func_call_out"}, {"id": 0, "source": 5, "target": 6, "type": "DDG"}, {"id": 1, "source": 6, "target": 7, "type": "DDG"}, {"id": 2, "source": 6, "target": 8, "type": "DDG"}, {"id": 3, "source": 5, "target": 8, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 37, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    Container dataContainer = new Container();\r\n    dataContainer.containerOne = data;\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_67b()).badSink(dataContainer, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 52, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 56, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 57, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 60, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 73, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 85, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 98, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer"], "line": 108, "column": 9, "tokens": ["Container", "dataContainer", "=", "new", "Container", "(", ")"], "code": "Container dataContainer = new Container()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["Container", "VAR6", "=", "new", "Container", "(", ")"], "tokens_order": [56, 15, 4, 7, 56, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 109, "column": 9, "tokens": ["dataContainer", ".", "containerOne", "=", "data"], "code": "dataContainer.containerOne = data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["VAR6", ".", "containerOne", "=", "VAR5"], "tokens_order": [15, 3, 70, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "mtdSignature": "badSink(testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_connect_tcp_67a.Container, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["dataContainer", "request", "response"], "line": 110, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "(", ")", ")", ".", "badSink", "(", "dataContainer", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_67b()).badSink(dataContainer, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0]}, {"id": 14, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["dataContainer", "request", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "badSink", "(", "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", ".", "Container", "dataContainer", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(CWE83_XSS_Attribute__Servlet_connect_tcp_67a.Container dataContainer, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataContainer.containerOne;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["public", "void", "FUN1", "(", "CWE83_XSS_Attribute__Servlet_connect_tcp_67a", ".", "Container", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 0, 3, 56, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 15, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataContainer", "data"], "line": 27, "column": 9, "tokens": ["String", "data", "=", "dataContainer", ".", "containerOne"], "code": "String data = dataContainer.containerOne", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "containerOne"], "tokens_order": [20, 36, 4, 18, 3, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 16, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 29, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 17, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 32, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_67b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 11, "target": 12, "type": "DDG"}, {"id": 10, "source": 4, "target": 12, "type": "DDG"}, {"id": 11, "source": 11, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 13, "type": "DDG"}, {"id": "-1", "source": 13, "target": 14, "type": "func_call_out"}, {"id": 0, "source": 14, "target": 15, "type": "DDG"}, {"id": 1, "source": 15, "target": 16, "type": "DDG"}, {"id": 2, "source": 15, "target": 17, "type": "DDG"}, {"id": 3, "source": 14, "target": 17, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 42, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* retrieve the property */\r\n    {\r\n        Properties properties = new Properties();\r\n        FileInputStream streamFileInput = null;\r\n        try {\r\n            streamFileInput = new FileInputStream(\"../common/config.properties\");\r\n            properties.load(streamFileInput);\r\n            /* POTENTIAL FLAW: Read data from a .properties file */\r\n            data = properties.getProperty(\"data\");\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading object */\r\n            try {\r\n                if (streamFileInput != null) {\r\n                    streamFileInput.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing FileInputStream\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["properties"], "line": 50, "column": 13, "tokens": ["Properties", "properties", "=", "new", "Properties", "(", ")"], "code": "Properties properties = new Properties()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["Properties", "VAR2", "=", "new", "Properties", "(", ")"], "tokens_order": [71, 6, 4, 7, 71, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 55, "column": 17, "tokens": ["streamFileInput", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "code": "streamFileInput = new FileInputStream(\"../common/config.properties\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "=", "new", "FileInputStream", "(", "\"../common/config.properties\"", ")"], "tokens_order": [9, 4, 7, 66, 1, 111, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["properties", "streamFileInput"], "line": 56, "column": 17, "tokens": ["properties", ".", "load", "(", "streamFileInput", ")"], "code": "properties.load(streamFileInput)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR2", ".", "load", "(", "VAR3", ")"], "tokens_order": [6, 3, 101, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "properties"], "line": 59, "column": 17, "tokens": ["data", "=", "properties", ".", "getProperty", "(", "\"data\"", ")"], "code": "data = properties.getProperty(\"data\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR4", "=", "VAR2", ".", "getProperty", "(", "\"data\"", ")"], "tokens_order": [11, 4, 6, 3, 74, 1, 115, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 70, "column": 25, "tokens": ["streamFileInput", "!=", "null"], "code": "streamFileInput != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["streamFileInput"], "line": 72, "column": 25, "tokens": ["streamFileInput", ".", "close", "(", ")"], "code": "streamFileInput.close()", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 82, "column": 9, "tokens": ["badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["FUN1", "(", "VAR4", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [25, 1, 11, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 31, "column": 5, "tokens": ["private", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "private void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["private", "void", "FUN1", "(", "String", "VAR5", ",", "HttpServletRequest", "VAR6", ",", "HttpServletResponse", "VAR7", ")", "throws", "Throwable"], "tokens_order": [61, 24, 25, 1, 20, 14, 8, 39, 15, 8, 40, 18, 2, 22, 23]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 34, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 37, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_PropertiesFile_41", "new_tokens": ["VAR7", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [18, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 3, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 1, "target": 4, "type": "DDG"}, {"id": 3, "source": 2, "target": 5, "type": "DDG"}, {"id": 4, "source": 2, "target": 6, "type": "DDG"}, {"id": 5, "source": 0, "target": 7, "type": "DDG"}, {"id": 6, "source": 4, "target": 7, "type": "DDG"}, {"id": "-1", "source": 7, "target": 8, "type": "func_call_out"}, {"id": 0, "source": 8, "target": 9, "type": "DDG"}, {"id": 1, "source": 8, "target": 10, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 31, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_51b()).badSink(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 46, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 50, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 51, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 54, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 65, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 77, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 90, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_51b", "mtdSignature": "badSink(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response"], "line": 102, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_51b", "(", ")", ")", ".", "badSink", "(", "data", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_51b()).badSink(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR5", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 14, 8, 5, 8, 10, 2]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51b", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR6", ",", "HttpServletRequest", "VAR7", ",", "HttpServletResponse", "VAR8", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 15, 8, 39, 18, 8, 40, 26, 2, 22, 23]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 27, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51b", "new_tokens": ["VAR6", "!=", "null"], "tokens_order": [15, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 30, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_51b", "new_tokens": ["VAR8", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR6", "+", "\"\\\">\"", ")"], "tokens_order": [26, 3, 159, 1, 2, 3, 167, 1, 78, 21, 15, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": 10, "source": 4, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 12, "target": 13, "type": "DDG"}, {"id": 1, "source": 12, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    CWE83_XSS_Attribute__Servlet_connect_tcp_68a.data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            CWE83_XSS_Attribute__Servlet_connect_tcp_68a.data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_68b()).badSink(request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 47, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 51, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 52, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "readerBuffered"], "line": 55, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a.data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["data", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [301, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 66, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 68, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 78, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 80, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 91, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 93, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "mtdSignature": "badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response"], "line": 103, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "(", ")", ")", ".", "badSink", "(", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_68b()).badSink(request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 5, 8, 10, 2, 0]}, {"id": 12, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 24, "column": 5, "tokens": ["public", "void", "badSink", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = CWE83_XSS_Attribute__Servlet_connect_tcp_68a.data;\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "new_tokens": ["public", "void", "FUN1", "(", "HttpServletRequest", "VAR5", ",", "HttpServletResponse", "VAR6", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 39, 14, 8, 40, 15, 2, 22, 23, 0, 0]}, {"id": 13, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "CWE83_XSS_Attribute__Servlet_connect_tcp_68a"], "line": 26, "column": 9, "tokens": ["String", "data", "=", "CWE83_XSS_Attribute__Servlet_connect_tcp_68a", ".", "data"], "code": "String data = CWE83_XSS_Attribute__Servlet_connect_tcp_68a.data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "new_tokens": ["String", "VAR7", "=", "VAR8", ".", "VAR7"], "tokens_order": [20, 18, 4, 26, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "new_tokens": ["VAR7", "!=", "null"], "tokens_order": [18, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_68b", "new_tokens": ["VAR6", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR7", "+", "\"\\\">\"", ")"], "tokens_order": [15, 3, 159, 1, 2, 3, 167, 1, 78, 21, 18, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 0, "target": 11, "type": "DDG"}, {"id": "-1", "source": 11, "target": 12, "type": "func_call_out"}, {"id": 0, "source": 13, "target": 14, "type": "DDG"}, {"id": 1, "source": 13, "target": 15, "type": "DDG"}, {"id": 2, "source": 12, "target": 15, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using an outbound tcp connection */\r\n    {\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        try {\r\n            /* Read data using an outbound tcp connection */\r\n            socket = new Socket(\"host.example.org\", 39544);\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* clean up stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* clean up socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    LinkedList<String> dataLinkedList = new LinkedList<String>();\r\n    dataLinkedList.add(0, data);\r\n    dataLinkedList.add(1, data);\r\n    dataLinkedList.add(2, data);\r\n    (new CWE83_XSS_Attribute__Servlet_connect_tcp_73b()).badSink(dataLinkedList, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 48, "column": 17, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 52, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 53, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 56, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 67, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 79, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 92, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataLinkedList"], "line": 104, "column": 9, "tokens": ["LinkedList", "<", "String", ">", "dataLinkedList", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "code": "LinkedList<String> dataLinkedList = new LinkedList<String>()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["LinkedList", "<", "String", ">", "VAR6", "=", "new", "LinkedList", "<", "String", ">", "(", ")"], "tokens_order": [69, 32, 20, 34, 15, 4, 7, 69, 32, 20, 34, 1, 2, 0, 0, 0, 0, 0]}, {"id": 12, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 105, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "0", ",", "data", ")"], "code": "dataLinkedList.add(0, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "0", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 33, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 106, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "1", ",", "data", ")"], "code": "dataLinkedList.add(1, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "1", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 37, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 107, "column": 9, "tokens": ["dataLinkedList", ".", "add", "(", "2", ",", "data", ")"], "code": "dataLinkedList.add(2, data)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["VAR6", ".", "add", "(", "2", ",", "VAR5", ")"], "tokens_order": [15, 3, 53, 1, 35, 8, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "mtdSignature": "badSink(java.util.LinkedList<java.lang.String>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "response", "dataLinkedList"], "line": 108, "column": 9, "tokens": ["(", "new", "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "(", ")", ")", ".", "badSink", "(", "dataLinkedList", ",", "request", ",", "response", ")"], "code": "(new CWE83_XSS_Attribute__Servlet_connect_tcp_73b()).badSink(dataLinkedList, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73a", "new_tokens": ["(", "new", "CLS0", "(", ")", ")", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [1, 7, 27, 1, 2, 2, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response", "dataLinkedList"], "line": 26, "column": 5, "tokens": ["public", "void", "badSink", "(", "LinkedList", "<", "String", ">", "dataLinkedList", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void badSink(LinkedList<String> dataLinkedList, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data = dataLinkedList.remove(2);\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "new_tokens": ["public", "void", "FUN1", "(", "LinkedList", "<", "String", ">", "VAR7", ",", "HttpServletRequest", "VAR8", ",", "HttpServletResponse", "VAR9", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 69, 32, 20, 34, 18, 8, 39, 26, 8, 40, 31, 2, 22, 23]}, {"id": 17, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["data", "dataLinkedList"], "line": 28, "column": 9, "tokens": ["String", "data", "=", "dataLinkedList", ".", "remove", "(", "2", ")"], "code": "String data = dataLinkedList.remove(2)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "new_tokens": ["String", "VAR10", "=", "VAR7", ".", "remove", "(", "2", ")"], "tokens_order": [20, 36, 4, 18, 3, 89, 1, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 30, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "new_tokens": ["VAR10", "!=", "null"], "tokens_order": [36, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 19, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 33, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_73b", "new_tokens": ["VAR9", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR10", "+", "\"\\\">\"", ")"], "tokens_order": [31, 3, 159, 1, 2, 3, 167, 1, 78, 21, 36, 21, 292, 2, 0, 0, 0, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 12, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 4, "target": 13, "type": "DDG"}, {"id": 12, "source": 11, "target": 13, "type": "DDG"}, {"id": 13, "source": 4, "target": 14, "type": "DDG"}, {"id": 14, "source": 11, "target": 14, "type": "DDG"}, {"id": 15, "source": 0, "target": 15, "type": "DDG"}, {"id": 16, "source": 11, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 17, "target": 18, "type": "DDG"}, {"id": 2, "source": 17, "target": 19, "type": "DDG"}, {"id": 3, "source": 16, "target": 19, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_02____goodG2B1", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 115, "column": 5, "tokens": ["private", "void", "goodG2B1", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* goodG2B1() - use goodsource and badsink by changing true to false */\r\nprivate void goodG2B1(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    if (false) {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run\r\n             * but ensure data is inititialized before the Sink to avoid compiler errors */\r\n        data = null;\r\n    } else {\r\n        /* FIX: Use a hardcoded string */\r\n        data = \"foo\";\r\n    }\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_02", "new_tokens": ["private", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [61, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 122, "column": 13, "tokens": ["data", "=", "null"], "code": "data = null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_02", "new_tokens": ["VAR2", "=", "null"], "tokens_order": [6, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 128, "column": 13, "tokens": ["data", "=", "\"foo\""], "code": "data = \"foo\"", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_02", "new_tokens": ["VAR2", "=", "\"foo\""], "tokens_order": [6, 4, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "fixed": true}, {"id": 3, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 132, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_02", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 135, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_02", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR2", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 6, 21, 292, 2]}], "edges": [{"id": 0, "source": 2, "target": 3, "type": "DDG"}, {"id": 1, "source": 1, "target": 3, "type": "DDG"}, {"id": 2, "source": 2, "target": 4, "type": "DDG"}, {"id": 3, "source": 1, "target": 4, "type": "DDG"}, {"id": 4, "source": 0, "target": 4, "type": "DDG"}], "target": 0}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_connect_tcp_31____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "/* uses badsource and badsink */\r\npublic void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String dataCopy;\r\n    {\r\n        String data;\r\n        data = \"\";\r\n        /* Initialize data */\r\n        /* Read data using an outbound tcp connection */\r\n        {\r\n            Socket socket = null;\r\n            BufferedReader readerBuffered = null;\r\n            InputStreamReader readerInputStream = null;\r\n            try {\r\n                /* Read data using an outbound tcp connection */\r\n                socket = new Socket(\"host.example.org\", 39544);\r\n                /* read input from socket */\r\n                readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n                readerBuffered = new BufferedReader(readerInputStream);\r\n                /* POTENTIAL FLAW: Read data using an outbound tcp connection */\r\n                data = readerBuffered.readLine();\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n            } finally {\r\n                /* clean up stream reading objects */\r\n                try {\r\n                    if (readerBuffered != null) {\r\n                        readerBuffered.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n                }\r\n                try {\r\n                    if (readerInputStream != null) {\r\n                        readerInputStream.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n                }\r\n                /* clean up socket objects */\r\n                try {\r\n                    if (socket != null) {\r\n                        socket.close();\r\n                    }\r\n                } catch (IOException exceptIO) {\r\n                    IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n                }\r\n            }\r\n        }\r\n        dataCopy = data;\r\n    }\r\n    {\r\n        String data = dataCopy;\r\n        if (data != null) {\r\n            /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n            response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n        }\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 50, "column": 21, "tokens": ["socket", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "code": "socket = new Socket(\"host.example.org\", 39544)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR2", "=", "new", "Socket", "(", "\"host.example.org\"", ",", "39544", ")"], "tokens_order": [6, 4, 7, 100, 1, 103, 8, 104, 2, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 21, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR3", "=", "new", "InputStreamReader", "(", "VAR2", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [9, 4, 7, 46, 1, 6, 3, 58, 1, 2, 8, 42, 2, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 21, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR4", "=", "new", "BufferedReader", "(", "VAR3", ")"], "tokens_order": [11, 4, 7, 45, 1, 9, 2, 0, 0, 0, 0, 0, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 21, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR5", "=", "VAR4", ".", "readLine", "(", ")"], "tokens_order": [14, 4, 11, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 5, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 29, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 6, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 29, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 29, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 29, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 29, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 29, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "dataCopy"], "line": 106, "column": 13, "tokens": ["dataCopy", "=", "data"], "code": "dataCopy = data", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR6", "=", "VAR5"], "tokens_order": [15, 4, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["dataCopy", "data"], "line": 109, "column": 13, "tokens": ["String", "data", "=", "dataCopy"], "code": "String data = dataCopy", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["String", "VAR5", "=", "VAR6"], "tokens_order": [20, 14, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 111, "column": 17, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 114, "column": 17, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_connect_tcp_31", "new_tokens": ["VAR1", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR5", "+", "\"\\\">\"", ")"], "tokens_order": [10, 3, 159, 1, 2, 3, 167, 1, 78, 21, 14, 21, 292, 2], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 3, "target": 5, "type": "DDG"}, {"id": 4, "source": 3, "target": 6, "type": "DDG"}, {"id": 5, "source": 2, "target": 7, "type": "DDG"}, {"id": 6, "source": 2, "target": 8, "type": "DDG"}, {"id": 7, "source": 1, "target": 9, "type": "DDG"}, {"id": 8, "source": 1, "target": 10, "type": "DDG"}, {"id": 9, "source": 4, "target": 11, "type": "DDG"}, {"id": 10, "source": 11, "target": 12, "type": "DDG"}, {"id": 11, "source": 12, "target": 13, "type": "DDG"}, {"id": 12, "source": 12, "target": 14, "type": "DDG"}, {"id": 13, "source": 0, "target": 14, "type": "DDG"}], "target": 1}, {"cwe": "CWE83", "fun_info": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a____bad", "nodes": [{"id": 0, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "response"], "line": 33, "column": 5, "tokens": ["public", "void", "bad", "(", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void bad(HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    String data;\r\n    data = \"\";\r\n    /* Initialize data */\r\n    /* Read data using a listening tcp connection */\r\n    {\r\n        ServerSocket listener = null;\r\n        Socket socket = null;\r\n        BufferedReader readerBuffered = null;\r\n        InputStreamReader readerInputStream = null;\r\n        /* Read data using a listening tcp connection */\r\n        try {\r\n            listener = new ServerSocket(39543);\r\n            socket = listener.accept();\r\n            /* read input from socket */\r\n            readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\");\r\n            readerBuffered = new BufferedReader(readerInputStream);\r\n            /* POTENTIAL FLAW: Read data using a listening tcp connection */\r\n            data = readerBuffered.readLine();\r\n        } catch (IOException exceptIO) {\r\n            IO.logger.log(Level.WARNING, \"Error with stream reading\", exceptIO);\r\n        } finally {\r\n            /* Close stream reading objects */\r\n            try {\r\n                if (readerBuffered != null) {\r\n                    readerBuffered.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing BufferedReader\", exceptIO);\r\n            }\r\n            try {\r\n                if (readerInputStream != null) {\r\n                    readerInputStream.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing InputStreamReader\", exceptIO);\r\n            }\r\n            /* Close socket objects */\r\n            try {\r\n                if (socket != null) {\r\n                    socket.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing Socket\", exceptIO);\r\n            }\r\n            try {\r\n                if (listener != null) {\r\n                    listener.close();\r\n                }\r\n            } catch (IOException exceptIO) {\r\n                IO.logger.log(Level.WARNING, \"Error closing ServerSocket\", exceptIO);\r\n            }\r\n        }\r\n    }\r\n    CWE83_XSS_Attribute__Servlet_listen_tcp_81_base baseObject = new CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad();\r\n    baseObject.action(data, request, response);\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["public", "void", "FUN0", "(", "HttpServletRequest", "VAR0", ",", "HttpServletResponse", "VAR1", ")", "throws", "Throwable"], "tokens_order": [28, 24, 16, 1, 39, 5, 8, 40, 10, 2, 22, 23, 0, 0, 0]}, {"id": 1, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 49, "column": 17, "tokens": ["listener", "=", "new", "ServerSocket", "(", "39543", ")"], "code": "listener = new ServerSocket(39543)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR2", "=", "new", "ServerSocket", "(", "39543", ")"], "tokens_order": [6, 4, 7, 102, 1, 105, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 2, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["listener", "socket"], "line": 50, "column": 17, "tokens": ["socket", "=", "listener", ".", "accept", "(", ")"], "code": "socket = listener.accept()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR3", "=", "VAR2", ".", "accept", "(", ")"], "tokens_order": [9, 4, 6, 3, 106, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 3, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "socket"], "line": 54, "column": 17, "tokens": ["readerInputStream", "=", "new", "InputStreamReader", "(", "socket", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "code": "readerInputStream = new InputStreamReader(socket.getInputStream(), \"UTF-8\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR4", "=", "new", "InputStreamReader", "(", "VAR3", ".", "getInputStream", "(", ")", ",", "\"UTF-8\"", ")"], "tokens_order": [11, 4, 7, 46, 1, 9, 3, 58, 1, 2, 8, 42, 2, 0, 0]}, {"id": 4, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["readerInputStream", "readerBuffered"], "line": 55, "column": 17, "tokens": ["readerBuffered", "=", "new", "BufferedReader", "(", "readerInputStream", ")"], "code": "readerBuffered = new BufferedReader(readerInputStream)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR5", "=", "new", "BufferedReader", "(", "VAR4", ")"], "tokens_order": [14, 4, 7, 45, 1, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 5, "type": "AssignExpr", "mtdCallInfo": [], "varibles": ["data", "readerBuffered"], "line": 58, "column": 17, "tokens": ["data", "=", "readerBuffered", ".", "readLine", "(", ")"], "code": "data = readerBuffered.readLine()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR6", "=", "VAR5", ".", "readLine", "(", ")"], "tokens_order": [15, 4, 14, 3, 47, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], "bad_source": true}, {"id": 6, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 69, "column": 25, "tokens": ["readerBuffered", "!=", "null"], "code": "readerBuffered != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR5", "!=", "null"], "tokens_order": [14, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 7, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerBuffered"], "line": 71, "column": 25, "tokens": ["readerBuffered", ".", "close", "(", ")"], "code": "readerBuffered.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR5", ".", "close", "(", ")"], "tokens_order": [14, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 8, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 81, "column": 25, "tokens": ["readerInputStream", "!=", "null"], "code": "readerInputStream != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR4", "!=", "null"], "tokens_order": [11, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 9, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["readerInputStream"], "line": 83, "column": 25, "tokens": ["readerInputStream", ".", "close", "(", ")"], "code": "readerInputStream.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR4", ".", "close", "(", ")"], "tokens_order": [11, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 10, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 94, "column": 25, "tokens": ["socket", "!=", "null"], "code": "socket != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR3", "!=", "null"], "tokens_order": [9, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 11, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["socket"], "line": 96, "column": 25, "tokens": ["socket", ".", "close", "(", ")"], "code": "socket.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR3", ".", "close", "(", ")"], "tokens_order": [9, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 12, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 106, "column": 25, "tokens": ["listener", "!=", "null"], "code": "listener != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR2", "!=", "null"], "tokens_order": [6, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 13, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["listener"], "line": 108, "column": 25, "tokens": ["listener", ".", "close", "(", ")"], "code": "listener.close()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR2", ".", "close", "(", ")"], "tokens_order": [6, 3, 17, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 14, "type": "VariableDeclarationExpr", "mtdCallInfo": [], "varibles": ["baseObject"], "line": 118, "column": 9, "tokens": ["CWE83_XSS_Attribute__Servlet_listen_tcp_81_base", "baseObject", "=", "new", "CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad", "(", ")"], "code": "CWE83_XSS_Attribute__Servlet_listen_tcp_81_base baseObject = new CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad()", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["CLS0", "VAR7", "=", "new", "VAR", "(", ")"], "tokens_order": [27, 18, 4, 7, 78, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 15, "type": "MethodCallExpr", "mtdCallInfo": [{"className": "CWE83_XSS_Attribute__Servlet_listen_tcp_81_base", "mtdSignature": "action(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)", "called_column": "9"}], "varibles": ["request", "data", "response", "baseObject"], "line": 119, "column": 9, "tokens": ["baseObject", ".", "action", "(", "data", ",", "request", ",", "response", ")"], "code": "baseObject.action(data, request, response)", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81a", "new_tokens": ["VAR7", ".", "FUN1", "(", "VAR6", ",", "VAR0", ",", "VAR1", ")"], "tokens_order": [18, 3, 25, 1, 15, 8, 5, 8, 10, 2, 0, 0, 0, 0, 0]}, {"id": 16, "type": "MethodDeclaration", "mtdCallInfo": [], "varibles": ["request", "data", "response"], "line": 25, "column": 5, "tokens": ["public", "void", "action", "(", "String", "data", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Throwable"], "code": "public void action(String data, HttpServletRequest request, HttpServletResponse response) throws Throwable {\r\n    if (data != null) {\r\n        /* POTENTIAL FLAW: Input is not verified/sanitized before use in an image tag */\r\n        response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\");\r\n    }\r\n    return;\r\n}", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad", "new_tokens": ["public", "void", "FUN1", "(", "String", "VAR8", ",", "HttpServletRequest", "VAR9", ",", "HttpServletResponse", "VAR10", ")", "throws", "Throwable"], "tokens_order": [28, 24, 25, 1, 20, 26, 8, 39, 31, 8, 40, 36, 2, 22, 23]}, {"id": 17, "type": "BinaryExpr", "mtdCallInfo": [], "varibles": ["data"], "line": 28, "column": 13, "tokens": ["data", "!=", "null"], "code": "data != null", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad", "new_tokens": ["VAR8", "!=", "null"], "tokens_order": [26, 13, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, {"id": 18, "type": "MethodCallExpr", "mtdCallInfo": [], "varibles": ["data", "response"], "line": 31, "column": 13, "tokens": ["response", ".", "getWriter", "(", ")", ".", "println", "(", "\"<br>bad() - <img src=\\\"\"", "+", "data", "+", "\"\\\">\"", ")"], "code": "response.getWriter().println(\"<br>bad() - <img src=\\\"\" + data + \"\\\">\")", "java_file": "CWE83_XSS_Attribute__Servlet_listen_tcp_81_bad", "new_tokens": ["VAR10", ".", "getWriter", "(", ")", ".", "println", "(", "VAR", "+", "VAR8", "+", "\"\\\">\"", ")"], "tokens_order": [36, 3, 159, 1, 2, 3, 167, 1, 78, 21, 26, 21, 292, 2, 0], "bad_sink": true}], "edges": [{"id": 0, "source": 1, "target": 2, "type": "DDG"}, {"id": 1, "source": 2, "target": 3, "type": "DDG"}, {"id": 2, "source": 3, "target": 4, "type": "DDG"}, {"id": 3, "source": 4, "target": 5, "type": "DDG"}, {"id": 4, "source": 4, "target": 6, "type": "DDG"}, {"id": 5, "source": 4, "target": 7, "type": "DDG"}, {"id": 6, "source": 3, "target": 8, "type": "DDG"}, {"id": 7, "source": 3, "target": 9, "type": "DDG"}, {"id": 8, "source": 2, "target": 10, "type": "DDG"}, {"id": 9, "source": 2, "target": 11, "type": "DDG"}, {"id": 10, "source": 1, "target": 12, "type": "DDG"}, {"id": 11, "source": 1, "target": 13, "type": "DDG"}, {"id": 12, "source": 0, "target": 15, "type": "DDG"}, {"id": 13, "source": 5, "target": 15, "type": "DDG"}, {"id": 14, "source": 14, "target": 15, "type": "DDG"}, {"id": "-1", "source": 15, "target": 16, "type": "func_call_out"}, {"id": 0, "source": 16, "target": 17, "type": "DDG"}, {"id": 1, "source": 16, "target": 18, "type": "DDG"}], "target": 1}]